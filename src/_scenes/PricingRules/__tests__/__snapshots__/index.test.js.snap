// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PricingRules /> index route should render corectly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PricingRules
    createPriceRule={[Function]}
    editingAnyPriceRule={false}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Connect(SiteHeaderPresenter) />,
        <styled.div
          padding="2rem"
>
          <styled.div>
                    <styled.div
                              margin="1rem 0"
                    >
                              <Breadcrumbs
                                        crumbs={
                                                  Array [
                                                            Object {
                                                              "path": "/dashboard",
                                                              "title": "Dashboard",
                                                            },
                                                            Object {
                                                              "path": "/pricing",
                                                              "title": "Team Settings",
                                                            },
                                                          ]
                                        }
                              />
                              <Flex
                                        align="baseline"
                                        direction="row"
                                        justify="space-between"
                              >
                                        <styled.h3
                                                  type="secondary"
                                        >
                                                  Pricing Rules
                                        </styled.h3>
                                        <styled.button
                                                  disabled={false}
                                                  onClick={[Function]}
                                        >
                                                  New Rule
                                        </styled.button>
                              </Flex>
                    </styled.div>
                    <styled.div
                              height="2rem"
                    />
                    <styled.div
                              flex={1}
                    >
                              <Connect(VirtualizedPricingRulesPresenter) />
                    </styled.div>
          </styled.div>
</styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div>
            <styled.div
                        margin="1rem 0"
            >
                        <Breadcrumbs
                                    crumbs={
                                                Array [
                                                            Object {
                                                              "path": "/dashboard",
                                                              "title": "Dashboard",
                                                            },
                                                            Object {
                                                              "path": "/pricing",
                                                              "title": "Team Settings",
                                                            },
                                                          ]
                                    }
                        />
                        <Flex
                                    align="baseline"
                                    direction="row"
                                    justify="space-between"
                        >
                                    <styled.h3
                                                type="secondary"
                                    >
                                                Pricing Rules
                                    </styled.h3>
                                    <styled.button
                                                disabled={false}
                                                onClick={[Function]}
                                    >
                                                New Rule
                                    </styled.button>
                        </Flex>
            </styled.div>
            <styled.div
                        height="2rem"
            />
            <styled.div
                        flex={1}
            >
                        <Connect(VirtualizedPricingRulesPresenter) />
            </styled.div>
</styled.div>,
          "padding": "2rem",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div
                margin="1rem 0"
>
                <Breadcrumbs
                                crumbs={
                                                Array [
                                                                Object {
                                                                  "path": "/dashboard",
                                                                  "title": "Dashboard",
                                                                },
                                                                Object {
                                                                  "path": "/pricing",
                                                                  "title": "Team Settings",
                                                                },
                                                              ]
                                }
                />
                <Flex
                                align="baseline"
                                direction="row"
                                justify="space-between"
                >
                                <styled.h3
                                                type="secondary"
                                >
                                                Pricing Rules
                                </styled.h3>
                                <styled.button
                                                disabled={false}
                                                onClick={[Function]}
                                >
                                                New Rule
                                </styled.button>
                </Flex>
</styled.div>,
              <styled.div
                height="2rem"
/>,
              <styled.div
                flex={1}
>
                <Connect(VirtualizedPricingRulesPresenter) />
</styled.div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Breadcrumbs
                    crumbs={
                                        Array [
                                                            Object {
                                                              "path": "/dashboard",
                                                              "title": "Dashboard",
                                                            },
                                                            Object {
                                                              "path": "/pricing",
                                                              "title": "Team Settings",
                                                            },
                                                          ]
                    }
/>,
                  <Flex
                    align="baseline"
                    direction="row"
                    justify="space-between"
>
                    <styled.h3
                                        type="secondary"
                    >
                                        Pricing Rules
                    </styled.h3>
                    <styled.button
                                        disabled={false}
                                        onClick={[Function]}
                    >
                                        New Rule
                    </styled.button>
</Flex>,
                ],
                "margin": "1rem 0",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "crumbs": Array [
                      Object {
                        "path": "/dashboard",
                        "title": "Dashboard",
                      },
                      Object {
                        "path": "/pricing",
                        "title": "Team Settings",
                      },
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "align": "baseline",
                    "children": Array [
                      <styled.h3
                        type="secondary"
>
                        Pricing Rules
</styled.h3>,
                      <styled.button
                        disabled={false}
                        onClick={[Function]}
>
                        New Rule
</styled.button>,
                    ],
                    "direction": "row",
                    "justify": "space-between",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Pricing Rules",
                        "type": "secondary",
                      },
                      "ref": null,
                      "rendered": "Pricing Rules",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "New Rule",
                        "disabled": false,
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": "New Rule",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "height": "2rem",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Connect(VirtualizedPricingRulesPresenter) />,
                "flex": 1,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Connect(SiteHeaderPresenter) />,
          <styled.div
            padding="2rem"
>
            <styled.div>
                        <styled.div
                                    margin="1rem 0"
                        >
                                    <Breadcrumbs
                                                crumbs={
                                                            Array [
                                                                        Object {
                                                                          "path": "/dashboard",
                                                                          "title": "Dashboard",
                                                                        },
                                                                        Object {
                                                                          "path": "/pricing",
                                                                          "title": "Team Settings",
                                                                        },
                                                                      ]
                                                }
                                    />
                                    <Flex
                                                align="baseline"
                                                direction="row"
                                                justify="space-between"
                                    >
                                                <styled.h3
                                                            type="secondary"
                                                >
                                                            Pricing Rules
                                                </styled.h3>
                                                <styled.button
                                                            disabled={false}
                                                            onClick={[Function]}
                                                >
                                                            New Rule
                                                </styled.button>
                                    </Flex>
                        </styled.div>
                        <styled.div
                                    height="2rem"
                        />
                        <styled.div
                                    flex={1}
                        >
                                    <Connect(VirtualizedPricingRulesPresenter) />
                        </styled.div>
            </styled.div>
</styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <styled.div>
              <styled.div
                            margin="1rem 0"
              >
                            <Breadcrumbs
                                          crumbs={
                                                        Array [
                                                                      Object {
                                                                        "path": "/dashboard",
                                                                        "title": "Dashboard",
                                                                      },
                                                                      Object {
                                                                        "path": "/pricing",
                                                                        "title": "Team Settings",
                                                                      },
                                                                    ]
                                          }
                            />
                            <Flex
                                          align="baseline"
                                          direction="row"
                                          justify="space-between"
                            >
                                          <styled.h3
                                                        type="secondary"
                                          >
                                                        Pricing Rules
                                          </styled.h3>
                                          <styled.button
                                                        disabled={false}
                                                        onClick={[Function]}
                                          >
                                                        New Rule
                                          </styled.button>
                            </Flex>
              </styled.div>
              <styled.div
                            height="2rem"
              />
              <styled.div
                            flex={1}
              >
                            <Connect(VirtualizedPricingRulesPresenter) />
              </styled.div>
</styled.div>,
            "padding": "2rem",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  margin="1rem 0"
>
                  <Breadcrumbs
                                    crumbs={
                                                      Array [
                                                                        Object {
                                                                          "path": "/dashboard",
                                                                          "title": "Dashboard",
                                                                        },
                                                                        Object {
                                                                          "path": "/pricing",
                                                                          "title": "Team Settings",
                                                                        },
                                                                      ]
                                    }
                  />
                  <Flex
                                    align="baseline"
                                    direction="row"
                                    justify="space-between"
                  >
                                    <styled.h3
                                                      type="secondary"
                                    >
                                                      Pricing Rules
                                    </styled.h3>
                                    <styled.button
                                                      disabled={false}
                                                      onClick={[Function]}
                                    >
                                                      New Rule
                                    </styled.button>
                  </Flex>
</styled.div>,
                <styled.div
                  height="2rem"
/>,
                <styled.div
                  flex={1}
>
                  <Connect(VirtualizedPricingRulesPresenter) />
</styled.div>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Breadcrumbs
                      crumbs={
                                            Array [
                                                                  Object {
                                                                    "path": "/dashboard",
                                                                    "title": "Dashboard",
                                                                  },
                                                                  Object {
                                                                    "path": "/pricing",
                                                                    "title": "Team Settings",
                                                                  },
                                                                ]
                      }
/>,
                    <Flex
                      align="baseline"
                      direction="row"
                      justify="space-between"
>
                      <styled.h3
                                            type="secondary"
                      >
                                            Pricing Rules
                      </styled.h3>
                      <styled.button
                                            disabled={false}
                                            onClick={[Function]}
                      >
                                            New Rule
                      </styled.button>
</Flex>,
                  ],
                  "margin": "1rem 0",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "crumbs": Array [
                        Object {
                          "path": "/dashboard",
                          "title": "Dashboard",
                        },
                        Object {
                          "path": "/pricing",
                          "title": "Team Settings",
                        },
                      ],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "align": "baseline",
                      "children": Array [
                        <styled.h3
                          type="secondary"
>
                          Pricing Rules
</styled.h3>,
                        <styled.button
                          disabled={false}
                          onClick={[Function]}
>
                          New Rule
</styled.button>,
                      ],
                      "direction": "row",
                      "justify": "space-between",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Pricing Rules",
                          "type": "secondary",
                        },
                        "ref": null,
                        "rendered": "Pricing Rules",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "New Rule",
                          "disabled": false,
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": "New Rule",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "height": "2rem",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Connect(VirtualizedPricingRulesPresenter) />,
                  "flex": 1,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
