// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PricingRules /> index route should render corectly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PricingRules
    buyerTypeActions={
      Object {
        "fetchBuyerTypes": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
        "openBuyerTypesModal": [MockFunction],
      }
    }
    buyerTypes={Array []}
    editingAnyPriceRule={false}
    priceRuleActions={
      Object {
        "createPriceRule": [MockFunction],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Connect(SiteHeaderPresenter) />,
        <styled.div>
          <styled.div>
            <styled.div
              margin="1rem 0"
            >
              <Breadcrumbs
                crumbs={
                  Array [
                    Object {
                      "path": "/dashboard",
                      "title": "Dashboard",
                    },
                    Object {
                      "path": "/pricing",
                      "title": "Team Settings",
                    },
                  ]
                }
              />
              <Flex
                align="baseline"
                direction="row"
                justify="space-between"
              >
                <styled.h3
                  type="secondary"
                >
                  Pricing Rules
                </styled.h3>
                <div>
                  <styled.button
                    disabled={true}
                    onClick={[MockFunction]}
                  >
                    Buyer Types
                  </styled.button>
                  <styled.button
                    disabled={false}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginLeft": "2rem",
                      }
                    }
                  >
                    New Rule
                  </styled.button>
                </div>
              </Flex>
            </styled.div>
            <styled.div
              flex={1}
            >
              <Connect(VirtualizedPricingRulesPresenter) />
            </styled.div>
          </styled.div>
        </styled.div>,
        <Portal />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div>
            <styled.div
              margin="1rem 0"
            >
              <Breadcrumbs
                crumbs={
                  Array [
                    Object {
                      "path": "/dashboard",
                      "title": "Dashboard",
                    },
                    Object {
                      "path": "/pricing",
                      "title": "Team Settings",
                    },
                  ]
                }
              />
              <Flex
                align="baseline"
                direction="row"
                justify="space-between"
              >
                <styled.h3
                  type="secondary"
                >
                  Pricing Rules
                </styled.h3>
                <div>
                  <styled.button
                    disabled={true}
                    onClick={[MockFunction]}
                  >
                    Buyer Types
                  </styled.button>
                  <styled.button
                    disabled={false}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginLeft": "2rem",
                      }
                    }
                  >
                    New Rule
                  </styled.button>
                </div>
              </Flex>
            </styled.div>
            <styled.div
              flex={1}
            >
              <Connect(VirtualizedPricingRulesPresenter) />
            </styled.div>
          </styled.div>,
          "scrollLocked": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div
                margin="1rem 0"
              >
                <Breadcrumbs
                  crumbs={
                    Array [
                      Object {
                        "path": "/dashboard",
                        "title": "Dashboard",
                      },
                      Object {
                        "path": "/pricing",
                        "title": "Team Settings",
                      },
                    ]
                  }
                />
                <Flex
                  align="baseline"
                  direction="row"
                  justify="space-between"
                >
                  <styled.h3
                    type="secondary"
                  >
                    Pricing Rules
                  </styled.h3>
                  <div>
                    <styled.button
                      disabled={true}
                      onClick={[MockFunction]}
                    >
                      Buyer Types
                    </styled.button>
                    <styled.button
                      disabled={false}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginLeft": "2rem",
                        }
                      }
                    >
                      New Rule
                    </styled.button>
                  </div>
                </Flex>
              </styled.div>,
              <styled.div
                flex={1}
              >
                <Connect(VirtualizedPricingRulesPresenter) />
              </styled.div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Breadcrumbs
                    crumbs={
                      Array [
                        Object {
                          "path": "/dashboard",
                          "title": "Dashboard",
                        },
                        Object {
                          "path": "/pricing",
                          "title": "Team Settings",
                        },
                      ]
                    }
                  />,
                  <Flex
                    align="baseline"
                    direction="row"
                    justify="space-between"
                  >
                    <styled.h3
                      type="secondary"
                    >
                      Pricing Rules
                    </styled.h3>
                    <div>
                      <styled.button
                        disabled={true}
                        onClick={[MockFunction]}
                      >
                        Buyer Types
                      </styled.button>
                      <styled.button
                        disabled={false}
                        onClick={[Function]}
                        style={
                          Object {
                            "marginLeft": "2rem",
                          }
                        }
                      >
                        New Rule
                      </styled.button>
                    </div>
                  </Flex>,
                ],
                "margin": "1rem 0",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "crumbs": Array [
                      Object {
                        "path": "/dashboard",
                        "title": "Dashboard",
                      },
                      Object {
                        "path": "/pricing",
                        "title": "Team Settings",
                      },
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "align": "baseline",
                    "children": Array [
                      <styled.h3
                        type="secondary"
                      >
                        Pricing Rules
                      </styled.h3>,
                      <div>
                        <styled.button
                          disabled={true}
                          onClick={[MockFunction]}
                        >
                          Buyer Types
                        </styled.button>
                        <styled.button
                          disabled={false}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": "2rem",
                            }
                          }
                        >
                          New Rule
                        </styled.button>
                      </div>,
                    ],
                    "direction": "row",
                    "justify": "space-between",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Pricing Rules",
                        "type": "secondary",
                      },
                      "ref": null,
                      "rendered": "Pricing Rules",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <styled.button
                            disabled={true}
                            onClick={[MockFunction]}
                          >
                            Buyer Types
                          </styled.button>,
                          <styled.button
                            disabled={false}
                            onClick={[Function]}
                            style={
                              Object {
                                "marginLeft": "2rem",
                              }
                            }
                          >
                            New Rule
                          </styled.button>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "Buyer Types",
                            "disabled": true,
                            "onClick": [MockFunction],
                          },
                          "ref": null,
                          "rendered": "Buyer Types",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "New Rule",
                            "disabled": false,
                            "onClick": [Function],
                            "style": Object {
                              "marginLeft": "2rem",
                            },
                          },
                          "ref": null,
                          "rendered": "New Rule",
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Connect(VirtualizedPricingRulesPresenter) />,
                "flex": 1,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Connect(SiteHeaderPresenter) />,
          <styled.div>
            <styled.div>
              <styled.div
                margin="1rem 0"
              >
                <Breadcrumbs
                  crumbs={
                    Array [
                      Object {
                        "path": "/dashboard",
                        "title": "Dashboard",
                      },
                      Object {
                        "path": "/pricing",
                        "title": "Team Settings",
                      },
                    ]
                  }
                />
                <Flex
                  align="baseline"
                  direction="row"
                  justify="space-between"
                >
                  <styled.h3
                    type="secondary"
                  >
                    Pricing Rules
                  </styled.h3>
                  <div>
                    <styled.button
                      disabled={true}
                      onClick={[MockFunction]}
                    >
                      Buyer Types
                    </styled.button>
                    <styled.button
                      disabled={false}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginLeft": "2rem",
                        }
                      }
                    >
                      New Rule
                    </styled.button>
                  </div>
                </Flex>
              </styled.div>
              <styled.div
                flex={1}
              >
                <Connect(VirtualizedPricingRulesPresenter) />
              </styled.div>
            </styled.div>
          </styled.div>,
          <Portal />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <styled.div>
              <styled.div
                margin="1rem 0"
              >
                <Breadcrumbs
                  crumbs={
                    Array [
                      Object {
                        "path": "/dashboard",
                        "title": "Dashboard",
                      },
                      Object {
                        "path": "/pricing",
                        "title": "Team Settings",
                      },
                    ]
                  }
                />
                <Flex
                  align="baseline"
                  direction="row"
                  justify="space-between"
                >
                  <styled.h3
                    type="secondary"
                  >
                    Pricing Rules
                  </styled.h3>
                  <div>
                    <styled.button
                      disabled={true}
                      onClick={[MockFunction]}
                    >
                      Buyer Types
                    </styled.button>
                    <styled.button
                      disabled={false}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginLeft": "2rem",
                        }
                      }
                    >
                      New Rule
                    </styled.button>
                  </div>
                </Flex>
              </styled.div>
              <styled.div
                flex={1}
              >
                <Connect(VirtualizedPricingRulesPresenter) />
              </styled.div>
            </styled.div>,
            "scrollLocked": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  margin="1rem 0"
                >
                  <Breadcrumbs
                    crumbs={
                      Array [
                        Object {
                          "path": "/dashboard",
                          "title": "Dashboard",
                        },
                        Object {
                          "path": "/pricing",
                          "title": "Team Settings",
                        },
                      ]
                    }
                  />
                  <Flex
                    align="baseline"
                    direction="row"
                    justify="space-between"
                  >
                    <styled.h3
                      type="secondary"
                    >
                      Pricing Rules
                    </styled.h3>
                    <div>
                      <styled.button
                        disabled={true}
                        onClick={[MockFunction]}
                      >
                        Buyer Types
                      </styled.button>
                      <styled.button
                        disabled={false}
                        onClick={[Function]}
                        style={
                          Object {
                            "marginLeft": "2rem",
                          }
                        }
                      >
                        New Rule
                      </styled.button>
                    </div>
                  </Flex>
                </styled.div>,
                <styled.div
                  flex={1}
                >
                  <Connect(VirtualizedPricingRulesPresenter) />
                </styled.div>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Breadcrumbs
                      crumbs={
                        Array [
                          Object {
                            "path": "/dashboard",
                            "title": "Dashboard",
                          },
                          Object {
                            "path": "/pricing",
                            "title": "Team Settings",
                          },
                        ]
                      }
                    />,
                    <Flex
                      align="baseline"
                      direction="row"
                      justify="space-between"
                    >
                      <styled.h3
                        type="secondary"
                      >
                        Pricing Rules
                      </styled.h3>
                      <div>
                        <styled.button
                          disabled={true}
                          onClick={[MockFunction]}
                        >
                          Buyer Types
                        </styled.button>
                        <styled.button
                          disabled={false}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": "2rem",
                            }
                          }
                        >
                          New Rule
                        </styled.button>
                      </div>
                    </Flex>,
                  ],
                  "margin": "1rem 0",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "crumbs": Array [
                        Object {
                          "path": "/dashboard",
                          "title": "Dashboard",
                        },
                        Object {
                          "path": "/pricing",
                          "title": "Team Settings",
                        },
                      ],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "align": "baseline",
                      "children": Array [
                        <styled.h3
                          type="secondary"
                        >
                          Pricing Rules
                        </styled.h3>,
                        <div>
                          <styled.button
                            disabled={true}
                            onClick={[MockFunction]}
                          >
                            Buyer Types
                          </styled.button>
                          <styled.button
                            disabled={false}
                            onClick={[Function]}
                            style={
                              Object {
                                "marginLeft": "2rem",
                              }
                            }
                          >
                            New Rule
                          </styled.button>
                        </div>,
                      ],
                      "direction": "row",
                      "justify": "space-between",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Pricing Rules",
                          "type": "secondary",
                        },
                        "ref": null,
                        "rendered": "Pricing Rules",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <styled.button
                              disabled={true}
                              onClick={[MockFunction]}
                            >
                              Buyer Types
                            </styled.button>,
                            <styled.button
                              disabled={false}
                              onClick={[Function]}
                              style={
                                Object {
                                  "marginLeft": "2rem",
                                }
                              }
                            >
                              New Rule
                            </styled.button>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "Buyer Types",
                              "disabled": true,
                              "onClick": [MockFunction],
                            },
                            "ref": null,
                            "rendered": "Buyer Types",
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "New Rule",
                              "disabled": false,
                              "onClick": [Function],
                              "style": Object {
                                "marginLeft": "2rem",
                              },
                            },
                            "ref": null,
                            "rendered": "New Rule",
                            "type": [Function],
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Connect(VirtualizedPricingRulesPresenter) />,
                  "flex": 1,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
