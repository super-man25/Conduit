// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MultiSelectGroupView /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MultiSelectGroupView
    categories={
      Array [
        Object {
          "id": 2,
          "name": "Value",
        },
        Object {
          "id": 3,
          "name": "Classic",
        },
      ]
    }
    grouped={
      Object {
        "2": Array [
          Object {
            "id": 6,
            "name": "Braves at Zephyrs",
          },
          Object {
            "id": 18,
            "name": "Dogs FIGHT Cats",
          },
        ],
        "3": Array [
          Object {
            "id": 23,
            "name": "Cardinals at Zephyrs",
          },
        ],
      }
    }
    labelFn={[Function]}
    onItemClicked={[MockFunction]}
    selected={
      Array [
        18,
      ]
    }
    updatePriceRuleProperty={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <React.Fragment>
          <ForwardRef>
            <ForwardRef
              align="center"
              justify="space-between"
            >
              Value
              <ForwardRef
                color="#fff"
                onClick={[Function]}
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              >
                Select All
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            isActive={false}
            onClick={[Function]}
          >
            <ForwardRef
              align="center"
            >
              <ForwardRef
                checked={false}
                onChange={[Function]}
              />
              Braves at Zephyrs
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            isActive={true}
            onClick={[Function]}
          >
            <ForwardRef
              align="center"
            >
              <ForwardRef
                checked={true}
                onChange={[Function]}
              />
              Dogs FIGHT Cats
            </ForwardRef>
          </ForwardRef>
        </React.Fragment>,
        <React.Fragment>
          <ForwardRef>
            <ForwardRef
              align="center"
              justify="space-between"
            >
              Classic
              <ForwardRef
                color="#fff"
                onClick={[Function]}
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              >
                Select All
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            isActive={false}
            onClick={[Function]}
          >
            <ForwardRef
              align="center"
            >
              <ForwardRef
                checked={false}
                onChange={[Function]}
              />
              Cardinals at Zephyrs
            </ForwardRef>
          </ForwardRef>
        </React.Fragment>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "category2",
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef>
              <ForwardRef
                align="center"
                justify="space-between"
              >
                Value
                <ForwardRef
                  color="#fff"
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  Select All
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>,
            Array [
              <ForwardRef
                isActive={false}
                onClick={[Function]}
              >
                <ForwardRef
                  align="center"
                >
                  <ForwardRef
                    checked={false}
                    onChange={[Function]}
                  />
                  Braves at Zephyrs
                </ForwardRef>
              </ForwardRef>,
              <ForwardRef
                isActive={true}
                onClick={[Function]}
              >
                <ForwardRef
                  align="center"
                >
                  <ForwardRef
                    checked={true}
                    onChange={[Function]}
                  />
                  Dogs FIGHT Cats
                </ForwardRef>
              </ForwardRef>,
            ],
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                align="center"
                justify="space-between"
              >
                Value
                <ForwardRef
                  color="#fff"
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  Select All
                </ForwardRef>
              </ForwardRef>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "align": "center",
                "children": Array [
                  "Value",
                  <ForwardRef
                    color="#fff"
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    Select All
                  </ForwardRef>,
                ],
                "justify": "space-between",
              },
              "ref": null,
              "rendered": Array [
                "Value",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Select All",
                    "color": "#fff",
                    "onClick": [Function],
                    "style": Object {
                      "cursor": "pointer",
                    },
                  },
                  "ref": null,
                  "rendered": "Select All",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-jKJlTe",
                      "isStatic": false,
                      "rules": Array [
                        "
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
  color: ",
                        [Function],
                        ";
  margin: ",
                        [Function],
                        ";
  text-align: ",
                        [Function],
                        ";
  opacity: ",
                        [Function],
                        ";
  cursor: ",
                        [Function],
                        ";

  ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Styled(styled.p)",
                    "foldedComponentIds": Array [
                      "sc-ckVGcZ",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-jKJlTe",
                    "target": "p",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-hMqMXs",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: ",
                    [Function],
                    ";
  flex: ",
                    [Function],
                    ";
  flex-direction: ",
                    [Function],
                    "
  flex-grow: ",
                    [Function],
                    ";
  flex-shrink: ",
                    [Function],
                    ";
  flex-basis: ",
                    [Function],
                    ";
  flex-wrap: ",
                    [Function],
                    ";
  order: ",
                    [Function],
                    ";
  justify-content: ",
                    [Function],
                    ";
  align-items: ",
                    [Function],
                    ";
  align-content: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Flex",
                "foldedComponentIds": Array [
                  "sc-eNQAEJ",
                ],
                "render": [Function],
                "styledComponentId": "sc-hMqMXs",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-cpmLhU",
                "isStatic": false,
                "rules": Array [
                  "
  padding: 12px 16px;
  background-color: ",
                  [Function],
                  ";
  transition: 0.1s ease-in-out all;
  color: ",
                  "#070707",
                  ";
  white-space: normal;

  :not(:last-child) {
    border-bottom: 1px solid ",
                  "#EEEEEE",
                  ";
  }

  :hover {
    cursor: ",
                  [Function],
                  ";
    background-color: ",
                  "#f2f2f2",
                  ";
  }
",
                  "
  background-color: ",
                  "#38A9DB",
                  ";
  color: #fff;

  :hover {
    background-color: ",
                  "#38A9DB",
                  ";
  }
",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-eilVRo",
              ],
              "render": [Function],
              "styledComponentId": "sc-cpmLhU",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": "6",
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                align="center"
              >
                <ForwardRef
                  checked={false}
                  onChange={[Function]}
                />
                Braves at Zephyrs
              </ForwardRef>,
              "isActive": false,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "align": "center",
                "children": Array [
                  <ForwardRef
                    checked={false}
                    onChange={[Function]}
                  />,
                  "Braves at Zephyrs",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "checked": false,
                    "onChange": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fOKMvo",
                      "isStatic": false,
                      "rules": Array [
                        "
  margin-right: 0.5rem;
",
                      ],
                    },
                    "displayName": "styled.input",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-fOKMvo",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "Braves at Zephyrs",
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-hMqMXs",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: ",
                    [Function],
                    ";
  flex: ",
                    [Function],
                    ";
  flex-direction: ",
                    [Function],
                    "
  flex-grow: ",
                    [Function],
                    ";
  flex-shrink: ",
                    [Function],
                    ";
  flex-basis: ",
                    [Function],
                    ";
  flex-wrap: ",
                    [Function],
                    ";
  order: ",
                    [Function],
                    ";
  justify-content: ",
                    [Function],
                    ";
  align-items: ",
                    [Function],
                    ";
  align-content: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Flex",
                "foldedComponentIds": Array [
                  "sc-eNQAEJ",
                ],
                "render": [Function],
                "styledComponentId": "sc-hMqMXs",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-eilVRo",
                "isStatic": false,
                "rules": Array [
                  "
  padding: 12px 16px;
  background-color: ",
                  [Function],
                  ";
  transition: 0.1s ease-in-out all;
  color: ",
                  "#070707",
                  ";
  white-space: normal;

  :not(:last-child) {
    border-bottom: 1px solid ",
                  "#EEEEEE",
                  ";
  }

  :hover {
    cursor: ",
                  [Function],
                  ";
    background-color: ",
                  "#f2f2f2",
                  ";
  }
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-eilVRo",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": "18",
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                align="center"
              >
                <ForwardRef
                  checked={true}
                  onChange={[Function]}
                />
                Dogs FIGHT Cats
              </ForwardRef>,
              "isActive": true,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "align": "center",
                "children": Array [
                  <ForwardRef
                    checked={true}
                    onChange={[Function]}
                  />,
                  "Dogs FIGHT Cats",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "checked": true,
                    "onChange": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fOKMvo",
                      "isStatic": false,
                      "rules": Array [
                        "
  margin-right: 0.5rem;
",
                      ],
                    },
                    "displayName": "styled.input",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-fOKMvo",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "Dogs FIGHT Cats",
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-hMqMXs",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: ",
                    [Function],
                    ";
  flex: ",
                    [Function],
                    ";
  flex-direction: ",
                    [Function],
                    "
  flex-grow: ",
                    [Function],
                    ";
  flex-shrink: ",
                    [Function],
                    ";
  flex-basis: ",
                    [Function],
                    ";
  flex-wrap: ",
                    [Function],
                    ";
  order: ",
                    [Function],
                    ";
  justify-content: ",
                    [Function],
                    ";
  align-items: ",
                    [Function],
                    ";
  align-content: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Flex",
                "foldedComponentIds": Array [
                  "sc-eNQAEJ",
                ],
                "render": [Function],
                "styledComponentId": "sc-hMqMXs",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-eilVRo",
                "isStatic": false,
                "rules": Array [
                  "
  padding: 12px 16px;
  background-color: ",
                  [Function],
                  ";
  transition: 0.1s ease-in-out all;
  color: ",
                  "#070707",
                  ";
  white-space: normal;

  :not(:last-child) {
    border-bottom: 1px solid ",
                  "#EEEEEE",
                  ";
  }

  :hover {
    cursor: ",
                  [Function],
                  ";
    background-color: ",
                  "#f2f2f2",
                  ";
  }
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-eilVRo",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Symbol(react.fragment),
      },
      Object {
        "instance": null,
        "key": "category3",
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef>
              <ForwardRef
                align="center"
                justify="space-between"
              >
                Classic
                <ForwardRef
                  color="#fff"
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  Select All
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>,
            Array [
              <ForwardRef
                isActive={false}
                onClick={[Function]}
              >
                <ForwardRef
                  align="center"
                >
                  <ForwardRef
                    checked={false}
                    onChange={[Function]}
                  />
                  Cardinals at Zephyrs
                </ForwardRef>
              </ForwardRef>,
            ],
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                align="center"
                justify="space-between"
              >
                Classic
                <ForwardRef
                  color="#fff"
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  Select All
                </ForwardRef>
              </ForwardRef>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "align": "center",
                "children": Array [
                  "Classic",
                  <ForwardRef
                    color="#fff"
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    Select All
                  </ForwardRef>,
                ],
                "justify": "space-between",
              },
              "ref": null,
              "rendered": Array [
                "Classic",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Select All",
                    "color": "#fff",
                    "onClick": [Function],
                    "style": Object {
                      "cursor": "pointer",
                    },
                  },
                  "ref": null,
                  "rendered": "Select All",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-jKJlTe",
                      "isStatic": false,
                      "rules": Array [
                        "
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
  color: ",
                        [Function],
                        ";
  margin: ",
                        [Function],
                        ";
  text-align: ",
                        [Function],
                        ";
  opacity: ",
                        [Function],
                        ";
  cursor: ",
                        [Function],
                        ";

  ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Styled(styled.p)",
                    "foldedComponentIds": Array [
                      "sc-ckVGcZ",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-jKJlTe",
                    "target": "p",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-hMqMXs",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: ",
                    [Function],
                    ";
  flex: ",
                    [Function],
                    ";
  flex-direction: ",
                    [Function],
                    "
  flex-grow: ",
                    [Function],
                    ";
  flex-shrink: ",
                    [Function],
                    ";
  flex-basis: ",
                    [Function],
                    ";
  flex-wrap: ",
                    [Function],
                    ";
  order: ",
                    [Function],
                    ";
  justify-content: ",
                    [Function],
                    ";
  align-items: ",
                    [Function],
                    ";
  align-content: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Flex",
                "foldedComponentIds": Array [
                  "sc-eNQAEJ",
                ],
                "render": [Function],
                "styledComponentId": "sc-hMqMXs",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-cpmLhU",
                "isStatic": false,
                "rules": Array [
                  "
  padding: 12px 16px;
  background-color: ",
                  [Function],
                  ";
  transition: 0.1s ease-in-out all;
  color: ",
                  "#070707",
                  ";
  white-space: normal;

  :not(:last-child) {
    border-bottom: 1px solid ",
                  "#EEEEEE",
                  ";
  }

  :hover {
    cursor: ",
                  [Function],
                  ";
    background-color: ",
                  "#f2f2f2",
                  ";
  }
",
                  "
  background-color: ",
                  "#38A9DB",
                  ";
  color: #fff;

  :hover {
    background-color: ",
                  "#38A9DB",
                  ";
  }
",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-eilVRo",
              ],
              "render": [Function],
              "styledComponentId": "sc-cpmLhU",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": "23",
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                align="center"
              >
                <ForwardRef
                  checked={false}
                  onChange={[Function]}
                />
                Cardinals at Zephyrs
              </ForwardRef>,
              "isActive": false,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "align": "center",
                "children": Array [
                  <ForwardRef
                    checked={false}
                    onChange={[Function]}
                  />,
                  "Cardinals at Zephyrs",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "checked": false,
                    "onChange": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fOKMvo",
                      "isStatic": false,
                      "rules": Array [
                        "
  margin-right: 0.5rem;
",
                      ],
                    },
                    "displayName": "styled.input",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-fOKMvo",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "Cardinals at Zephyrs",
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-hMqMXs",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: ",
                    [Function],
                    ";
  flex: ",
                    [Function],
                    ";
  flex-direction: ",
                    [Function],
                    "
  flex-grow: ",
                    [Function],
                    ";
  flex-shrink: ",
                    [Function],
                    ";
  flex-basis: ",
                    [Function],
                    ";
  flex-wrap: ",
                    [Function],
                    ";
  order: ",
                    [Function],
                    ";
  justify-content: ",
                    [Function],
                    ";
  align-items: ",
                    [Function],
                    ";
  align-content: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Flex",
                "foldedComponentIds": Array [
                  "sc-eNQAEJ",
                ],
                "render": [Function],
                "styledComponentId": "sc-hMqMXs",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-eilVRo",
                "isStatic": false,
                "rules": Array [
                  "
  padding: 12px 16px;
  background-color: ",
                  [Function],
                  ";
  transition: 0.1s ease-in-out all;
  color: ",
                  "#070707",
                  ";
  white-space: normal;

  :not(:last-child) {
    border-bottom: 1px solid ",
                  "#EEEEEE",
                  ";
  }

  :hover {
    cursor: ",
                  [Function],
                  ";
    background-color: ",
                  "#f2f2f2",
                  ";
  }
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-eilVRo",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Symbol(react.fragment),
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <React.Fragment>
            <ForwardRef>
              <ForwardRef
                align="center"
                justify="space-between"
              >
                Value
                <ForwardRef
                  color="#fff"
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  Select All
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              isActive={false}
              onClick={[Function]}
            >
              <ForwardRef
                align="center"
              >
                <ForwardRef
                  checked={false}
                  onChange={[Function]}
                />
                Braves at Zephyrs
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              isActive={true}
              onClick={[Function]}
            >
              <ForwardRef
                align="center"
              >
                <ForwardRef
                  checked={true}
                  onChange={[Function]}
                />
                Dogs FIGHT Cats
              </ForwardRef>
            </ForwardRef>
          </React.Fragment>,
          <React.Fragment>
            <ForwardRef>
              <ForwardRef
                align="center"
                justify="space-between"
              >
                Classic
                <ForwardRef
                  color="#fff"
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  Select All
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              isActive={false}
              onClick={[Function]}
            >
              <ForwardRef
                align="center"
              >
                <ForwardRef
                  checked={false}
                  onChange={[Function]}
                />
                Cardinals at Zephyrs
              </ForwardRef>
            </ForwardRef>
          </React.Fragment>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "category2",
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                <ForwardRef
                  align="center"
                  justify="space-between"
                >
                  Value
                  <ForwardRef
                    color="#fff"
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    Select All
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef>,
              Array [
                <ForwardRef
                  isActive={false}
                  onClick={[Function]}
                >
                  <ForwardRef
                    align="center"
                  >
                    <ForwardRef
                      checked={false}
                      onChange={[Function]}
                    />
                    Braves at Zephyrs
                  </ForwardRef>
                </ForwardRef>,
                <ForwardRef
                  isActive={true}
                  onClick={[Function]}
                >
                  <ForwardRef
                    align="center"
                  >
                    <ForwardRef
                      checked={true}
                      onChange={[Function]}
                    />
                    Dogs FIGHT Cats
                  </ForwardRef>
                </ForwardRef>,
              ],
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  align="center"
                  justify="space-between"
                >
                  Value
                  <ForwardRef
                    color="#fff"
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    Select All
                  </ForwardRef>
                </ForwardRef>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "align": "center",
                  "children": Array [
                    "Value",
                    <ForwardRef
                      color="#fff"
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      Select All
                    </ForwardRef>,
                  ],
                  "justify": "space-between",
                },
                "ref": null,
                "rendered": Array [
                  "Value",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Select All",
                      "color": "#fff",
                      "onClick": [Function],
                      "style": Object {
                        "cursor": "pointer",
                      },
                    },
                    "ref": null,
                    "rendered": "Select All",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jKJlTe",
                        "isStatic": false,
                        "rules": Array [
                          "
  font-size: ",
                          [Function],
                          ";
  font-weight: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  margin: ",
                          [Function],
                          ";
  text-align: ",
                          [Function],
                          ";
  opacity: ",
                          [Function],
                          ";
  cursor: ",
                          [Function],
                          ";

  ",
                          [Function],
                          ";
",
                          "
    margin: ",
                          [Function],
                          ";
    margin-top: ",
                          [Function],
                          ";
    margin-bottom: ",
                          [Function],
                          ";
    margin-left: ",
                          [Function],
                          ";
    margin-right: ",
                          [Function],
                          ";

    padding: ",
                          [Function],
                          ";
    padding-top: ",
                          [Function],
                          ";
    padding-bottom: ",
                          [Function],
                          ";
    padding-left: ",
                          [Function],
                          ";
    padding-right: ",
                          [Function],
                          ";

    border: ",
                          [Function],
                          ";
    border-top: ",
                          [Function],
                          ";
    border-bottom: ",
                          [Function],
                          ";
    border-left: ",
                          [Function],
                          ";
    border-right: ",
                          [Function],
                          ";
  ",
                        ],
                      },
                      "displayName": "Styled(styled.p)",
                      "foldedComponentIds": Array [
                        "sc-ckVGcZ",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-jKJlTe",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hMqMXs",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Flex",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-hMqMXs",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-cpmLhU",
                  "isStatic": false,
                  "rules": Array [
                    "
  padding: 12px 16px;
  background-color: ",
                    [Function],
                    ";
  transition: 0.1s ease-in-out all;
  color: ",
                    "#070707",
                    ";
  white-space: normal;

  :not(:last-child) {
    border-bottom: 1px solid ",
                    "#EEEEEE",
                    ";
  }

  :hover {
    cursor: ",
                    [Function],
                    ";
    background-color: ",
                    "#f2f2f2",
                    ";
  }
",
                    "
  background-color: ",
                    "#38A9DB",
                    ";
  color: #fff;

  :hover {
    background-color: ",
                    "#38A9DB",
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-eilVRo",
                ],
                "render": [Function],
                "styledComponentId": "sc-cpmLhU",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": "6",
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  align="center"
                >
                  <ForwardRef
                    checked={false}
                    onChange={[Function]}
                  />
                  Braves at Zephyrs
                </ForwardRef>,
                "isActive": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "align": "center",
                  "children": Array [
                    <ForwardRef
                      checked={false}
                      onChange={[Function]}
                    />,
                    "Braves at Zephyrs",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "checked": false,
                      "onChange": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fOKMvo",
                        "isStatic": false,
                        "rules": Array [
                          "
  margin-right: 0.5rem;
",
                        ],
                      },
                      "displayName": "styled.input",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fOKMvo",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  "Braves at Zephyrs",
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hMqMXs",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Flex",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-hMqMXs",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eilVRo",
                  "isStatic": false,
                  "rules": Array [
                    "
  padding: 12px 16px;
  background-color: ",
                    [Function],
                    ";
  transition: 0.1s ease-in-out all;
  color: ",
                    "#070707",
                    ";
  white-space: normal;

  :not(:last-child) {
    border-bottom: 1px solid ",
                    "#EEEEEE",
                    ";
  }

  :hover {
    cursor: ",
                    [Function],
                    ";
    background-color: ",
                    "#f2f2f2",
                    ";
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-eilVRo",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": "18",
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  align="center"
                >
                  <ForwardRef
                    checked={true}
                    onChange={[Function]}
                  />
                  Dogs FIGHT Cats
                </ForwardRef>,
                "isActive": true,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "align": "center",
                  "children": Array [
                    <ForwardRef
                      checked={true}
                      onChange={[Function]}
                    />,
                    "Dogs FIGHT Cats",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "checked": true,
                      "onChange": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fOKMvo",
                        "isStatic": false,
                        "rules": Array [
                          "
  margin-right: 0.5rem;
",
                        ],
                      },
                      "displayName": "styled.input",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fOKMvo",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  "Dogs FIGHT Cats",
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hMqMXs",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Flex",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-hMqMXs",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eilVRo",
                  "isStatic": false,
                  "rules": Array [
                    "
  padding: 12px 16px;
  background-color: ",
                    [Function],
                    ";
  transition: 0.1s ease-in-out all;
  color: ",
                    "#070707",
                    ";
  white-space: normal;

  :not(:last-child) {
    border-bottom: 1px solid ",
                    "#EEEEEE",
                    ";
  }

  :hover {
    cursor: ",
                    [Function],
                    ";
    background-color: ",
                    "#f2f2f2",
                    ";
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-eilVRo",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Symbol(react.fragment),
        },
        Object {
          "instance": null,
          "key": "category3",
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                <ForwardRef
                  align="center"
                  justify="space-between"
                >
                  Classic
                  <ForwardRef
                    color="#fff"
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    Select All
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef>,
              Array [
                <ForwardRef
                  isActive={false}
                  onClick={[Function]}
                >
                  <ForwardRef
                    align="center"
                  >
                    <ForwardRef
                      checked={false}
                      onChange={[Function]}
                    />
                    Cardinals at Zephyrs
                  </ForwardRef>
                </ForwardRef>,
              ],
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  align="center"
                  justify="space-between"
                >
                  Classic
                  <ForwardRef
                    color="#fff"
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    Select All
                  </ForwardRef>
                </ForwardRef>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "align": "center",
                  "children": Array [
                    "Classic",
                    <ForwardRef
                      color="#fff"
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      Select All
                    </ForwardRef>,
                  ],
                  "justify": "space-between",
                },
                "ref": null,
                "rendered": Array [
                  "Classic",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Select All",
                      "color": "#fff",
                      "onClick": [Function],
                      "style": Object {
                        "cursor": "pointer",
                      },
                    },
                    "ref": null,
                    "rendered": "Select All",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jKJlTe",
                        "isStatic": false,
                        "rules": Array [
                          "
  font-size: ",
                          [Function],
                          ";
  font-weight: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  margin: ",
                          [Function],
                          ";
  text-align: ",
                          [Function],
                          ";
  opacity: ",
                          [Function],
                          ";
  cursor: ",
                          [Function],
                          ";

  ",
                          [Function],
                          ";
",
                          "
    margin: ",
                          [Function],
                          ";
    margin-top: ",
                          [Function],
                          ";
    margin-bottom: ",
                          [Function],
                          ";
    margin-left: ",
                          [Function],
                          ";
    margin-right: ",
                          [Function],
                          ";

    padding: ",
                          [Function],
                          ";
    padding-top: ",
                          [Function],
                          ";
    padding-bottom: ",
                          [Function],
                          ";
    padding-left: ",
                          [Function],
                          ";
    padding-right: ",
                          [Function],
                          ";

    border: ",
                          [Function],
                          ";
    border-top: ",
                          [Function],
                          ";
    border-bottom: ",
                          [Function],
                          ";
    border-left: ",
                          [Function],
                          ";
    border-right: ",
                          [Function],
                          ";
  ",
                        ],
                      },
                      "displayName": "Styled(styled.p)",
                      "foldedComponentIds": Array [
                        "sc-ckVGcZ",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-jKJlTe",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hMqMXs",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Flex",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-hMqMXs",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-cpmLhU",
                  "isStatic": false,
                  "rules": Array [
                    "
  padding: 12px 16px;
  background-color: ",
                    [Function],
                    ";
  transition: 0.1s ease-in-out all;
  color: ",
                    "#070707",
                    ";
  white-space: normal;

  :not(:last-child) {
    border-bottom: 1px solid ",
                    "#EEEEEE",
                    ";
  }

  :hover {
    cursor: ",
                    [Function],
                    ";
    background-color: ",
                    "#f2f2f2",
                    ";
  }
",
                    "
  background-color: ",
                    "#38A9DB",
                    ";
  color: #fff;

  :hover {
    background-color: ",
                    "#38A9DB",
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-eilVRo",
                ],
                "render": [Function],
                "styledComponentId": "sc-cpmLhU",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": "23",
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  align="center"
                >
                  <ForwardRef
                    checked={false}
                    onChange={[Function]}
                  />
                  Cardinals at Zephyrs
                </ForwardRef>,
                "isActive": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "align": "center",
                  "children": Array [
                    <ForwardRef
                      checked={false}
                      onChange={[Function]}
                    />,
                    "Cardinals at Zephyrs",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "checked": false,
                      "onChange": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fOKMvo",
                        "isStatic": false,
                        "rules": Array [
                          "
  margin-right: 0.5rem;
",
                        ],
                      },
                      "displayName": "styled.input",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fOKMvo",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  "Cardinals at Zephyrs",
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hMqMXs",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Flex",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-hMqMXs",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eilVRo",
                  "isStatic": false,
                  "rules": Array [
                    "
  padding: 12px 16px;
  background-color: ",
                    [Function],
                    ";
  transition: 0.1s ease-in-out all;
  color: ",
                    "#070707",
                    ";
  white-space: normal;

  :not(:last-child) {
    border-bottom: 1px solid ",
                    "#EEEEEE",
                    ";
  }

  :hover {
    cursor: ",
                    [Function],
                    ";
    background-color: ",
                    "#f2f2f2",
                    ";
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-eilVRo",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Symbol(react.fragment),
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
