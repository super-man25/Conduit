// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<GroupedSplitButton /> should render correctly 1`] = `
<styled.div>
  <styled.span
    isActive={false}
    onClick={[Function]}
  >
    Uncategorized
  </styled.span>
  <styled.span
    isActive={true}
    onClick={[Function]}
  >
    By Category
  </styled.span>
</styled.div>
`;

exports[`<MultiSelect /> should render correctly 1`] = `
<withClickAway(styled.div)
  onClick={[Function]}
  onClickAway={[Function]}
>
  <Icon
    color="#070707"
    name="arrowDown"
    size={12}
  />
  <div
    style={
      Object {
        "position": "fixed",
        "zIndex": 9,
      }
    }
  >
    <styled.div
      show={false}
      style={
        Object {
          "maxHeight": Object {},
        }
      }
    >
      <styled.div>
        <styled.input
          onChange={[Function]}
          placeholder="Filter..."
          value=""
        />
      </styled.div>
      <Flex
        align="center"
        flexWrap="wrap"
        justify="space-between"
        padding="1rem"
        style={
          Object {
            "backgroundColor": "#FFFFFF",
          }
        }
      >
        <Styled(styled.p)
          size={13}
          weight={600}
        >
          Events
        </Styled(styled.p)>
        <Styled(styled.p)
          color="#38A9DB"
          onClick={[Function]}
          style={
            Object {
              "cursor": "pointer",
            }
          }
        >
          Select All
        </Styled(styled.p)>
      </Flex>
      <MultiSelectView
        labelFn={[MockFunction]}
        onItemClicked={[MockFunction]}
        options={
          Array [
            Object {
              "id": 2,
              "name": "Braves at Zephyrs",
            },
            Object {
              "id": 5,
              "name": "Dogs at Cats",
            },
            Object {
              "id": 17,
              "name": "Mariners at Zephyrs",
            },
          ]
        }
        selected={
          Array [
            17,
          ]
        }
      />
    </styled.div>
  </div>
</withClickAway(styled.div)>
`;

exports[`<MultiSelect /> should update the state if the grouped view is toggled 1`] = `
<withClickAway(styled.div)
  onClick={[Function]}
  onClickAway={[Function]}
>
  <Icon
    color="#070707"
    name="arrowDown"
    size={12}
  />
  <div
    style={
      Object {
        "position": "fixed",
        "zIndex": 9,
      }
    }
  >
    <styled.div
      show={false}
      style={
        Object {
          "maxHeight": Object {},
        }
      }
    >
      <styled.div>
        <styled.input
          onChange={[Function]}
          placeholder="Filter..."
          value=""
        />
      </styled.div>
      <Flex
        align="center"
        flexWrap="wrap"
        justify="space-between"
        padding="1rem"
        style={
          Object {
            "backgroundColor": "#FFFFFF",
          }
        }
      >
        <Styled(styled.p)
          size={13}
          weight={600}
        >
          Events
        </Styled(styled.p)>
        <Styled(styled.p)
          color="#38A9DB"
          onClick={[Function]}
          style={
            Object {
              "cursor": "pointer",
            }
          }
        >
          Select All
        </Styled(styled.p)>
        <GroupedSplitButton
          isGrouped={false}
          selectGrouping={[Function]}
        />
      </Flex>
      <MultiSelectView
        labelFn={[MockFunction]}
        onItemClicked={[MockFunction]}
        options={
          Array [
            Object {
              "id": 2,
              "name": "Braves at Zephyrs",
            },
            Object {
              "id": 5,
              "name": "Dogs at Cats",
            },
            Object {
              "id": 17,
              "name": "Mariners at Zephyrs",
            },
          ]
        }
        selected={
          Array [
            17,
          ]
        }
      />
    </styled.div>
  </div>
</withClickAway(styled.div)>
`;
