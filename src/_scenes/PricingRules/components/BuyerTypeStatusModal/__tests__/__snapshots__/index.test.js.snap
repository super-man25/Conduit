// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BuyerTypeStatusModalPresenter /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BuyerTypeStatusModalPresenter
    buyerTypeActions={
      Object {
        "closeBuyerTypesModal": [MockFunction],
        "updateBuyerTypes": [MockFunction],
      }
    }
    buyerTypes={Array []}
    buyerTypesInActivePriceRules={Array []}
    error={null}
    isLoading={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          <ForwardRef>
            <ForwardRef
              type="secondary"
            >
              Buyer Types
            </ForwardRef>
            <ForwardRef
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-eerKOB",
                    "isStatic": false,
                    "rules": Array [
                      "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                      [Function],
                      ";
  background-image: ",
                      [Function],
                      ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                      [Function],
                      ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                      [Function],
                      ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                      [Function],
                      ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                      "#999999",
                      ";
  }
",
                      "
  border-radius: 20px;
  height: 35px;
  width: 80px;
",
                    ],
                  },
                  "displayName": "Styled(styled.input)",
                  "foldedComponentIds": Array [
                    "sc-jWBwVP",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-eerKOB",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              onChange={[Function]}
              placeholder="Filter Buyer Types"
            />
          </ForwardRef>
          <ForwardRef>
            <BuyerTypeHeader />
            <ForwardRef
              margin="1rem"
            />
            <ForwardRef
              align="center"
              direction="column"
              justify="center"
            />
          </ForwardRef>
          <ForwardRef>
            <ForwardRef
              color="#DC0A0A"
              margin="0 1rem 1rem 0"
              size={12}
              weight={300}
            />
            <ForwardRef
              align="center"
              justify="flex-end"
            >
              <ForwardRef
                disabled={false}
                onClick={[MockFunction]}
              >
                Cancel
              </ForwardRef>
              <ForwardRef
                margin="1rem"
              />
              <ForwardRef
                disabled={true}
                onClick={[Function]}
              >
                Save
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>,
        <ForwardRef
          onClick={[MockFunction]}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef>
              <ForwardRef
                type="secondary"
              >
                Buyer Types
              </ForwardRef>
              <ForwardRef
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-eerKOB",
                      "isStatic": false,
                      "rules": Array [
                        "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                        [Function],
                        ";
  background-image: ",
                        [Function],
                        ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                        [Function],
                        ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                        [Function],
                        ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                        [Function],
                        ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                        "#999999",
                        ";
  }
",
                        "
  border-radius: 20px;
  height: 35px;
  width: 80px;
",
                      ],
                    },
                    "displayName": "Styled(styled.input)",
                    "foldedComponentIds": Array [
                      "sc-jWBwVP",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-eerKOB",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                onChange={[Function]}
                placeholder="Filter Buyer Types"
              />
            </ForwardRef>,
            <ForwardRef>
              <BuyerTypeHeader />
              <ForwardRef
                margin="1rem"
              />
              <ForwardRef
                align="center"
                direction="column"
                justify="center"
              />
            </ForwardRef>,
            <ForwardRef>
              <ForwardRef
                color="#DC0A0A"
                margin="0 1rem 1rem 0"
                size={12}
                weight={300}
              />
              <ForwardRef
                align="center"
                justify="flex-end"
              >
                <ForwardRef
                  disabled={false}
                  onClick={[MockFunction]}
                >
                  Cancel
                </ForwardRef>
                <ForwardRef
                  margin="1rem"
                />
                <ForwardRef
                  disabled={true}
                  onClick={[Function]}
                >
                  Save
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef
                  type="secondary"
                >
                  Buyer Types
                </ForwardRef>,
                <ForwardRef
                  component={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-eerKOB",
                        "isStatic": false,
                        "rules": Array [
                          "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                          [Function],
                          ";
  background-image: ",
                          [Function],
                          ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                          [Function],
                          ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                          [Function],
                          ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                          [Function],
                          ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                          "#999999",
                          ";
  }
",
                          "
  border-radius: 20px;
  height: 35px;
  width: 80px;
",
                        ],
                      },
                      "displayName": "Styled(styled.input)",
                      "foldedComponentIds": Array [
                        "sc-jWBwVP",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-eerKOB",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  onChange={[Function]}
                  placeholder="Filter Buyer Types"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Buyer Types",
                  "type": "secondary",
                },
                "ref": null,
                "rendered": "Buyer Types",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-eilVRo",
                    "isStatic": false,
                    "rules": Array [
                      "
    color: ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      ";
    font-weight: ",
                      [Function],
                      ";
  ",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  margin: 0;
  margin-bottom: 2rem;
  color: ",
                      "#070707",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(Styled(styled.h4))",
                  "foldedComponentIds": Array [
                    "sc-fjdhpX",
                    "sc-jzJRlG",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-eilVRo",
                  "target": "h4",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "component": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-eerKOB",
                      "isStatic": false,
                      "rules": Array [
                        "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                        [Function],
                        ";
  background-image: ",
                        [Function],
                        ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                        [Function],
                        ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                        [Function],
                        ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                        [Function],
                        ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                        "#999999",
                        ";
  }
",
                        "
  border-radius: 20px;
  height: 35px;
  width: 80px;
",
                      ],
                    },
                    "displayName": "Styled(styled.input)",
                    "foldedComponentIds": Array [
                      "sc-jWBwVP",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-eerKOB",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                  "onChange": [Function],
                  "placeholder": "Filter Buyer Types",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jWBwVP",
                    "isStatic": false,
                    "rules": Array [
                      "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                      [Function],
                      ";
  background-image: ",
                      [Function],
                      ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                      [Function],
                      ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                      [Function],
                      ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                      [Function],
                      ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                      "#999999",
                      ";
  }
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jWBwVP",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-cbkKFq",
                "isStatic": true,
                "rules": Array [
                  "
  padding: 1.5rem;
  background-color: ",
                  "#F8F8F8",
                  ";
  border-bottom: 1px solid ",
                  "#024A8F",
                  ";
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-cbkKFq",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <BuyerTypeHeader />,
                <ForwardRef
                  margin="1rem"
                />,
                <ForwardRef
                  align="center"
                  direction="column"
                  justify="center"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "margin": "1rem",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-ksYbfQ",
                    "isStatic": false,
                    "rules": Array [
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-ksYbfQ",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "align": "center",
                  "children": Array [],
                  "direction": "column",
                  "justify": "center",
                },
                "ref": null,
                "rendered": Array [],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hMqMXs",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Flex",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-hMqMXs",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-krvtoX",
                "isStatic": true,
                "rules": Array [
                  "
  padding: 1rem 2rem;
  height: 400px;
  overflow-x: hidden;
  overflow-y: scroll;
  background-color: ",
                  "#F8F8F8",
                  ";
  border-bottom: 1px solid ",
                  "#024A8F",
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-krvtoX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef
                  color="#DC0A0A"
                  margin="0 1rem 1rem 0"
                  size={12}
                  weight={300}
                />,
                <ForwardRef
                  align="center"
                  justify="flex-end"
                >
                  <ForwardRef
                    disabled={false}
                    onClick={[MockFunction]}
                  >
                    Cancel
                  </ForwardRef>
                  <ForwardRef
                    margin="1rem"
                  />
                  <ForwardRef
                    disabled={true}
                    onClick={[Function]}
                  >
                    Save
                  </ForwardRef>
                </ForwardRef>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": null,
                  "color": "#DC0A0A",
                  "margin": "0 1rem 1rem 0",
                  "size": 12,
                  "weight": 300,
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gHboQg",
                    "isStatic": false,
                    "rules": Array [
                      "
  font-size: ",
                      [Function],
                      ";
  font-weight: ",
                      [Function],
                      ";
  color: ",
                      [Function],
                      ";
  margin: ",
                      [Function],
                      ";
  text-align: ",
                      [Function],
                      ";
  opacity: ",
                      [Function],
                      ";
  cursor: ",
                      [Function],
                      ";

  ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  text-align: right;
",
                    ],
                  },
                  "displayName": "Styled(Styled(styled.p))",
                  "foldedComponentIds": Array [
                    "sc-ckVGcZ",
                    "sc-jKJlTe",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-gHboQg",
                  "target": "p",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "align": "center",
                  "children": Array [
                    <ForwardRef
                      disabled={false}
                      onClick={[MockFunction]}
                    >
                      Cancel
                    </ForwardRef>,
                    <ForwardRef
                      margin="1rem"
                    />,
                    <ForwardRef
                      disabled={true}
                      onClick={[Function]}
                    >
                      Save
                    </ForwardRef>,
                  ],
                  "justify": "flex-end",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Cancel",
                      "disabled": false,
                      "onClick": [MockFunction],
                    },
                    "ref": null,
                    "rendered": "Cancel",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gzVnrw",
                        "isStatic": false,
                        "rules": Array [
                          "
  min-width: 100px;
  padding: 0 1rem;
  border: none;
  border-radius: 3px;
  height: ",
                          [Function],
                          ";
  background-color: ",
                          "#38A9DB",
                          ";
  color: ",
                          "#FFFFFF",
                          ";
  transition: opacity 100ms ease-out;
  margin: ",
                          [Function],
                          ";

  &:disabled {
    opacity: 0.3;
    background-color: ",
                          "#D1D1D1",
                          ";
  }

  &:hover:not(:disabled) {
    background-color: ",
                          "#024A8F",
                          ";
    cursor: pointer;
  }
",
                          "
  background-color: ",
                          "#FFFFFF",
                          ";
  border: 1px solid ",
                          "#38A9DB",
                          ";
  color: ",
                          "#38A9DB",
                          ";

  &:hover:not(:disabled) {
    background-color: ",
                          "#FFFFFF",
                          ";
    border: 1px solid ",
                          "#024A8F",
                          ";
    color: ",
                          "#024A8F",
                          ";
  }
",
                        ],
                      },
                      "displayName": "Styled(styled.button)",
                      "foldedComponentIds": Array [
                        "sc-bZQynM",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-gzVnrw",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "margin": "1rem",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ksYbfQ",
                        "isStatic": false,
                        "rules": Array [
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ksYbfQ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Save",
                      "disabled": true,
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Save",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bZQynM",
                        "isStatic": false,
                        "rules": Array [
                          "
  min-width: 100px;
  padding: 0 1rem;
  border: none;
  border-radius: 3px;
  height: ",
                          [Function],
                          ";
  background-color: ",
                          "#38A9DB",
                          ";
  color: ",
                          "#FFFFFF",
                          ";
  transition: opacity 100ms ease-out;
  margin: ",
                          [Function],
                          ";

  &:disabled {
    opacity: 0.3;
    background-color: ",
                          "#D1D1D1",
                          ";
  }

  &:hover:not(:disabled) {
    background-color: ",
                          "#024A8F",
                          ";
    cursor: pointer;
  }
",
                        ],
                      },
                      "displayName": "styled.button",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bZQynM",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hMqMXs",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Flex",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-hMqMXs",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-fYiAbW",
                "isStatic": true,
                "rules": Array [
                  "
  padding: 1.5rem;
  background-color: ",
                  "#F8F8F8",
                  ";
  border-bottom: ",
                  "#024A8F",
                  ";
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-fYiAbW",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-eLExRp",
            "isStatic": true,
            "rules": Array [
              "
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 500px;
  z-index: 9;
  box-shadow: 0 1px 10px rgba(0, 0, 0, 0.27);
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-eLExRp",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "onClick": [MockFunction],
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-lkqHmb",
            "isStatic": true,
            "rules": Array [
              "
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  opacity: 0.4;
  background-color: ",
              "#070707",
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-lkqHmb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-dxgOiQ",
        "isStatic": false,
        "rules": Array [
          "
  width: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
",
          "
    margin: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
    margin-left: ",
          [Function],
          ";
    margin-right: ",
          [Function],
          ";

    padding: ",
          [Function],
          ";
    padding-top: ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    padding-left: ",
          [Function],
          ";
    padding-right: ",
          [Function],
          ";

    border: ",
          [Function],
          ";
    border-top: ",
          [Function],
          ";
    border-bottom: ",
          [Function],
          ";
    border-left: ",
          [Function],
          ";
    border-right: ",
          [Function],
          ";
  ",
        ],
      },
      "displayName": "Styled(styled.div)",
      "foldedComponentIds": Array [
        "sc-kpOJdX",
      ],
      "render": [Function],
      "styledComponentId": "sc-dxgOiQ",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            <ForwardRef>
              <ForwardRef
                type="secondary"
              >
                Buyer Types
              </ForwardRef>
              <ForwardRef
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-eerKOB",
                      "isStatic": false,
                      "rules": Array [
                        "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                        [Function],
                        ";
  background-image: ",
                        [Function],
                        ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                        [Function],
                        ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                        [Function],
                        ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                        [Function],
                        ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                        "#999999",
                        ";
  }
",
                        "
  border-radius: 20px;
  height: 35px;
  width: 80px;
",
                      ],
                    },
                    "displayName": "Styled(styled.input)",
                    "foldedComponentIds": Array [
                      "sc-jWBwVP",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-eerKOB",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                onChange={[Function]}
                placeholder="Filter Buyer Types"
              />
            </ForwardRef>
            <ForwardRef>
              <BuyerTypeHeader />
              <ForwardRef
                margin="1rem"
              />
              <ForwardRef
                align="center"
                direction="column"
                justify="center"
              />
            </ForwardRef>
            <ForwardRef>
              <ForwardRef
                color="#DC0A0A"
                margin="0 1rem 1rem 0"
                size={12}
                weight={300}
              />
              <ForwardRef
                align="center"
                justify="flex-end"
              >
                <ForwardRef
                  disabled={false}
                  onClick={[MockFunction]}
                >
                  Cancel
                </ForwardRef>
                <ForwardRef
                  margin="1rem"
                />
                <ForwardRef
                  disabled={true}
                  onClick={[Function]}
                >
                  Save
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>,
          <ForwardRef
            onClick={[MockFunction]}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                <ForwardRef
                  type="secondary"
                >
                  Buyer Types
                </ForwardRef>
                <ForwardRef
                  component={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-eerKOB",
                        "isStatic": false,
                        "rules": Array [
                          "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                          [Function],
                          ";
  background-image: ",
                          [Function],
                          ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                          [Function],
                          ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                          [Function],
                          ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                          [Function],
                          ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                          "#999999",
                          ";
  }
",
                          "
  border-radius: 20px;
  height: 35px;
  width: 80px;
",
                        ],
                      },
                      "displayName": "Styled(styled.input)",
                      "foldedComponentIds": Array [
                        "sc-jWBwVP",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-eerKOB",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  onChange={[Function]}
                  placeholder="Filter Buyer Types"
                />
              </ForwardRef>,
              <ForwardRef>
                <BuyerTypeHeader />
                <ForwardRef
                  margin="1rem"
                />
                <ForwardRef
                  align="center"
                  direction="column"
                  justify="center"
                />
              </ForwardRef>,
              <ForwardRef>
                <ForwardRef
                  color="#DC0A0A"
                  margin="0 1rem 1rem 0"
                  size={12}
                  weight={300}
                />
                <ForwardRef
                  align="center"
                  justify="flex-end"
                >
                  <ForwardRef
                    disabled={false}
                    onClick={[MockFunction]}
                  >
                    Cancel
                  </ForwardRef>
                  <ForwardRef
                    margin="1rem"
                  />
                  <ForwardRef
                    disabled={true}
                    onClick={[Function]}
                  >
                    Save
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    type="secondary"
                  >
                    Buyer Types
                  </ForwardRef>,
                  <ForwardRef
                    component={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [
                          [Function],
                        ],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-eerKOB",
                          "isStatic": false,
                          "rules": Array [
                            "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                            [Function],
                            ";
  background-image: ",
                            [Function],
                            ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                            [Function],
                            ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                            [Function],
                            ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                            [Function],
                            ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                            "#999999",
                            ";
  }
",
                            "
  border-radius: 20px;
  height: 35px;
  width: 80px;
",
                          ],
                        },
                        "displayName": "Styled(styled.input)",
                        "foldedComponentIds": Array [
                          "sc-jWBwVP",
                        ],
                        "render": [Function],
                        "styledComponentId": "sc-eerKOB",
                        "target": "input",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    onChange={[Function]}
                    placeholder="Filter Buyer Types"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Buyer Types",
                    "type": "secondary",
                  },
                  "ref": null,
                  "rendered": "Buyer Types",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-eilVRo",
                      "isStatic": false,
                      "rules": Array [
                        "
    color: ",
                        [Function],
                        ";
    font-size: ",
                        [Function],
                        ";
    font-weight: ",
                        [Function],
                        ";
  ",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  margin: 0;
  margin-bottom: 2rem;
  color: ",
                        "#070707",
                        ";
",
                      ],
                    },
                    "displayName": "Styled(Styled(styled.h4))",
                    "foldedComponentIds": Array [
                      "sc-fjdhpX",
                      "sc-jzJRlG",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-eilVRo",
                    "target": "h4",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-eerKOB",
                        "isStatic": false,
                        "rules": Array [
                          "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                          [Function],
                          ";
  background-image: ",
                          [Function],
                          ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                          [Function],
                          ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                          [Function],
                          ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                          [Function],
                          ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                          "#999999",
                          ";
  }
",
                          "
  border-radius: 20px;
  height: 35px;
  width: 80px;
",
                        ],
                      },
                      "displayName": "Styled(styled.input)",
                      "foldedComponentIds": Array [
                        "sc-jWBwVP",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-eerKOB",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "onChange": [Function],
                    "placeholder": "Filter Buyer Types",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-jWBwVP",
                      "isStatic": false,
                      "rules": Array [
                        "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                        [Function],
                        ";
  background-image: ",
                        [Function],
                        ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                        [Function],
                        ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                        [Function],
                        ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                        [Function],
                        ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                        "#999999",
                        ";
  }
",
                      ],
                    },
                    "displayName": "styled.input",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-jWBwVP",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-cbkKFq",
                  "isStatic": true,
                  "rules": Array [
                    "
  padding: 1.5rem;
  background-color: ",
                    "#F8F8F8",
                    ";
  border-bottom: 1px solid ",
                    "#024A8F",
                    ";
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-cbkKFq",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <BuyerTypeHeader />,
                  <ForwardRef
                    margin="1rem"
                  />,
                  <ForwardRef
                    align="center"
                    direction="column"
                    justify="center"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "margin": "1rem",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-ksYbfQ",
                      "isStatic": false,
                      "rules": Array [
                        "
  ",
                        [Function],
                        "
  ",
                        [Function],
                        "
  ",
                        [Function],
                        "
  ",
                        [Function],
                        "
  ",
                        [Function],
                        "
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-ksYbfQ",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "align": "center",
                    "children": Array [],
                    "direction": "column",
                    "justify": "center",
                  },
                  "ref": null,
                  "rendered": Array [],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-hMqMXs",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: ",
                        [Function],
                        ";
  flex: ",
                        [Function],
                        ";
  flex-direction: ",
                        [Function],
                        "
  flex-grow: ",
                        [Function],
                        ";
  flex-shrink: ",
                        [Function],
                        ";
  flex-basis: ",
                        [Function],
                        ";
  flex-wrap: ",
                        [Function],
                        ";
  order: ",
                        [Function],
                        ";
  justify-content: ",
                        [Function],
                        ";
  align-items: ",
                        [Function],
                        ";
  align-content: ",
                        [Function],
                        ";
  align-self: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  width: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Flex",
                    "foldedComponentIds": Array [
                      "sc-eNQAEJ",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-hMqMXs",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-krvtoX",
                  "isStatic": true,
                  "rules": Array [
                    "
  padding: 1rem 2rem;
  height: 400px;
  overflow-x: hidden;
  overflow-y: scroll;
  background-color: ",
                    "#F8F8F8",
                    ";
  border-bottom: 1px solid ",
                    "#024A8F",
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-krvtoX",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    color="#DC0A0A"
                    margin="0 1rem 1rem 0"
                    size={12}
                    weight={300}
                  />,
                  <ForwardRef
                    align="center"
                    justify="flex-end"
                  >
                    <ForwardRef
                      disabled={false}
                      onClick={[MockFunction]}
                    >
                      Cancel
                    </ForwardRef>
                    <ForwardRef
                      margin="1rem"
                    />
                    <ForwardRef
                      disabled={true}
                      onClick={[Function]}
                    >
                      Save
                    </ForwardRef>
                  </ForwardRef>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": null,
                    "color": "#DC0A0A",
                    "margin": "0 1rem 1rem 0",
                    "size": 12,
                    "weight": 300,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-gHboQg",
                      "isStatic": false,
                      "rules": Array [
                        "
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
  color: ",
                        [Function],
                        ";
  margin: ",
                        [Function],
                        ";
  text-align: ",
                        [Function],
                        ";
  opacity: ",
                        [Function],
                        ";
  cursor: ",
                        [Function],
                        ";

  ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  text-align: right;
",
                      ],
                    },
                    "displayName": "Styled(Styled(styled.p))",
                    "foldedComponentIds": Array [
                      "sc-ckVGcZ",
                      "sc-jKJlTe",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-gHboQg",
                    "target": "p",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "align": "center",
                    "children": Array [
                      <ForwardRef
                        disabled={false}
                        onClick={[MockFunction]}
                      >
                        Cancel
                      </ForwardRef>,
                      <ForwardRef
                        margin="1rem"
                      />,
                      <ForwardRef
                        disabled={true}
                        onClick={[Function]}
                      >
                        Save
                      </ForwardRef>,
                    ],
                    "justify": "flex-end",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Cancel",
                        "disabled": false,
                        "onClick": [MockFunction],
                      },
                      "ref": null,
                      "rendered": "Cancel",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-gzVnrw",
                          "isStatic": false,
                          "rules": Array [
                            "
  min-width: 100px;
  padding: 0 1rem;
  border: none;
  border-radius: 3px;
  height: ",
                            [Function],
                            ";
  background-color: ",
                            "#38A9DB",
                            ";
  color: ",
                            "#FFFFFF",
                            ";
  transition: opacity 100ms ease-out;
  margin: ",
                            [Function],
                            ";

  &:disabled {
    opacity: 0.3;
    background-color: ",
                            "#D1D1D1",
                            ";
  }

  &:hover:not(:disabled) {
    background-color: ",
                            "#024A8F",
                            ";
    cursor: pointer;
  }
",
                            "
  background-color: ",
                            "#FFFFFF",
                            ";
  border: 1px solid ",
                            "#38A9DB",
                            ";
  color: ",
                            "#38A9DB",
                            ";

  &:hover:not(:disabled) {
    background-color: ",
                            "#FFFFFF",
                            ";
    border: 1px solid ",
                            "#024A8F",
                            ";
    color: ",
                            "#024A8F",
                            ";
  }
",
                          ],
                        },
                        "displayName": "Styled(styled.button)",
                        "foldedComponentIds": Array [
                          "sc-bZQynM",
                        ],
                        "render": [Function],
                        "styledComponentId": "sc-gzVnrw",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      },
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "margin": "1rem",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ksYbfQ",
                          "isStatic": false,
                          "rules": Array [
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ksYbfQ",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      },
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Save",
                        "disabled": true,
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": "Save",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bZQynM",
                          "isStatic": false,
                          "rules": Array [
                            "
  min-width: 100px;
  padding: 0 1rem;
  border: none;
  border-radius: 3px;
  height: ",
                            [Function],
                            ";
  background-color: ",
                            "#38A9DB",
                            ";
  color: ",
                            "#FFFFFF",
                            ";
  transition: opacity 100ms ease-out;
  margin: ",
                            [Function],
                            ";

  &:disabled {
    opacity: 0.3;
    background-color: ",
                            "#D1D1D1",
                            ";
  }

  &:hover:not(:disabled) {
    background-color: ",
                            "#024A8F",
                            ";
    cursor: pointer;
  }
",
                          ],
                        },
                        "displayName": "styled.button",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bZQynM",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      },
                    },
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-hMqMXs",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: ",
                        [Function],
                        ";
  flex: ",
                        [Function],
                        ";
  flex-direction: ",
                        [Function],
                        "
  flex-grow: ",
                        [Function],
                        ";
  flex-shrink: ",
                        [Function],
                        ";
  flex-basis: ",
                        [Function],
                        ";
  flex-wrap: ",
                        [Function],
                        ";
  order: ",
                        [Function],
                        ";
  justify-content: ",
                        [Function],
                        ";
  align-items: ",
                        [Function],
                        ";
  align-content: ",
                        [Function],
                        ";
  align-self: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  width: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Flex",
                    "foldedComponentIds": Array [
                      "sc-eNQAEJ",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-hMqMXs",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-fYiAbW",
                  "isStatic": true,
                  "rules": Array [
                    "
  padding: 1.5rem;
  background-color: ",
                    "#F8F8F8",
                    ";
  border-bottom: ",
                    "#024A8F",
                    ";
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-fYiAbW",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-eLExRp",
              "isStatic": true,
              "rules": Array [
                "
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 500px;
  z-index: 9;
  box-shadow: 0 1px 10px rgba(0, 0, 0, 0.27);
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-eLExRp",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-lkqHmb",
              "isStatic": true,
              "rules": Array [
                "
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  opacity: 0.4;
  background-color: ",
                "#070707",
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-lkqHmb",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-dxgOiQ",
          "isStatic": false,
          "rules": Array [
            "
  width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
",
            "
    margin: ",
            [Function],
            ";
    margin-top: ",
            [Function],
            ";
    margin-bottom: ",
            [Function],
            ";
    margin-left: ",
            [Function],
            ";
    margin-right: ",
            [Function],
            ";

    padding: ",
            [Function],
            ";
    padding-top: ",
            [Function],
            ";
    padding-bottom: ",
            [Function],
            ";
    padding-left: ",
            [Function],
            ";
    padding-right: ",
            [Function],
            ";

    border: ",
            [Function],
            ";
    border-top: ",
            [Function],
            ";
    border-bottom: ",
            [Function],
            ";
    border-left: ",
            [Function],
            ";
    border-right: ",
            [Function],
            ";
  ",
          ],
        },
        "displayName": "Styled(styled.div)",
        "foldedComponentIds": Array [
          "sc-kpOJdX",
        ],
        "render": [Function],
        "styledComponentId": "sc-dxgOiQ",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
