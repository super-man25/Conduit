// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BuyerTypeRow /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BuyerTypeRow
    buyerType={
      Object {
        "disabled": false,
        "id": "333",
      }
    }
    editedBuyerTypes={Object {}}
    onBuyerTypeToggle={[MockFunction]}
    toggleDisabled={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "align": "center",
      "children": Array [
        <ForwardRef
          flexBasis="10%"
          style={
            Object {
              "height": "25px",
            }
          }
          title={null}
        />,
        <ForwardRef
          flexBasis="20%"
        >
          <Toggle
            isChecked={true}
            isDisabled={false}
            onChange={[Function]}
            size="small"
          />
        </ForwardRef>,
        <ForwardRef
          basis="20%"
        />,
        <ForwardRef
          basis="60%"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": false,
          "flexBasis": "10%",
          "style": Object {
            "height": "25px",
          },
          "title": null,
        },
        "ref": null,
        "rendered": false,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-hMqMXs",
            "isStatic": false,
            "rules": Array [
              "
  display: ",
              [Function],
              ";
  flex: ",
              [Function],
              ";
  flex-direction: ",
              [Function],
              "
  flex-grow: ",
              [Function],
              ";
  flex-shrink: ",
              [Function],
              ";
  flex-basis: ",
              [Function],
              ";
  flex-wrap: ",
              [Function],
              ";
  order: ",
              [Function],
              ";
  justify-content: ",
              [Function],
              ";
  align-items: ",
              [Function],
              ";
  align-content: ",
              [Function],
              ";
  align-self: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
            ],
          },
          "displayName": "Flex",
          "foldedComponentIds": Array [
            "sc-eNQAEJ",
          ],
          "render": [Function],
          "styledComponentId": "sc-hMqMXs",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Toggle
            isChecked={true}
            isDisabled={false}
            onChange={[Function]}
            size="small"
          />,
          "flexBasis": "20%",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "isChecked": true,
            "isDisabled": false,
            "onChange": [Function],
            "size": "small",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-hMqMXs",
            "isStatic": false,
            "rules": Array [
              "
  display: ",
              [Function],
              ";
  flex: ",
              [Function],
              ";
  flex-direction: ",
              [Function],
              "
  flex-grow: ",
              [Function],
              ";
  flex-shrink: ",
              [Function],
              ";
  flex-basis: ",
              [Function],
              ";
  flex-wrap: ",
              [Function],
              ";
  order: ",
              [Function],
              ";
  justify-content: ",
              [Function],
              ";
  align-items: ",
              [Function],
              ";
  align-content: ",
              [Function],
              ";
  align-self: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
            ],
          },
          "displayName": "Flex",
          "foldedComponentIds": Array [
            "sc-eNQAEJ",
          ],
          "render": [Function],
          "styledComponentId": "sc-hMqMXs",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "basis": "20%",
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-dUjcNx",
            "isStatic": false,
            "rules": Array [
              "
  font-size: ",
              [Function],
              ";
  font-weight: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  margin: ",
              [Function],
              ";
  text-align: ",
              [Function],
              ";
  opacity: ",
              [Function],
              ";
  cursor: ",
              [Function],
              ";

  ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
              "
  flex-basis: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "Styled(Styled(styled.p))",
          "foldedComponentIds": Array [
            "sc-ckVGcZ",
            "sc-jKJlTe",
          ],
          "render": [Function],
          "styledComponentId": "sc-dUjcNx",
          "target": "p",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "basis": "60%",
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-dUjcNx",
            "isStatic": false,
            "rules": Array [
              "
  font-size: ",
              [Function],
              ";
  font-weight: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  margin: ",
              [Function],
              ";
  text-align: ",
              [Function],
              ";
  opacity: ",
              [Function],
              ";
  cursor: ",
              [Function],
              ";

  ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
              "
  flex-basis: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "Styled(Styled(styled.p))",
          "foldedComponentIds": Array [
            "sc-ckVGcZ",
            "sc-jKJlTe",
          ],
          "render": [Function],
          "styledComponentId": "sc-dUjcNx",
          "target": "p",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-fOKMvo",
        "isStatic": false,
        "rules": Array [
          "
  display: ",
          [Function],
          ";
  flex: ",
          [Function],
          ";
  flex-direction: ",
          [Function],
          "
  flex-grow: ",
          [Function],
          ";
  flex-shrink: ",
          [Function],
          ";
  flex-basis: ",
          [Function],
          ";
  flex-wrap: ",
          [Function],
          ";
  order: ",
          [Function],
          ";
  justify-content: ",
          [Function],
          ";
  align-items: ",
          [Function],
          ";
  align-content: ",
          [Function],
          ";
  align-self: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  width: ",
          [Function],
          ";
",
          "
    margin: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
    margin-left: ",
          [Function],
          ";
    margin-right: ",
          [Function],
          ";

    padding: ",
          [Function],
          ";
    padding-top: ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    padding-left: ",
          [Function],
          ";
    padding-right: ",
          [Function],
          ";

    border: ",
          [Function],
          ";
    border-top: ",
          [Function],
          ";
    border-bottom: ",
          [Function],
          ";
    border-left: ",
          [Function],
          ";
    border-right: ",
          [Function],
          ";
  ",
          "
  padding: 0 2rem;
  min-height: 45px;
  width: 100%;
  background-color: ",
          "#F8F8F8",
          ";

  border-bottom: 1px solid ",
          "#EEEEEE",
          ";

  :hover {
    background-color: ",
          "#f2f2f2",
          ";
  }
",
        ],
      },
      "displayName": "Styled(Flex)",
      "foldedComponentIds": Array [
        "sc-eNQAEJ",
        "sc-hMqMXs",
      ],
      "render": [Function],
      "styledComponentId": "sc-fOKMvo",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "align": "center",
        "children": Array [
          <ForwardRef
            flexBasis="10%"
            style={
              Object {
                "height": "25px",
              }
            }
            title={null}
          />,
          <ForwardRef
            flexBasis="20%"
          >
            <Toggle
              isChecked={true}
              isDisabled={false}
              onChange={[Function]}
              size="small"
            />
          </ForwardRef>,
          <ForwardRef
            basis="20%"
          />,
          <ForwardRef
            basis="60%"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": false,
            "flexBasis": "10%",
            "style": Object {
              "height": "25px",
            },
            "title": null,
          },
          "ref": null,
          "rendered": false,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-hMqMXs",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Flex",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
            ],
            "render": [Function],
            "styledComponentId": "sc-hMqMXs",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Toggle
              isChecked={true}
              isDisabled={false}
              onChange={[Function]}
              size="small"
            />,
            "flexBasis": "20%",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "isChecked": true,
              "isDisabled": false,
              "onChange": [Function],
              "size": "small",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-hMqMXs",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Flex",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
            ],
            "render": [Function],
            "styledComponentId": "sc-hMqMXs",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "basis": "20%",
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-dUjcNx",
              "isStatic": false,
              "rules": Array [
                "
  font-size: ",
                [Function],
                ";
  font-weight: ",
                [Function],
                ";
  color: ",
                [Function],
                ";
  margin: ",
                [Function],
                ";
  text-align: ",
                [Function],
                ";
  opacity: ",
                [Function],
                ";
  cursor: ",
                [Function],
                ";

  ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
                "
  flex-basis: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "Styled(Styled(styled.p))",
            "foldedComponentIds": Array [
              "sc-ckVGcZ",
              "sc-jKJlTe",
            ],
            "render": [Function],
            "styledComponentId": "sc-dUjcNx",
            "target": "p",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "basis": "60%",
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-dUjcNx",
              "isStatic": false,
              "rules": Array [
                "
  font-size: ",
                [Function],
                ";
  font-weight: ",
                [Function],
                ";
  color: ",
                [Function],
                ";
  margin: ",
                [Function],
                ";
  text-align: ",
                [Function],
                ";
  opacity: ",
                [Function],
                ";
  cursor: ",
                [Function],
                ";

  ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
                "
  flex-basis: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "Styled(Styled(styled.p))",
            "foldedComponentIds": Array [
              "sc-ckVGcZ",
              "sc-jKJlTe",
            ],
            "render": [Function],
            "styledComponentId": "sc-dUjcNx",
            "target": "p",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-fOKMvo",
          "isStatic": false,
          "rules": Array [
            "
  display: ",
            [Function],
            ";
  flex: ",
            [Function],
            ";
  flex-direction: ",
            [Function],
            "
  flex-grow: ",
            [Function],
            ";
  flex-shrink: ",
            [Function],
            ";
  flex-basis: ",
            [Function],
            ";
  flex-wrap: ",
            [Function],
            ";
  order: ",
            [Function],
            ";
  justify-content: ",
            [Function],
            ";
  align-items: ",
            [Function],
            ";
  align-content: ",
            [Function],
            ";
  align-self: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
",
            "
    margin: ",
            [Function],
            ";
    margin-top: ",
            [Function],
            ";
    margin-bottom: ",
            [Function],
            ";
    margin-left: ",
            [Function],
            ";
    margin-right: ",
            [Function],
            ";

    padding: ",
            [Function],
            ";
    padding-top: ",
            [Function],
            ";
    padding-bottom: ",
            [Function],
            ";
    padding-left: ",
            [Function],
            ";
    padding-right: ",
            [Function],
            ";

    border: ",
            [Function],
            ";
    border-top: ",
            [Function],
            ";
    border-bottom: ",
            [Function],
            ";
    border-left: ",
            [Function],
            ";
    border-right: ",
            [Function],
            ";
  ",
            "
  padding: 0 2rem;
  min-height: 45px;
  width: 100%;
  background-color: ",
            "#F8F8F8",
            ";

  border-bottom: 1px solid ",
            "#EEEEEE",
            ";

  :hover {
    background-color: ",
            "#f2f2f2",
            ";
  }
",
          ],
        },
        "displayName": "Styled(Flex)",
        "foldedComponentIds": Array [
          "sc-eNQAEJ",
          "sc-hMqMXs",
        ],
        "render": [Function],
        "styledComponentId": "sc-fOKMvo",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
