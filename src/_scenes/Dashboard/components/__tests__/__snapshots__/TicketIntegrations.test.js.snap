// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TicketIntegrations /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TicketIntegrations
    fetchTicketIntegrations={[MockFunction]}
    loading={false}
    ticketIntegrations={
      Array [
        Object {
          "id": 1,
          "isActive": true,
          "logoUrl": "#",
          "name": "Some Name",
          "sold": 1000,
          "total": 1000,
        },
        Object {
          "id": 2,
          "isActive": true,
          "logoUrl": "#",
          "name": "Some Name",
          "sold": 1000,
          "total": 1000,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          <ForwardRef
            align="center"
            height="100%"
            justify="space-between"
          >
            <React.Fragment>
              <ForwardRef>
                <ForwardRef
                  margin="0"
                  marginRight="2.5rem"
                >
                  Integrations
                </ForwardRef>
              </ForwardRef>
            </React.Fragment>
          </ForwardRef>
        </ForwardRef>,
        <ForwardRef>
          <ForwardRef>
            <TicketIntegrationListItem
              integration={
                Object {
                  "id": 1,
                  "isActive": true,
                  "logoUrl": "#",
                  "name": "Some Name",
                  "sold": 1000,
                  "total": 1000,
                }
              }
              integrations={
                Array [
                  Object {
                    "id": 1,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                  Object {
                    "id": 2,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                ]
              }
            />
            <TicketIntegrationListItem
              integration={
                Object {
                  "id": 2,
                  "isActive": true,
                  "logoUrl": "#",
                  "name": "Some Name",
                  "sold": 1000,
                  "total": 1000,
                }
              }
              integrations={
                Array [
                  Object {
                    "id": 1,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                  Object {
                    "id": 2,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                ]
              }
            />
          </ForwardRef>
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            align="center"
            height="100%"
            justify="space-between"
          >
            <React.Fragment>
              <ForwardRef>
                <ForwardRef
                  margin="0"
                  marginRight="2.5rem"
                >
                  Integrations
                </ForwardRef>
              </ForwardRef>
            </React.Fragment>
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "align": "center",
            "children": <React.Fragment>
              <ForwardRef>
                <ForwardRef
                  margin="0"
                  marginRight="2.5rem"
                >
                  Integrations
                </ForwardRef>
              </ForwardRef>
            </React.Fragment>,
            "height": "100%",
            "justify": "space-between",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>
                </ForwardRef>,
                undefined,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Integrations",
                    "margin": "0",
                    "marginRight": "2.5rem",
                  },
                  "ref": null,
                  "rendered": "Integrations",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-jzJRlG",
                      "isStatic": false,
                      "rules": Array [
                        "
    color: ",
                        [Function],
                        ";
    font-size: ",
                        [Function],
                        ";
    font-weight: ",
                        [Function],
                        ";
  ",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Styled(styled.h4)",
                    "foldedComponentIds": Array [
                      "sc-fjdhpX",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-jzJRlG",
                    "target": "h4",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hMqMXs",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Flex",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-hMqMXs",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              undefined,
            ],
            "type": Symbol(react.fragment),
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-hMqMXs",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Flex",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
            ],
            "render": [Function],
            "styledComponentId": "sc-hMqMXs",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-tilXH",
            "isStatic": true,
            "rules": Array [
              "
  border: ",
              "1px solid #D1D1D1",
              ";
  border-radius: 6px 6px 0 0;
  padding: 0 24px;
  height: 56px;
",
            ],
          },
          "displayName": "PanelHeader",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-tilXH",
          "target": "header",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef>
            <TicketIntegrationListItem
              integration={
                Object {
                  "id": 1,
                  "isActive": true,
                  "logoUrl": "#",
                  "name": "Some Name",
                  "sold": 1000,
                  "total": 1000,
                }
              }
              integrations={
                Array [
                  Object {
                    "id": 1,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                  Object {
                    "id": 2,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                ]
              }
            />
            <TicketIntegrationListItem
              integration={
                Object {
                  "id": 2,
                  "isActive": true,
                  "logoUrl": "#",
                  "name": "Some Name",
                  "sold": 1000,
                  "total": 1000,
                }
              }
              integrations={
                Array [
                  Object {
                    "id": 1,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                  Object {
                    "id": 2,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                ]
              }
            />
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <TicketIntegrationListItem
                integration={
                  Object {
                    "id": 1,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  }
                }
                integrations={
                  Array [
                    Object {
                      "id": 1,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                    Object {
                      "id": 2,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                  ]
                }
              />,
              <TicketIntegrationListItem
                integration={
                  Object {
                    "id": 2,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  }
                }
                integrations={
                  Array [
                    Object {
                      "id": 1,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                    Object {
                      "id": 2,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                  ]
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "function",
              "props": Object {
                "integration": Object {
                  "id": 1,
                  "isActive": true,
                  "logoUrl": "#",
                  "name": "Some Name",
                  "sold": 1000,
                  "total": 1000,
                },
                "integrations": Array [
                  Object {
                    "id": 1,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                  Object {
                    "id": 2,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "function",
              "props": Object {
                "integration": Object {
                  "id": 2,
                  "isActive": true,
                  "logoUrl": "#",
                  "name": "Some Name",
                  "sold": 1000,
                  "total": 1000,
                },
                "integrations": Array [
                  Object {
                    "id": 1,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                  Object {
                    "id": 2,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-cbkKFq",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
                "
  padding: 0;
  margin: 0;
  white-space: nowrap;
  overflow-x: auto;
  flex-wrap: nowrap;
",
              ],
            },
            "displayName": "Styled(Flex)",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
              "sc-hMqMXs",
            ],
            "render": [Function],
            "styledComponentId": "sc-cbkKFq",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-lkqHmb",
            "isStatic": false,
            "rules": Array [
              "
  border: ",
              "1px solid #D1D1D1",
              ";
  border-top: none;
  padding: 18px 24px 30px;

  & + ",
              [Function],
              " {
    padding-top: 24px;
  }

  &:last-child {
    border-radius: 0 0 6px 6px;
    padding-bottom: 18px;
  }
",
              "
  padding: 0 !important;
",
            ],
          },
          "displayName": "Styled(PanelContent)",
          "foldedComponentIds": Array [
            "sc-hEsumM",
          ],
          "render": [Function],
          "styledComponentId": "sc-lkqHmb",
          "target": "section",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-fYxtnH",
        "isStatic": true,
        "rules": Array [
          "
  background-color: ",
          "#FFFFFF",
          ";
",
        ],
      },
      "displayName": "Panel",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-fYxtnH",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            <ForwardRef
              align="center"
              height="100%"
              justify="space-between"
            >
              <React.Fragment>
                <ForwardRef>
                  <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>
                </ForwardRef>
              </React.Fragment>
            </ForwardRef>
          </ForwardRef>,
          <ForwardRef>
            <ForwardRef>
              <TicketIntegrationListItem
                integration={
                  Object {
                    "id": 1,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  }
                }
                integrations={
                  Array [
                    Object {
                      "id": 1,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                    Object {
                      "id": 2,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                  ]
                }
              />
              <TicketIntegrationListItem
                integration={
                  Object {
                    "id": 2,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  }
                }
                integrations={
                  Array [
                    Object {
                      "id": 1,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                    Object {
                      "id": 2,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                  ]
                }
              />
            </ForwardRef>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              align="center"
              height="100%"
              justify="space-between"
            >
              <React.Fragment>
                <ForwardRef>
                  <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>
                </ForwardRef>
              </React.Fragment>
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "align": "center",
              "children": <React.Fragment>
                <ForwardRef>
                  <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>
                </ForwardRef>
              </React.Fragment>,
              "height": "100%",
              "justify": "space-between",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef>
                    <ForwardRef
                      margin="0"
                      marginRight="2.5rem"
                    >
                      Integrations
                    </ForwardRef>
                  </ForwardRef>,
                  undefined,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef
                      margin="0"
                      marginRight="2.5rem"
                    >
                      Integrations
                    </ForwardRef>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Integrations",
                      "margin": "0",
                      "marginRight": "2.5rem",
                    },
                    "ref": null,
                    "rendered": "Integrations",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jzJRlG",
                        "isStatic": false,
                        "rules": Array [
                          "
    color: ",
                          [Function],
                          ";
    font-size: ",
                          [Function],
                          ";
    font-weight: ",
                          [Function],
                          ";
  ",
                          "
    margin: ",
                          [Function],
                          ";
    margin-top: ",
                          [Function],
                          ";
    margin-bottom: ",
                          [Function],
                          ";
    margin-left: ",
                          [Function],
                          ";
    margin-right: ",
                          [Function],
                          ";

    padding: ",
                          [Function],
                          ";
    padding-top: ",
                          [Function],
                          ";
    padding-bottom: ",
                          [Function],
                          ";
    padding-left: ",
                          [Function],
                          ";
    padding-right: ",
                          [Function],
                          ";

    border: ",
                          [Function],
                          ";
    border-top: ",
                          [Function],
                          ";
    border-bottom: ",
                          [Function],
                          ";
    border-left: ",
                          [Function],
                          ";
    border-right: ",
                          [Function],
                          ";
  ",
                        ],
                      },
                      "displayName": "Styled(styled.h4)",
                      "foldedComponentIds": Array [
                        "sc-fjdhpX",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-jzJRlG",
                      "target": "h4",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-hMqMXs",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: ",
                        [Function],
                        ";
  flex: ",
                        [Function],
                        ";
  flex-direction: ",
                        [Function],
                        "
  flex-grow: ",
                        [Function],
                        ";
  flex-shrink: ",
                        [Function],
                        ";
  flex-basis: ",
                        [Function],
                        ";
  flex-wrap: ",
                        [Function],
                        ";
  order: ",
                        [Function],
                        ";
  justify-content: ",
                        [Function],
                        ";
  align-items: ",
                        [Function],
                        ";
  align-content: ",
                        [Function],
                        ";
  align-self: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  width: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Flex",
                    "foldedComponentIds": Array [
                      "sc-eNQAEJ",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-hMqMXs",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                undefined,
              ],
              "type": Symbol(react.fragment),
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-hMqMXs",
                "isStatic": false,
                "rules": Array [
                  "
  display: ",
                  [Function],
                  ";
  flex: ",
                  [Function],
                  ";
  flex-direction: ",
                  [Function],
                  "
  flex-grow: ",
                  [Function],
                  ";
  flex-shrink: ",
                  [Function],
                  ";
  flex-basis: ",
                  [Function],
                  ";
  flex-wrap: ",
                  [Function],
                  ";
  order: ",
                  [Function],
                  ";
  justify-content: ",
                  [Function],
                  ";
  align-items: ",
                  [Function],
                  ";
  align-content: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Flex",
              "foldedComponentIds": Array [
                "sc-eNQAEJ",
              ],
              "render": [Function],
              "styledComponentId": "sc-hMqMXs",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-tilXH",
              "isStatic": true,
              "rules": Array [
                "
  border: ",
                "1px solid #D1D1D1",
                ";
  border-radius: 6px 6px 0 0;
  padding: 0 24px;
  height: 56px;
",
              ],
            },
            "displayName": "PanelHeader",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-tilXH",
            "target": "header",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef>
              <TicketIntegrationListItem
                integration={
                  Object {
                    "id": 1,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  }
                }
                integrations={
                  Array [
                    Object {
                      "id": 1,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                    Object {
                      "id": 2,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                  ]
                }
              />
              <TicketIntegrationListItem
                integration={
                  Object {
                    "id": 2,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  }
                }
                integrations={
                  Array [
                    Object {
                      "id": 1,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                    Object {
                      "id": 2,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                  ]
                }
              />
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <TicketIntegrationListItem
                  integration={
                    Object {
                      "id": 1,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    }
                  }
                  integrations={
                    Array [
                      Object {
                        "id": 1,
                        "isActive": true,
                        "logoUrl": "#",
                        "name": "Some Name",
                        "sold": 1000,
                        "total": 1000,
                      },
                      Object {
                        "id": 2,
                        "isActive": true,
                        "logoUrl": "#",
                        "name": "Some Name",
                        "sold": 1000,
                        "total": 1000,
                      },
                    ]
                  }
                />,
                <TicketIntegrationListItem
                  integration={
                    Object {
                      "id": 2,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    }
                  }
                  integrations={
                    Array [
                      Object {
                        "id": 1,
                        "isActive": true,
                        "logoUrl": "#",
                        "name": "Some Name",
                        "sold": 1000,
                        "total": 1000,
                      },
                      Object {
                        "id": 2,
                        "isActive": true,
                        "logoUrl": "#",
                        "name": "Some Name",
                        "sold": 1000,
                        "total": 1000,
                      },
                    ]
                  }
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "function",
                "props": Object {
                  "integration": Object {
                    "id": 1,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                  "integrations": Array [
                    Object {
                      "id": 1,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                    Object {
                      "id": 2,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "function",
                "props": Object {
                  "integration": Object {
                    "id": 2,
                    "isActive": true,
                    "logoUrl": "#",
                    "name": "Some Name",
                    "sold": 1000,
                    "total": 1000,
                  },
                  "integrations": Array [
                    Object {
                      "id": 1,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                    Object {
                      "id": 2,
                      "isActive": true,
                      "logoUrl": "#",
                      "name": "Some Name",
                      "sold": 1000,
                      "total": 1000,
                    },
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-cbkKFq",
                "isStatic": false,
                "rules": Array [
                  "
  display: ",
                  [Function],
                  ";
  flex: ",
                  [Function],
                  ";
  flex-direction: ",
                  [Function],
                  "
  flex-grow: ",
                  [Function],
                  ";
  flex-shrink: ",
                  [Function],
                  ";
  flex-basis: ",
                  [Function],
                  ";
  flex-wrap: ",
                  [Function],
                  ";
  order: ",
                  [Function],
                  ";
  justify-content: ",
                  [Function],
                  ";
  align-items: ",
                  [Function],
                  ";
  align-content: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                  "
  padding: 0;
  margin: 0;
  white-space: nowrap;
  overflow-x: auto;
  flex-wrap: nowrap;
",
                ],
              },
              "displayName": "Styled(Flex)",
              "foldedComponentIds": Array [
                "sc-eNQAEJ",
                "sc-hMqMXs",
              ],
              "render": [Function],
              "styledComponentId": "sc-cbkKFq",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-lkqHmb",
              "isStatic": false,
              "rules": Array [
                "
  border: ",
                "1px solid #D1D1D1",
                ";
  border-top: none;
  padding: 18px 24px 30px;

  & + ",
                [Function],
                " {
    padding-top: 24px;
  }

  &:last-child {
    border-radius: 0 0 6px 6px;
    padding-bottom: 18px;
  }
",
                "
  padding: 0 !important;
",
              ],
            },
            "displayName": "Styled(PanelContent)",
            "foldedComponentIds": Array [
              "sc-hEsumM",
            ],
            "render": [Function],
            "styledComponentId": "sc-lkqHmb",
            "target": "section",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-fYxtnH",
          "isStatic": true,
          "rules": Array [
            "
  background-color: ",
            "#FFFFFF",
            ";
",
          ],
        },
        "displayName": "Panel",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-fYxtnH",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<TicketIntegrations /> should render correctly when an error occurs 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TicketIntegrations
    error="Error"
    fetchTicketIntegrations={[MockFunction]}
    loading={false}
    ticketIntegrations={
      Array [
        Object {
          "id": 1,
          "isActive": true,
          "logoUrl": "#",
          "name": "Some Name",
          "sold": 1000,
          "total": 1000,
        },
        Object {
          "id": 2,
          "isActive": true,
          "logoUrl": "#",
          "name": "Some Name",
          "sold": 1000,
          "total": 1000,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          <ForwardRef
            align="center"
            height="100%"
            justify="space-between"
          >
            <React.Fragment>
              <ForwardRef>
                <ForwardRef
                  margin="0"
                  marginRight="2.5rem"
                >
                  Integrations
                </ForwardRef>
              </ForwardRef>
            </React.Fragment>
          </ForwardRef>
        </ForwardRef>,
        <ForwardRef>
          <RenderError />
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            align="center"
            height="100%"
            justify="space-between"
          >
            <React.Fragment>
              <ForwardRef>
                <ForwardRef
                  margin="0"
                  marginRight="2.5rem"
                >
                  Integrations
                </ForwardRef>
              </ForwardRef>
            </React.Fragment>
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "align": "center",
            "children": <React.Fragment>
              <ForwardRef>
                <ForwardRef
                  margin="0"
                  marginRight="2.5rem"
                >
                  Integrations
                </ForwardRef>
              </ForwardRef>
            </React.Fragment>,
            "height": "100%",
            "justify": "space-between",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>
                </ForwardRef>,
                undefined,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Integrations",
                    "margin": "0",
                    "marginRight": "2.5rem",
                  },
                  "ref": null,
                  "rendered": "Integrations",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-jzJRlG",
                      "isStatic": false,
                      "rules": Array [
                        "
    color: ",
                        [Function],
                        ";
    font-size: ",
                        [Function],
                        ";
    font-weight: ",
                        [Function],
                        ";
  ",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Styled(styled.h4)",
                    "foldedComponentIds": Array [
                      "sc-fjdhpX",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-jzJRlG",
                    "target": "h4",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hMqMXs",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Flex",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-hMqMXs",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              undefined,
            ],
            "type": Symbol(react.fragment),
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-hMqMXs",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Flex",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
            ],
            "render": [Function],
            "styledComponentId": "sc-hMqMXs",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-tilXH",
            "isStatic": true,
            "rules": Array [
              "
  border: ",
              "1px solid #D1D1D1",
              ";
  border-radius: 6px 6px 0 0;
  padding: 0 24px;
  height: 56px;
",
            ],
          },
          "displayName": "PanelHeader",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-tilXH",
          "target": "header",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <RenderError />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-lkqHmb",
            "isStatic": false,
            "rules": Array [
              "
  border: ",
              "1px solid #D1D1D1",
              ";
  border-top: none;
  padding: 18px 24px 30px;

  & + ",
              [Function],
              " {
    padding-top: 24px;
  }

  &:last-child {
    border-radius: 0 0 6px 6px;
    padding-bottom: 18px;
  }
",
              "
  padding: 0 !important;
",
            ],
          },
          "displayName": "Styled(PanelContent)",
          "foldedComponentIds": Array [
            "sc-hEsumM",
          ],
          "render": [Function],
          "styledComponentId": "sc-lkqHmb",
          "target": "section",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-fYxtnH",
        "isStatic": true,
        "rules": Array [
          "
  background-color: ",
          "#FFFFFF",
          ";
",
        ],
      },
      "displayName": "Panel",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-fYxtnH",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            <ForwardRef
              align="center"
              height="100%"
              justify="space-between"
            >
              <React.Fragment>
                <ForwardRef>
                  <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>
                </ForwardRef>
              </React.Fragment>
            </ForwardRef>
          </ForwardRef>,
          <ForwardRef>
            <RenderError />
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              align="center"
              height="100%"
              justify="space-between"
            >
              <React.Fragment>
                <ForwardRef>
                  <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>
                </ForwardRef>
              </React.Fragment>
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "align": "center",
              "children": <React.Fragment>
                <ForwardRef>
                  <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>
                </ForwardRef>
              </React.Fragment>,
              "height": "100%",
              "justify": "space-between",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef>
                    <ForwardRef
                      margin="0"
                      marginRight="2.5rem"
                    >
                      Integrations
                    </ForwardRef>
                  </ForwardRef>,
                  undefined,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef
                      margin="0"
                      marginRight="2.5rem"
                    >
                      Integrations
                    </ForwardRef>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Integrations",
                      "margin": "0",
                      "marginRight": "2.5rem",
                    },
                    "ref": null,
                    "rendered": "Integrations",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jzJRlG",
                        "isStatic": false,
                        "rules": Array [
                          "
    color: ",
                          [Function],
                          ";
    font-size: ",
                          [Function],
                          ";
    font-weight: ",
                          [Function],
                          ";
  ",
                          "
    margin: ",
                          [Function],
                          ";
    margin-top: ",
                          [Function],
                          ";
    margin-bottom: ",
                          [Function],
                          ";
    margin-left: ",
                          [Function],
                          ";
    margin-right: ",
                          [Function],
                          ";

    padding: ",
                          [Function],
                          ";
    padding-top: ",
                          [Function],
                          ";
    padding-bottom: ",
                          [Function],
                          ";
    padding-left: ",
                          [Function],
                          ";
    padding-right: ",
                          [Function],
                          ";

    border: ",
                          [Function],
                          ";
    border-top: ",
                          [Function],
                          ";
    border-bottom: ",
                          [Function],
                          ";
    border-left: ",
                          [Function],
                          ";
    border-right: ",
                          [Function],
                          ";
  ",
                        ],
                      },
                      "displayName": "Styled(styled.h4)",
                      "foldedComponentIds": Array [
                        "sc-fjdhpX",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-jzJRlG",
                      "target": "h4",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-hMqMXs",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: ",
                        [Function],
                        ";
  flex: ",
                        [Function],
                        ";
  flex-direction: ",
                        [Function],
                        "
  flex-grow: ",
                        [Function],
                        ";
  flex-shrink: ",
                        [Function],
                        ";
  flex-basis: ",
                        [Function],
                        ";
  flex-wrap: ",
                        [Function],
                        ";
  order: ",
                        [Function],
                        ";
  justify-content: ",
                        [Function],
                        ";
  align-items: ",
                        [Function],
                        ";
  align-content: ",
                        [Function],
                        ";
  align-self: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  width: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Flex",
                    "foldedComponentIds": Array [
                      "sc-eNQAEJ",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-hMqMXs",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                undefined,
              ],
              "type": Symbol(react.fragment),
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-hMqMXs",
                "isStatic": false,
                "rules": Array [
                  "
  display: ",
                  [Function],
                  ";
  flex: ",
                  [Function],
                  ";
  flex-direction: ",
                  [Function],
                  "
  flex-grow: ",
                  [Function],
                  ";
  flex-shrink: ",
                  [Function],
                  ";
  flex-basis: ",
                  [Function],
                  ";
  flex-wrap: ",
                  [Function],
                  ";
  order: ",
                  [Function],
                  ";
  justify-content: ",
                  [Function],
                  ";
  align-items: ",
                  [Function],
                  ";
  align-content: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Flex",
              "foldedComponentIds": Array [
                "sc-eNQAEJ",
              ],
              "render": [Function],
              "styledComponentId": "sc-hMqMXs",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-tilXH",
              "isStatic": true,
              "rules": Array [
                "
  border: ",
                "1px solid #D1D1D1",
                ";
  border-radius: 6px 6px 0 0;
  padding: 0 24px;
  height: 56px;
",
              ],
            },
            "displayName": "PanelHeader",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-tilXH",
            "target": "header",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <RenderError />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-lkqHmb",
              "isStatic": false,
              "rules": Array [
                "
  border: ",
                "1px solid #D1D1D1",
                ";
  border-top: none;
  padding: 18px 24px 30px;

  & + ",
                [Function],
                " {
    padding-top: 24px;
  }

  &:last-child {
    border-radius: 0 0 6px 6px;
    padding-bottom: 18px;
  }
",
                "
  padding: 0 !important;
",
              ],
            },
            "displayName": "Styled(PanelContent)",
            "foldedComponentIds": Array [
              "sc-hEsumM",
            ],
            "render": [Function],
            "styledComponentId": "sc-lkqHmb",
            "target": "section",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-fYxtnH",
          "isStatic": true,
          "rules": Array [
            "
  background-color: ",
            "#FFFFFF",
            ";
",
          ],
        },
        "displayName": "Panel",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-fYxtnH",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<TicketIntegrations /> should render correctly when loading is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TicketIntegrations
    fetchTicketIntegrations={[MockFunction]}
    loading={true}
    ticketIntegrations={
      Array [
        Object {
          "id": 1,
          "isActive": true,
          "logoUrl": "#",
          "name": "Some Name",
          "sold": 1000,
          "total": 1000,
        },
        Object {
          "id": 2,
          "isActive": true,
          "logoUrl": "#",
          "name": "Some Name",
          "sold": 1000,
          "total": 1000,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          <ForwardRef
            align="center"
            height="100%"
            justify="space-between"
          />
        </ForwardRef>,
        <ForwardRef>
          <Loader />
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            align="center"
            height="100%"
            justify="space-between"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "align": "center",
            "children": false,
            "height": "100%",
            "justify": "space-between",
          },
          "ref": null,
          "rendered": false,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-hMqMXs",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Flex",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
            ],
            "render": [Function],
            "styledComponentId": "sc-hMqMXs",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-tilXH",
            "isStatic": true,
            "rules": Array [
              "
  border: ",
              "1px solid #D1D1D1",
              ";
  border-radius: 6px 6px 0 0;
  padding: 0 24px;
  height: 56px;
",
            ],
          },
          "displayName": "PanelHeader",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-tilXH",
          "target": "header",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Loader />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-lkqHmb",
            "isStatic": false,
            "rules": Array [
              "
  border: ",
              "1px solid #D1D1D1",
              ";
  border-top: none;
  padding: 18px 24px 30px;

  & + ",
              [Function],
              " {
    padding-top: 24px;
  }

  &:last-child {
    border-radius: 0 0 6px 6px;
    padding-bottom: 18px;
  }
",
              "
  padding: 0 !important;
",
            ],
          },
          "displayName": "Styled(PanelContent)",
          "foldedComponentIds": Array [
            "sc-hEsumM",
          ],
          "render": [Function],
          "styledComponentId": "sc-lkqHmb",
          "target": "section",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-fYxtnH",
        "isStatic": true,
        "rules": Array [
          "
  background-color: ",
          "#FFFFFF",
          ";
",
        ],
      },
      "displayName": "Panel",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-fYxtnH",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            <ForwardRef
              align="center"
              height="100%"
              justify="space-between"
            />
          </ForwardRef>,
          <ForwardRef>
            <Loader />
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              align="center"
              height="100%"
              justify="space-between"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "align": "center",
              "children": false,
              "height": "100%",
              "justify": "space-between",
            },
            "ref": null,
            "rendered": false,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-hMqMXs",
                "isStatic": false,
                "rules": Array [
                  "
  display: ",
                  [Function],
                  ";
  flex: ",
                  [Function],
                  ";
  flex-direction: ",
                  [Function],
                  "
  flex-grow: ",
                  [Function],
                  ";
  flex-shrink: ",
                  [Function],
                  ";
  flex-basis: ",
                  [Function],
                  ";
  flex-wrap: ",
                  [Function],
                  ";
  order: ",
                  [Function],
                  ";
  justify-content: ",
                  [Function],
                  ";
  align-items: ",
                  [Function],
                  ";
  align-content: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Flex",
              "foldedComponentIds": Array [
                "sc-eNQAEJ",
              ],
              "render": [Function],
              "styledComponentId": "sc-hMqMXs",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-tilXH",
              "isStatic": true,
              "rules": Array [
                "
  border: ",
                "1px solid #D1D1D1",
                ";
  border-radius: 6px 6px 0 0;
  padding: 0 24px;
  height: 56px;
",
              ],
            },
            "displayName": "PanelHeader",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-tilXH",
            "target": "header",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Loader />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-lkqHmb",
              "isStatic": false,
              "rules": Array [
                "
  border: ",
                "1px solid #D1D1D1",
                ";
  border-top: none;
  padding: 18px 24px 30px;

  & + ",
                [Function],
                " {
    padding-top: 24px;
  }

  &:last-child {
    border-radius: 0 0 6px 6px;
    padding-bottom: 18px;
  }
",
                "
  padding: 0 !important;
",
              ],
            },
            "displayName": "Styled(PanelContent)",
            "foldedComponentIds": Array [
              "sc-hEsumM",
            ],
            "render": [Function],
            "styledComponentId": "sc-lkqHmb",
            "target": "section",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-fYxtnH",
          "isStatic": true,
          "rules": Array [
            "
  background-color: ",
            "#FFFFFF",
            ";
",
          ],
        },
        "displayName": "Panel",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-fYxtnH",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<TicketIntegrations /> should render correctly when no data is found 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TicketIntegrations
    fetchTicketIntegrations={[MockFunction]}
    loading={false}
    ticketIntegrations={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          <ForwardRef
            align="center"
            height="100%"
            justify="space-between"
          >
            <React.Fragment>
              <ForwardRef>
                <ForwardRef
                  margin="0"
                  marginRight="2.5rem"
                >
                  Integrations
                </ForwardRef>
              </ForwardRef>
            </React.Fragment>
          </ForwardRef>
        </ForwardRef>,
        <ForwardRef>
          <NoData />
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            align="center"
            height="100%"
            justify="space-between"
          >
            <React.Fragment>
              <ForwardRef>
                <ForwardRef
                  margin="0"
                  marginRight="2.5rem"
                >
                  Integrations
                </ForwardRef>
              </ForwardRef>
            </React.Fragment>
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "align": "center",
            "children": <React.Fragment>
              <ForwardRef>
                <ForwardRef
                  margin="0"
                  marginRight="2.5rem"
                >
                  Integrations
                </ForwardRef>
              </ForwardRef>
            </React.Fragment>,
            "height": "100%",
            "justify": "space-between",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>
                </ForwardRef>,
                undefined,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Integrations",
                    "margin": "0",
                    "marginRight": "2.5rem",
                  },
                  "ref": null,
                  "rendered": "Integrations",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-jzJRlG",
                      "isStatic": false,
                      "rules": Array [
                        "
    color: ",
                        [Function],
                        ";
    font-size: ",
                        [Function],
                        ";
    font-weight: ",
                        [Function],
                        ";
  ",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Styled(styled.h4)",
                    "foldedComponentIds": Array [
                      "sc-fjdhpX",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-jzJRlG",
                    "target": "h4",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hMqMXs",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Flex",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-hMqMXs",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              undefined,
            ],
            "type": Symbol(react.fragment),
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-hMqMXs",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Flex",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
            ],
            "render": [Function],
            "styledComponentId": "sc-hMqMXs",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-tilXH",
            "isStatic": true,
            "rules": Array [
              "
  border: ",
              "1px solid #D1D1D1",
              ";
  border-radius: 6px 6px 0 0;
  padding: 0 24px;
  height: 56px;
",
            ],
          },
          "displayName": "PanelHeader",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-tilXH",
          "target": "header",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <NoData />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-lkqHmb",
            "isStatic": false,
            "rules": Array [
              "
  border: ",
              "1px solid #D1D1D1",
              ";
  border-top: none;
  padding: 18px 24px 30px;

  & + ",
              [Function],
              " {
    padding-top: 24px;
  }

  &:last-child {
    border-radius: 0 0 6px 6px;
    padding-bottom: 18px;
  }
",
              "
  padding: 0 !important;
",
            ],
          },
          "displayName": "Styled(PanelContent)",
          "foldedComponentIds": Array [
            "sc-hEsumM",
          ],
          "render": [Function],
          "styledComponentId": "sc-lkqHmb",
          "target": "section",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-fYxtnH",
        "isStatic": true,
        "rules": Array [
          "
  background-color: ",
          "#FFFFFF",
          ";
",
        ],
      },
      "displayName": "Panel",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-fYxtnH",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            <ForwardRef
              align="center"
              height="100%"
              justify="space-between"
            >
              <React.Fragment>
                <ForwardRef>
                  <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>
                </ForwardRef>
              </React.Fragment>
            </ForwardRef>
          </ForwardRef>,
          <ForwardRef>
            <NoData />
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              align="center"
              height="100%"
              justify="space-between"
            >
              <React.Fragment>
                <ForwardRef>
                  <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>
                </ForwardRef>
              </React.Fragment>
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "align": "center",
              "children": <React.Fragment>
                <ForwardRef>
                  <ForwardRef
                    margin="0"
                    marginRight="2.5rem"
                  >
                    Integrations
                  </ForwardRef>
                </ForwardRef>
              </React.Fragment>,
              "height": "100%",
              "justify": "space-between",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef>
                    <ForwardRef
                      margin="0"
                      marginRight="2.5rem"
                    >
                      Integrations
                    </ForwardRef>
                  </ForwardRef>,
                  undefined,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef
                      margin="0"
                      marginRight="2.5rem"
                    >
                      Integrations
                    </ForwardRef>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Integrations",
                      "margin": "0",
                      "marginRight": "2.5rem",
                    },
                    "ref": null,
                    "rendered": "Integrations",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jzJRlG",
                        "isStatic": false,
                        "rules": Array [
                          "
    color: ",
                          [Function],
                          ";
    font-size: ",
                          [Function],
                          ";
    font-weight: ",
                          [Function],
                          ";
  ",
                          "
    margin: ",
                          [Function],
                          ";
    margin-top: ",
                          [Function],
                          ";
    margin-bottom: ",
                          [Function],
                          ";
    margin-left: ",
                          [Function],
                          ";
    margin-right: ",
                          [Function],
                          ";

    padding: ",
                          [Function],
                          ";
    padding-top: ",
                          [Function],
                          ";
    padding-bottom: ",
                          [Function],
                          ";
    padding-left: ",
                          [Function],
                          ";
    padding-right: ",
                          [Function],
                          ";

    border: ",
                          [Function],
                          ";
    border-top: ",
                          [Function],
                          ";
    border-bottom: ",
                          [Function],
                          ";
    border-left: ",
                          [Function],
                          ";
    border-right: ",
                          [Function],
                          ";
  ",
                        ],
                      },
                      "displayName": "Styled(styled.h4)",
                      "foldedComponentIds": Array [
                        "sc-fjdhpX",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-jzJRlG",
                      "target": "h4",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-hMqMXs",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: ",
                        [Function],
                        ";
  flex: ",
                        [Function],
                        ";
  flex-direction: ",
                        [Function],
                        "
  flex-grow: ",
                        [Function],
                        ";
  flex-shrink: ",
                        [Function],
                        ";
  flex-basis: ",
                        [Function],
                        ";
  flex-wrap: ",
                        [Function],
                        ";
  order: ",
                        [Function],
                        ";
  justify-content: ",
                        [Function],
                        ";
  align-items: ",
                        [Function],
                        ";
  align-content: ",
                        [Function],
                        ";
  align-self: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  width: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Flex",
                    "foldedComponentIds": Array [
                      "sc-eNQAEJ",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-hMqMXs",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                undefined,
              ],
              "type": Symbol(react.fragment),
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-hMqMXs",
                "isStatic": false,
                "rules": Array [
                  "
  display: ",
                  [Function],
                  ";
  flex: ",
                  [Function],
                  ";
  flex-direction: ",
                  [Function],
                  "
  flex-grow: ",
                  [Function],
                  ";
  flex-shrink: ",
                  [Function],
                  ";
  flex-basis: ",
                  [Function],
                  ";
  flex-wrap: ",
                  [Function],
                  ";
  order: ",
                  [Function],
                  ";
  justify-content: ",
                  [Function],
                  ";
  align-items: ",
                  [Function],
                  ";
  align-content: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Flex",
              "foldedComponentIds": Array [
                "sc-eNQAEJ",
              ],
              "render": [Function],
              "styledComponentId": "sc-hMqMXs",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-tilXH",
              "isStatic": true,
              "rules": Array [
                "
  border: ",
                "1px solid #D1D1D1",
                ";
  border-radius: 6px 6px 0 0;
  padding: 0 24px;
  height: 56px;
",
              ],
            },
            "displayName": "PanelHeader",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-tilXH",
            "target": "header",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <NoData />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-lkqHmb",
              "isStatic": false,
              "rules": Array [
                "
  border: ",
                "1px solid #D1D1D1",
                ";
  border-top: none;
  padding: 18px 24px 30px;

  & + ",
                [Function],
                " {
    padding-top: 24px;
  }

  &:last-child {
    border-radius: 0 0 6px 6px;
    padding-bottom: 18px;
  }
",
                "
  padding: 0 !important;
",
              ],
            },
            "displayName": "Styled(PanelContent)",
            "foldedComponentIds": Array [
              "sc-hEsumM",
            ],
            "render": [Function],
            "styledComponentId": "sc-lkqHmb",
            "target": "section",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-fYxtnH",
          "isStatic": true,
          "rules": Array [
            "
  background-color: ",
            "#FFFFFF",
            ";
",
          ],
        },
        "displayName": "Panel",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-fYxtnH",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
