// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EventHeader /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventHeader
    availableInventory={100}
    event={
      Object {
        "clientId": 1,
        "createdAt": 1529336865706,
        "id": 1,
        "integrationId": 1,
        "modifiedAt": 1529336865706,
        "name": "Some Event",
        "revenue": 739472,
        "seasonId": 1,
        "timestamp": 1529336865706,
        "venueId": 1,
      }
    }
    pathname="/event/1/"
    totalInventory={1000}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Flex
          align="center"
        >
          <styled.button
            expand={true}
            small={true}
          />
          <Breadcrumbs
            crumbs={
              Array [
                Object {
                  "path": "/season",
                  "title": "Season Dashboard",
                },
                Object {
                  "path": "/event/1",
                  "title": "Some Event",
                },
              ]
            }
          />
        </Flex>,
        <styled.div
          height="1.5rem"
        />,
        <Flex
          align="flex-start"
          justify="space-between"
        >
          <FlexItem
            flex="1"
            margin="0 20px 0 0"
          >
            <styled.h1>
              Some Event
            </styled.h1>
            <styled.h4>
              2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA
            </styled.h4>
            <Styled(Link)
              to="/event/1/inventory"
            >
              <styled.span
                color="#38A9DB"
              >
                See Inventory List
              </styled.span>
            </Styled(Link)>
          </FlexItem>
          <Flex
            justify="flex-end"
          >
            <FlexItem
              flex="0 0 auto"
              margin="0 25px"
            >
              <styled.p
                size="16px"
              >
                Inventory
              </styled.p>
              <styled.p
                color="#1A4B8A"
                size="22px"
              >
                -- / --
              </styled.p>
              <styled.span
                align="right"
                color="#1A4B8A"
              >
                Unsold / Sold
              </styled.span>
            </FlexItem>
          </Flex>
          <FlexItem
            flex="0 0 auto"
            margin="0 25px"
          >
            <styled.p
              size="16px"
            >
              Revenue
            </styled.p>
            <styled.p
              color="#1A4B8A"
              size="22px"
            >
              $739,472
            </styled.p>
            <styled.span
              align="right"
              color="#1A4B8A"
            >
              as of date
            </styled.span>
          </FlexItem>
        </Flex>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "align": "center",
          "children": Array [
            <styled.button
              expand={true}
              small={true}
            />,
            <Breadcrumbs
              crumbs={
                Array [
                  Object {
                    "path": "/season",
                    "title": "Season Dashboard",
                  },
                  Object {
                    "path": "/event/1",
                    "title": "Some Event",
                  },
                ]
              }
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "expand": true,
              "onClick": undefined,
              "small": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "crumbs": Array [
                Object {
                  "path": "/season",
                  "title": "Season Dashboard",
                },
                Object {
                  "path": "/event/1",
                  "title": "Some Event",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "height": "1.5rem",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "align": "flex-start",
          "children": Array [
            <FlexItem
              flex="1"
              margin="0 20px 0 0"
            >
              <styled.h1>
                Some Event
              </styled.h1>
              <styled.h4>
                2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA
              </styled.h4>
              <Styled(Link)
                to="/event/1/inventory"
              >
                <styled.span
                  color="#38A9DB"
                >
                  See Inventory List
                </styled.span>
              </Styled(Link)>
            </FlexItem>,
            <Flex
              justify="flex-end"
            >
              <FlexItem
                flex="0 0 auto"
                margin="0 25px"
              >
                <styled.p
                  size="16px"
                >
                  Inventory
                </styled.p>
                <styled.p
                  color="#1A4B8A"
                  size="22px"
                >
                  -- / --
                </styled.p>
                <styled.span
                  align="right"
                  color="#1A4B8A"
                >
                  Unsold / Sold
                </styled.span>
              </FlexItem>
            </Flex>,
            <FlexItem
              flex="0 0 auto"
              margin="0 25px"
            >
              <styled.p
                size="16px"
              >
                Revenue
              </styled.p>
              <styled.p
                color="#1A4B8A"
                size="22px"
              >
                $739,472
              </styled.p>
              <styled.span
                align="right"
                color="#1A4B8A"
              >
                as of date
              </styled.span>
            </FlexItem>,
          ],
          "justify": "space-between",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.h1>
                  Some Event
                </styled.h1>,
                <styled.h4>
                  2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA
                </styled.h4>,
                <Styled(Link)
                  to="/event/1/inventory"
                >
                  <styled.span
                    color="#38A9DB"
                  >
                    See Inventory List
                  </styled.span>
                </Styled(Link)>,
              ],
              "flex": "1",
              "margin": "0 20px 0 0",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Some Event",
                },
                "ref": null,
                "rendered": "Some Event",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA",
                },
                "ref": null,
                "rendered": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <styled.span
                    color="#38A9DB"
                  >
                    See Inventory List
                  </styled.span>,
                  "to": "/event/1/inventory",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "See Inventory List",
                    "color": "#38A9DB",
                  },
                  "ref": null,
                  "rendered": "See Inventory List",
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FlexItem
                flex="0 0 auto"
                margin="0 25px"
              >
                <styled.p
                  size="16px"
                >
                  Inventory
                </styled.p>
                <styled.p
                  color="#1A4B8A"
                  size="22px"
                >
                  -- / --
                </styled.p>
                <styled.span
                  align="right"
                  color="#1A4B8A"
                >
                  Unsold / Sold
                </styled.span>
              </FlexItem>,
              "justify": "flex-end",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.p
                    size="16px"
                  >
                    Inventory
                  </styled.p>,
                  <styled.p
                    color="#1A4B8A"
                    size="22px"
                  >
                    -- / --
                  </styled.p>,
                  <styled.span
                    align="right"
                    color="#1A4B8A"
                  >
                    Unsold / Sold
                  </styled.span>,
                ],
                "flex": "0 0 auto",
                "margin": "0 25px",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Inventory",
                    "size": "16px",
                  },
                  "ref": null,
                  "rendered": "Inventory",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "-- / --",
                    "color": "#1A4B8A",
                    "size": "22px",
                  },
                  "ref": null,
                  "rendered": "-- / --",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "align": "right",
                    "children": "Unsold / Sold",
                    "color": "#1A4B8A",
                  },
                  "ref": null,
                  "rendered": "Unsold / Sold",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.p
                  size="16px"
                >
                  Revenue
                </styled.p>,
                <styled.p
                  color="#1A4B8A"
                  size="22px"
                >
                  $739,472
                </styled.p>,
                <styled.span
                  align="right"
                  color="#1A4B8A"
                >
                  as of date
                </styled.span>,
              ],
              "flex": "0 0 auto",
              "margin": "0 25px",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Revenue",
                  "size": "16px",
                },
                "ref": null,
                "rendered": "Revenue",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "$739,472",
                  "color": "#1A4B8A",
                  "size": "22px",
                },
                "ref": null,
                "rendered": "$739,472",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "align": "right",
                  "children": "as of date",
                  "color": "#1A4B8A",
                },
                "ref": null,
                "rendered": "as of date",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Flex
            align="center"
          >
            <styled.button
              expand={true}
              small={true}
            />
            <Breadcrumbs
              crumbs={
                Array [
                  Object {
                    "path": "/season",
                    "title": "Season Dashboard",
                  },
                  Object {
                    "path": "/event/1",
                    "title": "Some Event",
                  },
                ]
              }
            />
          </Flex>,
          <styled.div
            height="1.5rem"
          />,
          <Flex
            align="flex-start"
            justify="space-between"
          >
            <FlexItem
              flex="1"
              margin="0 20px 0 0"
            >
              <styled.h1>
                Some Event
              </styled.h1>
              <styled.h4>
                2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA
              </styled.h4>
              <Styled(Link)
                to="/event/1/inventory"
              >
                <styled.span
                  color="#38A9DB"
                >
                  See Inventory List
                </styled.span>
              </Styled(Link)>
            </FlexItem>
            <Flex
              justify="flex-end"
            >
              <FlexItem
                flex="0 0 auto"
                margin="0 25px"
              >
                <styled.p
                  size="16px"
                >
                  Inventory
                </styled.p>
                <styled.p
                  color="#1A4B8A"
                  size="22px"
                >
                  -- / --
                </styled.p>
                <styled.span
                  align="right"
                  color="#1A4B8A"
                >
                  Unsold / Sold
                </styled.span>
              </FlexItem>
            </Flex>
            <FlexItem
              flex="0 0 auto"
              margin="0 25px"
            >
              <styled.p
                size="16px"
              >
                Revenue
              </styled.p>
              <styled.p
                color="#1A4B8A"
                size="22px"
              >
                $739,472
              </styled.p>
              <styled.span
                align="right"
                color="#1A4B8A"
              >
                as of date
              </styled.span>
            </FlexItem>
          </Flex>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "align": "center",
            "children": Array [
              <styled.button
                expand={true}
                small={true}
              />,
              <Breadcrumbs
                crumbs={
                  Array [
                    Object {
                      "path": "/season",
                      "title": "Season Dashboard",
                    },
                    Object {
                      "path": "/event/1",
                      "title": "Some Event",
                    },
                  ]
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "expand": true,
                "onClick": undefined,
                "small": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "crumbs": Array [
                  Object {
                    "path": "/season",
                    "title": "Season Dashboard",
                  },
                  Object {
                    "path": "/event/1",
                    "title": "Some Event",
                  },
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "height": "1.5rem",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "align": "flex-start",
            "children": Array [
              <FlexItem
                flex="1"
                margin="0 20px 0 0"
              >
                <styled.h1>
                  Some Event
                </styled.h1>
                <styled.h4>
                  2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA
                </styled.h4>
                <Styled(Link)
                  to="/event/1/inventory"
                >
                  <styled.span
                    color="#38A9DB"
                  >
                    See Inventory List
                  </styled.span>
                </Styled(Link)>
              </FlexItem>,
              <Flex
                justify="flex-end"
              >
                <FlexItem
                  flex="0 0 auto"
                  margin="0 25px"
                >
                  <styled.p
                    size="16px"
                  >
                    Inventory
                  </styled.p>
                  <styled.p
                    color="#1A4B8A"
                    size="22px"
                  >
                    -- / --
                  </styled.p>
                  <styled.span
                    align="right"
                    color="#1A4B8A"
                  >
                    Unsold / Sold
                  </styled.span>
                </FlexItem>
              </Flex>,
              <FlexItem
                flex="0 0 auto"
                margin="0 25px"
              >
                <styled.p
                  size="16px"
                >
                  Revenue
                </styled.p>
                <styled.p
                  color="#1A4B8A"
                  size="22px"
                >
                  $739,472
                </styled.p>
                <styled.span
                  align="right"
                  color="#1A4B8A"
                >
                  as of date
                </styled.span>
              </FlexItem>,
            ],
            "justify": "space-between",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.h1>
                    Some Event
                  </styled.h1>,
                  <styled.h4>
                    2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA
                  </styled.h4>,
                  <Styled(Link)
                    to="/event/1/inventory"
                  >
                    <styled.span
                      color="#38A9DB"
                    >
                      See Inventory List
                    </styled.span>
                  </Styled(Link)>,
                ],
                "flex": "1",
                "margin": "0 20px 0 0",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Some Event",
                  },
                  "ref": null,
                  "rendered": "Some Event",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA",
                  },
                  "ref": null,
                  "rendered": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <styled.span
                      color="#38A9DB"
                    >
                      See Inventory List
                    </styled.span>,
                    "to": "/event/1/inventory",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "See Inventory List",
                      "color": "#38A9DB",
                    },
                    "ref": null,
                    "rendered": "See Inventory List",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FlexItem
                  flex="0 0 auto"
                  margin="0 25px"
                >
                  <styled.p
                    size="16px"
                  >
                    Inventory
                  </styled.p>
                  <styled.p
                    color="#1A4B8A"
                    size="22px"
                  >
                    -- / --
                  </styled.p>
                  <styled.span
                    align="right"
                    color="#1A4B8A"
                  >
                    Unsold / Sold
                  </styled.span>
                </FlexItem>,
                "justify": "flex-end",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <styled.p
                      size="16px"
                    >
                      Inventory
                    </styled.p>,
                    <styled.p
                      color="#1A4B8A"
                      size="22px"
                    >
                      -- / --
                    </styled.p>,
                    <styled.span
                      align="right"
                      color="#1A4B8A"
                    >
                      Unsold / Sold
                    </styled.span>,
                  ],
                  "flex": "0 0 auto",
                  "margin": "0 25px",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Inventory",
                      "size": "16px",
                    },
                    "ref": null,
                    "rendered": "Inventory",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "-- / --",
                      "color": "#1A4B8A",
                      "size": "22px",
                    },
                    "ref": null,
                    "rendered": "-- / --",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "align": "right",
                      "children": "Unsold / Sold",
                      "color": "#1A4B8A",
                    },
                    "ref": null,
                    "rendered": "Unsold / Sold",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.p
                    size="16px"
                  >
                    Revenue
                  </styled.p>,
                  <styled.p
                    color="#1A4B8A"
                    size="22px"
                  >
                    $739,472
                  </styled.p>,
                  <styled.span
                    align="right"
                    color="#1A4B8A"
                  >
                    as of date
                  </styled.span>,
                ],
                "flex": "0 0 auto",
                "margin": "0 25px",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Revenue",
                    "size": "16px",
                  },
                  "ref": null,
                  "rendered": "Revenue",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "$739,472",
                    "color": "#1A4B8A",
                    "size": "22px",
                  },
                  "ref": null,
                  "rendered": "$739,472",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "align": "right",
                    "children": "as of date",
                    "color": "#1A4B8A",
                  },
                  "ref": null,
                  "rendered": "as of date",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<EventHeader /> should render correctly when on the location route 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventHeader
    availableInventory={100}
    event={
      Object {
        "clientId": 1,
        "createdAt": 1529336865706,
        "id": 1,
        "integrationId": 1,
        "modifiedAt": 1529336865706,
        "name": "Some Event",
        "revenue": 739472,
        "seasonId": 1,
        "timestamp": 1529336865706,
        "venueId": 1,
      }
    }
    pathname="/event/1/inventory"
    totalInventory={1000}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Flex
          align="center"
        >
          <styled.button
            expand={true}
            small={true}
          />
          <Breadcrumbs
            crumbs={
              Array [
                Object {
                  "path": "/season",
                  "title": "Season Dashboard",
                },
                Object {
                  "path": "/event/1",
                  "title": "Some Event",
                },
                Object {
                  "path": "/event/1/inventory",
                  "title": "Inventory",
                },
              ]
            }
          />
        </Flex>,
        <styled.div
          height="1.5rem"
        />,
        <Flex
          align="flex-start"
          justify="space-between"
        >
          <FlexItem
            flex="1"
            margin="0 20px 0 0"
          >
            <styled.h1>
              Some Event
            </styled.h1>
            <styled.h4>
              2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA
            </styled.h4>
          </FlexItem>
          <Flex
            justify="flex-end"
          >
            <FlexItem
              flex="0 0 auto"
              margin="0 25px"
            >
              <styled.p
                size="16px"
              >
                Inventory
              </styled.p>
              <styled.p
                color="#1A4B8A"
                size="22px"
              >
                -- / --
              </styled.p>
              <styled.span
                align="right"
                color="#1A4B8A"
              >
                Unsold / Sold
              </styled.span>
            </FlexItem>
          </Flex>
          <FlexItem
            flex="0 0 auto"
            margin="0 25px"
          >
            <styled.p
              size="16px"
            >
              Revenue
            </styled.p>
            <styled.p
              color="#1A4B8A"
              size="22px"
            >
              $739,472
            </styled.p>
            <styled.span
              align="right"
              color="#1A4B8A"
            >
              as of date
            </styled.span>
          </FlexItem>
        </Flex>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "align": "center",
          "children": Array [
            <styled.button
              expand={true}
              small={true}
            />,
            <Breadcrumbs
              crumbs={
                Array [
                  Object {
                    "path": "/season",
                    "title": "Season Dashboard",
                  },
                  Object {
                    "path": "/event/1",
                    "title": "Some Event",
                  },
                  Object {
                    "path": "/event/1/inventory",
                    "title": "Inventory",
                  },
                ]
              }
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "expand": true,
              "onClick": undefined,
              "small": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "crumbs": Array [
                Object {
                  "path": "/season",
                  "title": "Season Dashboard",
                },
                Object {
                  "path": "/event/1",
                  "title": "Some Event",
                },
                Object {
                  "path": "/event/1/inventory",
                  "title": "Inventory",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "height": "1.5rem",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "align": "flex-start",
          "children": Array [
            <FlexItem
              flex="1"
              margin="0 20px 0 0"
            >
              <styled.h1>
                Some Event
              </styled.h1>
              <styled.h4>
                2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA
              </styled.h4>
            </FlexItem>,
            <Flex
              justify="flex-end"
            >
              <FlexItem
                flex="0 0 auto"
                margin="0 25px"
              >
                <styled.p
                  size="16px"
                >
                  Inventory
                </styled.p>
                <styled.p
                  color="#1A4B8A"
                  size="22px"
                >
                  -- / --
                </styled.p>
                <styled.span
                  align="right"
                  color="#1A4B8A"
                >
                  Unsold / Sold
                </styled.span>
              </FlexItem>
            </Flex>,
            <FlexItem
              flex="0 0 auto"
              margin="0 25px"
            >
              <styled.p
                size="16px"
              >
                Revenue
              </styled.p>
              <styled.p
                color="#1A4B8A"
                size="22px"
              >
                $739,472
              </styled.p>
              <styled.span
                align="right"
                color="#1A4B8A"
              >
                as of date
              </styled.span>
            </FlexItem>,
          ],
          "justify": "space-between",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.h1>
                  Some Event
                </styled.h1>,
                <styled.h4>
                  2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA
                </styled.h4>,
                false,
              ],
              "flex": "1",
              "margin": "0 20px 0 0",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Some Event",
                },
                "ref": null,
                "rendered": "Some Event",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA",
                },
                "ref": null,
                "rendered": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA",
                "type": [Function],
              },
              false,
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FlexItem
                flex="0 0 auto"
                margin="0 25px"
              >
                <styled.p
                  size="16px"
                >
                  Inventory
                </styled.p>
                <styled.p
                  color="#1A4B8A"
                  size="22px"
                >
                  -- / --
                </styled.p>
                <styled.span
                  align="right"
                  color="#1A4B8A"
                >
                  Unsold / Sold
                </styled.span>
              </FlexItem>,
              "justify": "flex-end",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.p
                    size="16px"
                  >
                    Inventory
                  </styled.p>,
                  <styled.p
                    color="#1A4B8A"
                    size="22px"
                  >
                    -- / --
                  </styled.p>,
                  <styled.span
                    align="right"
                    color="#1A4B8A"
                  >
                    Unsold / Sold
                  </styled.span>,
                ],
                "flex": "0 0 auto",
                "margin": "0 25px",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Inventory",
                    "size": "16px",
                  },
                  "ref": null,
                  "rendered": "Inventory",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "-- / --",
                    "color": "#1A4B8A",
                    "size": "22px",
                  },
                  "ref": null,
                  "rendered": "-- / --",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "align": "right",
                    "children": "Unsold / Sold",
                    "color": "#1A4B8A",
                  },
                  "ref": null,
                  "rendered": "Unsold / Sold",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.p
                  size="16px"
                >
                  Revenue
                </styled.p>,
                <styled.p
                  color="#1A4B8A"
                  size="22px"
                >
                  $739,472
                </styled.p>,
                <styled.span
                  align="right"
                  color="#1A4B8A"
                >
                  as of date
                </styled.span>,
              ],
              "flex": "0 0 auto",
              "margin": "0 25px",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Revenue",
                  "size": "16px",
                },
                "ref": null,
                "rendered": "Revenue",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "$739,472",
                  "color": "#1A4B8A",
                  "size": "22px",
                },
                "ref": null,
                "rendered": "$739,472",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "align": "right",
                  "children": "as of date",
                  "color": "#1A4B8A",
                },
                "ref": null,
                "rendered": "as of date",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Flex
            align="center"
          >
            <styled.button
              expand={true}
              small={true}
            />
            <Breadcrumbs
              crumbs={
                Array [
                  Object {
                    "path": "/season",
                    "title": "Season Dashboard",
                  },
                  Object {
                    "path": "/event/1",
                    "title": "Some Event",
                  },
                  Object {
                    "path": "/event/1/inventory",
                    "title": "Inventory",
                  },
                ]
              }
            />
          </Flex>,
          <styled.div
            height="1.5rem"
          />,
          <Flex
            align="flex-start"
            justify="space-between"
          >
            <FlexItem
              flex="1"
              margin="0 20px 0 0"
            >
              <styled.h1>
                Some Event
              </styled.h1>
              <styled.h4>
                2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA
              </styled.h4>
            </FlexItem>
            <Flex
              justify="flex-end"
            >
              <FlexItem
                flex="0 0 auto"
                margin="0 25px"
              >
                <styled.p
                  size="16px"
                >
                  Inventory
                </styled.p>
                <styled.p
                  color="#1A4B8A"
                  size="22px"
                >
                  -- / --
                </styled.p>
                <styled.span
                  align="right"
                  color="#1A4B8A"
                >
                  Unsold / Sold
                </styled.span>
              </FlexItem>
            </Flex>
            <FlexItem
              flex="0 0 auto"
              margin="0 25px"
            >
              <styled.p
                size="16px"
              >
                Revenue
              </styled.p>
              <styled.p
                color="#1A4B8A"
                size="22px"
              >
                $739,472
              </styled.p>
              <styled.span
                align="right"
                color="#1A4B8A"
              >
                as of date
              </styled.span>
            </FlexItem>
          </Flex>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "align": "center",
            "children": Array [
              <styled.button
                expand={true}
                small={true}
              />,
              <Breadcrumbs
                crumbs={
                  Array [
                    Object {
                      "path": "/season",
                      "title": "Season Dashboard",
                    },
                    Object {
                      "path": "/event/1",
                      "title": "Some Event",
                    },
                    Object {
                      "path": "/event/1/inventory",
                      "title": "Inventory",
                    },
                  ]
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "expand": true,
                "onClick": undefined,
                "small": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "crumbs": Array [
                  Object {
                    "path": "/season",
                    "title": "Season Dashboard",
                  },
                  Object {
                    "path": "/event/1",
                    "title": "Some Event",
                  },
                  Object {
                    "path": "/event/1/inventory",
                    "title": "Inventory",
                  },
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "height": "1.5rem",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "align": "flex-start",
            "children": Array [
              <FlexItem
                flex="1"
                margin="0 20px 0 0"
              >
                <styled.h1>
                  Some Event
                </styled.h1>
                <styled.h4>
                  2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA
                </styled.h4>
              </FlexItem>,
              <Flex
                justify="flex-end"
              >
                <FlexItem
                  flex="0 0 auto"
                  margin="0 25px"
                >
                  <styled.p
                    size="16px"
                  >
                    Inventory
                  </styled.p>
                  <styled.p
                    color="#1A4B8A"
                    size="22px"
                  >
                    -- / --
                  </styled.p>
                  <styled.span
                    align="right"
                    color="#1A4B8A"
                  >
                    Unsold / Sold
                  </styled.span>
                </FlexItem>
              </Flex>,
              <FlexItem
                flex="0 0 auto"
                margin="0 25px"
              >
                <styled.p
                  size="16px"
                >
                  Revenue
                </styled.p>
                <styled.p
                  color="#1A4B8A"
                  size="22px"
                >
                  $739,472
                </styled.p>
                <styled.span
                  align="right"
                  color="#1A4B8A"
                >
                  as of date
                </styled.span>
              </FlexItem>,
            ],
            "justify": "space-between",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.h1>
                    Some Event
                  </styled.h1>,
                  <styled.h4>
                    2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA
                  </styled.h4>,
                  false,
                ],
                "flex": "1",
                "margin": "0 20px 0 0",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Some Event",
                  },
                  "ref": null,
                  "rendered": "Some Event",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA",
                  },
                  "ref": null,
                  "rendered": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mmA",
                  "type": [Function],
                },
                false,
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FlexItem
                  flex="0 0 auto"
                  margin="0 25px"
                >
                  <styled.p
                    size="16px"
                  >
                    Inventory
                  </styled.p>
                  <styled.p
                    color="#1A4B8A"
                    size="22px"
                  >
                    -- / --
                  </styled.p>
                  <styled.span
                    align="right"
                    color="#1A4B8A"
                  >
                    Unsold / Sold
                  </styled.span>
                </FlexItem>,
                "justify": "flex-end",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <styled.p
                      size="16px"
                    >
                      Inventory
                    </styled.p>,
                    <styled.p
                      color="#1A4B8A"
                      size="22px"
                    >
                      -- / --
                    </styled.p>,
                    <styled.span
                      align="right"
                      color="#1A4B8A"
                    >
                      Unsold / Sold
                    </styled.span>,
                  ],
                  "flex": "0 0 auto",
                  "margin": "0 25px",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Inventory",
                      "size": "16px",
                    },
                    "ref": null,
                    "rendered": "Inventory",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "-- / --",
                      "color": "#1A4B8A",
                      "size": "22px",
                    },
                    "ref": null,
                    "rendered": "-- / --",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "align": "right",
                      "children": "Unsold / Sold",
                      "color": "#1A4B8A",
                    },
                    "ref": null,
                    "rendered": "Unsold / Sold",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.p
                    size="16px"
                  >
                    Revenue
                  </styled.p>,
                  <styled.p
                    color="#1A4B8A"
                    size="22px"
                  >
                    $739,472
                  </styled.p>,
                  <styled.span
                    align="right"
                    color="#1A4B8A"
                  >
                    as of date
                  </styled.span>,
                ],
                "flex": "0 0 auto",
                "margin": "0 25px",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Revenue",
                    "size": "16px",
                  },
                  "ref": null,
                  "rendered": "Revenue",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "$739,472",
                    "color": "#1A4B8A",
                    "size": "22px",
                  },
                  "ref": null,
                  "rendered": "$739,472",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "align": "right",
                    "children": "as of date",
                    "color": "#1A4B8A",
                  },
                  "ref": null,
                  "rendered": "as of date",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
