// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EventHeader /> should render correctly 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
    }
  }
>
  <EventHeader
    availableInventory={100}
    event={
      Object {
        "clientId": 1,
        "createdAt": 1529336865706,
        "id": 1,
        "integrationId": 1,
        "modifiedAt": 1529336865706,
        "name": "Some Event",
        "revenue": 739472,
        "seasonId": 1,
        "timeZone": "America/Chicago",
        "timestamp": 1529336865706,
        "venueId": 1,
      }
    }
    pathname="/event/1/"
    totalInventory={1000}
  />
</ContextProvider>
`;

exports[`<EventHeader /> should render correctly when on the location route 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
    }
  }
>
  <EventHeader
    availableInventory={100}
    event={
      Object {
        "clientId": 1,
        "createdAt": 1529336865706,
        "id": 1,
        "integrationId": 1,
        "modifiedAt": 1529336865706,
        "name": "Some Event",
        "revenue": 739472,
        "seasonId": 1,
        "timeZone": "America/Chicago",
        "timestamp": 1529336865706,
        "venueId": 1,
      }
    }
    pathname="/event/1/inventory"
    totalInventory={1000}
  />
</ContextProvider>
`;
