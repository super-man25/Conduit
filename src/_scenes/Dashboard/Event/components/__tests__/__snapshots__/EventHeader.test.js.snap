// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EventHeader /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventHeader
    availableInventory={100}
    event={
      Object {
        "clientId": 1,
        "createdAt": 1529336865706,
        "id": 1,
        "integrationId": 1,
        "modifiedAt": 1529336865706,
        "name": "Some Event",
        "revenue": 739472,
        "seasonId": 1,
        "timestamp": 1529336865706,
        "venueId": 1,
      }
    }
    pathname="/event/1/"
    totalInventory={1000}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          align="center"
        >
          <ForwardRef
            expand={true}
            small={true}
          />
          <Breadcrumbs
            crumbs={
              Array [
                Object {
                  "path": "/season",
                  "title": "Season Dashboard",
                },
                Object {
                  "path": "/event/1",
                  "title": "Some Event",
                },
              ]
            }
          />
        </ForwardRef>,
        <ForwardRef
          height="1.5rem"
        />,
        <ForwardRef
          align="flex-start"
          justify="space-between"
        >
          <ForwardRef
            flex="1"
            margin="0 20px 0 0"
          >
            <ForwardRef>
              Some Event
            </ForwardRef>
            <ForwardRef>
              2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A
            </ForwardRef>
            <ForwardRef
              to="/event/1/inventory"
            >
              <ForwardRef
                color="#38A9DB"
              >
                See Inventory List
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            justify="flex-end"
          >
            <ForwardRef
              flex="0 0 auto"
              margin="0 25px"
            >
              <ForwardRef
                size="16px"
              >
                Inventory
              </ForwardRef>
              <ForwardRef
                color="#1A4B8A"
                size="22px"
              >
                -- / --
              </ForwardRef>
              <ForwardRef
                align="right"
                color="#1A4B8A"
              >
                Unsold / Sold
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            flex="0 0 auto"
            margin="0 25px"
          >
            <ForwardRef
              size="16px"
            >
              Revenue
            </ForwardRef>
            <ForwardRef
              color="#1A4B8A"
              size="22px"
            >
              $739,472
            </ForwardRef>
            <ForwardRef
              align="right"
              color="#1A4B8A"
            >
              to date
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "align": "center",
          "children": Array [
            <ForwardRef
              expand={true}
              small={true}
            />,
            <Breadcrumbs
              crumbs={
                Array [
                  Object {
                    "path": "/season",
                    "title": "Season Dashboard",
                  },
                  Object {
                    "path": "/event/1",
                    "title": "Some Event",
                  },
                ]
              }
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "expand": true,
              "onClick": undefined,
              "small": true,
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [
                [Function],
              ],
              "componentStyle": ComponentStyle {
                "componentId": "sc-lkqHmb",
                "isStatic": false,
                "rules": Array [
                  "
  display: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-size: ",
                  [Function],
                  ";
  font-weight: 200;
  width: ",
                  [Function],
                  ";
  margin: 0;
  margin-top: ",
                  [Function],
                  ";
  margin-bottom: ",
                  [Function],
                  ";
  margin-right: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
  padding-top: ",
                  [Function],
                  ";
  padding-bottom: ",
                  [Function],
                  ";
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                  [Function],
                  ";
  background-color: ",
                  [Function],
                  ";
  &:hover {
    cursor: ",
                  [Function],
                  ";
    color: ",
                  [Function],
                  ";
    background-color: ",
                  [Function],
                  ";
    border-color: ",
                  [Function],
                  ";
  }

  &::before {
    content: '",
                  [Function],
                  "';
  }
",
                  "
  margin: 0;
  margin-right: 1rem;
",
                ],
              },
              "displayName": "Styled(styled.button)",
              "foldedComponentIds": Array [
                "sc-dnqmqq",
              ],
              "render": [Function],
              "styledComponentId": "sc-lkqHmb",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "crumbs": Array [
                Object {
                  "path": "/season",
                  "title": "Season Dashboard",
                },
                Object {
                  "path": "/event/1",
                  "title": "Some Event",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-hMqMXs",
            "isStatic": false,
            "rules": Array [
              "
  display: ",
              [Function],
              ";
  flex: ",
              [Function],
              ";
  flex-direction: ",
              [Function],
              "
  flex-grow: ",
              [Function],
              ";
  flex-shrink: ",
              [Function],
              ";
  flex-basis: ",
              [Function],
              ";
  flex-wrap: ",
              [Function],
              ";
  order: ",
              [Function],
              ";
  justify-content: ",
              [Function],
              ";
  align-items: ",
              [Function],
              ";
  align-content: ",
              [Function],
              ";
  align-self: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
            ],
          },
          "displayName": "Flex",
          "foldedComponentIds": Array [
            "sc-eNQAEJ",
          ],
          "render": [Function],
          "styledComponentId": "sc-hMqMXs",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "height": "1.5rem",
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-ksYbfQ",
            "isStatic": false,
            "rules": Array [
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-ksYbfQ",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "align": "flex-start",
          "children": Array [
            <ForwardRef
              flex="1"
              margin="0 20px 0 0"
            >
              <ForwardRef>
                Some Event
              </ForwardRef>
              <ForwardRef>
                2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A
              </ForwardRef>
              <ForwardRef
                to="/event/1/inventory"
              >
                <ForwardRef
                  color="#38A9DB"
                >
                  See Inventory List
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>,
            <ForwardRef
              justify="flex-end"
            >
              <ForwardRef
                flex="0 0 auto"
                margin="0 25px"
              >
                <ForwardRef
                  size="16px"
                >
                  Inventory
                </ForwardRef>
                <ForwardRef
                  color="#1A4B8A"
                  size="22px"
                >
                  -- / --
                </ForwardRef>
                <ForwardRef
                  align="right"
                  color="#1A4B8A"
                >
                  Unsold / Sold
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>,
            <ForwardRef
              flex="0 0 auto"
              margin="0 25px"
            >
              <ForwardRef
                size="16px"
              >
                Revenue
              </ForwardRef>
              <ForwardRef
                color="#1A4B8A"
                size="22px"
              >
                $739,472
              </ForwardRef>
              <ForwardRef
                align="right"
                color="#1A4B8A"
              >
                to date
              </ForwardRef>
            </ForwardRef>,
          ],
          "justify": "space-between",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  Some Event
                </ForwardRef>,
                <ForwardRef>
                  2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A
                </ForwardRef>,
                <ForwardRef
                  to="/event/1/inventory"
                >
                  <ForwardRef
                    color="#38A9DB"
                  >
                    See Inventory List
                  </ForwardRef>
                </ForwardRef>,
              ],
              "flex": "1",
              "margin": "0 20px 0 0",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Some Event",
                },
                "ref": null,
                "rendered": "Some Event",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-eLExRp",
                    "isStatic": false,
                    "rules": Array [
                      "
  color: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  font-weight: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  margin: 0;
  margin-bottom: 0.15rem;
",
                    ],
                  },
                  "displayName": "Styled(Styled(styled.h1))",
                  "foldedComponentIds": Array [
                    "sc-gZMcBi",
                    "sc-gqjmRU",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-eLExRp",
                  "target": "h1",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A",
                },
                "ref": null,
                "rendered": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-cbkKFq",
                    "isStatic": false,
                    "rules": Array [
                      "
    color: ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      ";
    font-weight: ",
                      [Function],
                      ";
  ",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  color: ",
                      "#1A4B8A",
                      ";
  margin: 0;
  margin-bottom: 0.15rem;
",
                    ],
                  },
                  "displayName": "Styled(Styled(styled.h4))",
                  "foldedComponentIds": Array [
                    "sc-fjdhpX",
                    "sc-jzJRlG",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-cbkKFq",
                  "target": "h4",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    color="#38A9DB"
                  >
                    See Inventory List
                  </ForwardRef>,
                  "to": "/event/1/inventory",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "See Inventory List",
                    "color": "#38A9DB",
                  },
                  "ref": null,
                  "rendered": "See Inventory List",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-krvtoX",
                      "isStatic": false,
                      "rules": Array [
                        "
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
  color: ",
                        "#38A9DB",
                        ";
  text-decoration: underline;
",
                      ],
                    },
                    "displayName": "Styled(styled.span)",
                    "foldedComponentIds": Array [
                      "sc-chPdSV",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-krvtoX",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hXRMBi",
                    "isStatic": false,
                    "rules": Array [
                      "
  text-decoration: none;
  font-size: ",
                      [Function],
                      ";
  color: ",
                      "#323232",
                      ";
  font-weight: ",
                      [Function],
                      ";

  &:focus,
  &:hover {
    outline: 0;
    text-decoration: none;
    cursor: pointer;
    color: ",
                      "#38A9DB",
                      ";
    transition: all .1s ease-in-out;
    text-shadow: 0 0 .1px ",
                      "#38A9DB",
                      ";
  }

  &:active,
  &:visited {
    outline: 0
    text-decoration: none;
  }
",
                    ],
                  },
                  "displayName": "Styled(Link)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-hXRMBi",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-kEYyzF",
                "isStatic": false,
                "rules": Array [
                  "
  flex: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                ],
              },
              "defaultProps": Object {
                "flex": 1,
              },
              "displayName": "FlexItem",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-kEYyzF",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                flex="0 0 auto"
                margin="0 25px"
              >
                <ForwardRef
                  size="16px"
                >
                  Inventory
                </ForwardRef>
                <ForwardRef
                  color="#1A4B8A"
                  size="22px"
                >
                  -- / --
                </ForwardRef>
                <ForwardRef
                  align="right"
                  color="#1A4B8A"
                >
                  Unsold / Sold
                </ForwardRef>
              </ForwardRef>,
              "justify": "flex-end",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    size="16px"
                  >
                    Inventory
                  </ForwardRef>,
                  <ForwardRef
                    color="#1A4B8A"
                    size="22px"
                  >
                    -- / --
                  </ForwardRef>,
                  <ForwardRef
                    align="right"
                    color="#1A4B8A"
                  >
                    Unsold / Sold
                  </ForwardRef>,
                ],
                "flex": "0 0 auto",
                "margin": "0 25px",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Inventory",
                    "size": "16px",
                  },
                  "ref": null,
                  "rendered": "Inventory",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fYiAbW",
                      "isStatic": false,
                      "rules": Array [
                        "
  margin: 0;
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
  text-align: right;
",
                      ],
                    },
                    "displayName": "Styled(styled.p)",
                    "foldedComponentIds": Array [
                      "sc-kAzzGY",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-fYiAbW",
                    "target": "p",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "-- / --",
                    "color": "#1A4B8A",
                    "size": "22px",
                  },
                  "ref": null,
                  "rendered": "-- / --",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fYiAbW",
                      "isStatic": false,
                      "rules": Array [
                        "
  margin: 0;
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
  text-align: right;
",
                      ],
                    },
                    "displayName": "Styled(styled.p)",
                    "foldedComponentIds": Array [
                      "sc-kAzzGY",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-fYiAbW",
                    "target": "p",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "align": "right",
                    "children": "Unsold / Sold",
                    "color": "#1A4B8A",
                  },
                  "ref": null,
                  "rendered": "Unsold / Sold",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fOKMvo",
                      "isStatic": false,
                      "rules": Array [
                        "
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
  font-style: italic;
  display: block;
  text-align: ",
                        [Function],
                        ";
",
                      ],
                    },
                    "displayName": "Styled(styled.span)",
                    "foldedComponentIds": Array [
                      "sc-chPdSV",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-fOKMvo",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kEYyzF",
                  "isStatic": false,
                  "rules": Array [
                    "
  flex: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                  ],
                },
                "defaultProps": Object {
                  "flex": 1,
                },
                "displayName": "FlexItem",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-kEYyzF",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-hMqMXs",
                "isStatic": false,
                "rules": Array [
                  "
  display: ",
                  [Function],
                  ";
  flex: ",
                  [Function],
                  ";
  flex-direction: ",
                  [Function],
                  "
  flex-grow: ",
                  [Function],
                  ";
  flex-shrink: ",
                  [Function],
                  ";
  flex-basis: ",
                  [Function],
                  ";
  flex-wrap: ",
                  [Function],
                  ";
  order: ",
                  [Function],
                  ";
  justify-content: ",
                  [Function],
                  ";
  align-items: ",
                  [Function],
                  ";
  align-content: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Flex",
              "foldedComponentIds": Array [
                "sc-eNQAEJ",
              ],
              "render": [Function],
              "styledComponentId": "sc-hMqMXs",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef
                  size="16px"
                >
                  Revenue
                </ForwardRef>,
                <ForwardRef
                  color="#1A4B8A"
                  size="22px"
                >
                  $739,472
                </ForwardRef>,
                <ForwardRef
                  align="right"
                  color="#1A4B8A"
                >
                  to date
                </ForwardRef>,
              ],
              "flex": "0 0 auto",
              "margin": "0 25px",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Revenue",
                  "size": "16px",
                },
                "ref": null,
                "rendered": "Revenue",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-fYiAbW",
                    "isStatic": false,
                    "rules": Array [
                      "
  margin: 0;
  color: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  font-weight: ",
                      [Function],
                      ";
",
                      "
  text-align: right;
",
                    ],
                  },
                  "displayName": "Styled(styled.p)",
                  "foldedComponentIds": Array [
                    "sc-kAzzGY",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-fYiAbW",
                  "target": "p",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "$739,472",
                  "color": "#1A4B8A",
                  "size": "22px",
                },
                "ref": null,
                "rendered": "$739,472",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-fYiAbW",
                    "isStatic": false,
                    "rules": Array [
                      "
  margin: 0;
  color: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  font-weight: ",
                      [Function],
                      ";
",
                      "
  text-align: right;
",
                    ],
                  },
                  "displayName": "Styled(styled.p)",
                  "foldedComponentIds": Array [
                    "sc-kAzzGY",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-fYiAbW",
                  "target": "p",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "align": "right",
                  "children": "to date",
                  "color": "#1A4B8A",
                },
                "ref": null,
                "rendered": "to date",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-fOKMvo",
                    "isStatic": false,
                    "rules": Array [
                      "
  color: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  font-weight: ",
                      [Function],
                      ";
",
                      "
  font-style: italic;
  display: block;
  text-align: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "Styled(styled.span)",
                  "foldedComponentIds": Array [
                    "sc-chPdSV",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-fOKMvo",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-kEYyzF",
                "isStatic": false,
                "rules": Array [
                  "
  flex: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                ],
              },
              "defaultProps": Object {
                "flex": 1,
              },
              "displayName": "FlexItem",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-kEYyzF",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-hMqMXs",
            "isStatic": false,
            "rules": Array [
              "
  display: ",
              [Function],
              ";
  flex: ",
              [Function],
              ";
  flex-direction: ",
              [Function],
              "
  flex-grow: ",
              [Function],
              ";
  flex-shrink: ",
              [Function],
              ";
  flex-basis: ",
              [Function],
              ";
  flex-wrap: ",
              [Function],
              ";
  order: ",
              [Function],
              ";
  justify-content: ",
              [Function],
              ";
  align-items: ",
              [Function],
              ";
  align-content: ",
              [Function],
              ";
  align-self: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
            ],
          },
          "displayName": "Flex",
          "foldedComponentIds": Array [
            "sc-eNQAEJ",
          ],
          "render": [Function],
          "styledComponentId": "sc-hMqMXs",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-dxgOiQ",
        "isStatic": false,
        "rules": Array [
          "
  width: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
",
          "
    margin: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
    margin-left: ",
          [Function],
          ";
    margin-right: ",
          [Function],
          ";

    padding: ",
          [Function],
          ";
    padding-top: ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    padding-left: ",
          [Function],
          ";
    padding-right: ",
          [Function],
          ";

    border: ",
          [Function],
          ";
    border-top: ",
          [Function],
          ";
    border-bottom: ",
          [Function],
          ";
    border-left: ",
          [Function],
          ";
    border-right: ",
          [Function],
          ";
  ",
        ],
      },
      "displayName": "Styled(styled.div)",
      "foldedComponentIds": Array [
        "sc-kpOJdX",
      ],
      "render": [Function],
      "styledComponentId": "sc-dxgOiQ",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            align="center"
          >
            <ForwardRef
              expand={true}
              small={true}
            />
            <Breadcrumbs
              crumbs={
                Array [
                  Object {
                    "path": "/season",
                    "title": "Season Dashboard",
                  },
                  Object {
                    "path": "/event/1",
                    "title": "Some Event",
                  },
                ]
              }
            />
          </ForwardRef>,
          <ForwardRef
            height="1.5rem"
          />,
          <ForwardRef
            align="flex-start"
            justify="space-between"
          >
            <ForwardRef
              flex="1"
              margin="0 20px 0 0"
            >
              <ForwardRef>
                Some Event
              </ForwardRef>
              <ForwardRef>
                2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A
              </ForwardRef>
              <ForwardRef
                to="/event/1/inventory"
              >
                <ForwardRef
                  color="#38A9DB"
                >
                  See Inventory List
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              justify="flex-end"
            >
              <ForwardRef
                flex="0 0 auto"
                margin="0 25px"
              >
                <ForwardRef
                  size="16px"
                >
                  Inventory
                </ForwardRef>
                <ForwardRef
                  color="#1A4B8A"
                  size="22px"
                >
                  -- / --
                </ForwardRef>
                <ForwardRef
                  align="right"
                  color="#1A4B8A"
                >
                  Unsold / Sold
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              flex="0 0 auto"
              margin="0 25px"
            >
              <ForwardRef
                size="16px"
              >
                Revenue
              </ForwardRef>
              <ForwardRef
                color="#1A4B8A"
                size="22px"
              >
                $739,472
              </ForwardRef>
              <ForwardRef
                align="right"
                color="#1A4B8A"
              >
                to date
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "align": "center",
            "children": Array [
              <ForwardRef
                expand={true}
                small={true}
              />,
              <Breadcrumbs
                crumbs={
                  Array [
                    Object {
                      "path": "/season",
                      "title": "Season Dashboard",
                    },
                    Object {
                      "path": "/event/1",
                      "title": "Some Event",
                    },
                  ]
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "expand": true,
                "onClick": undefined,
                "small": true,
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-lkqHmb",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-size: ",
                    [Function],
                    ";
  font-weight: 200;
  width: ",
                    [Function],
                    ";
  margin: 0;
  margin-top: ",
                    [Function],
                    ";
  margin-bottom: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
  padding-top: ",
                    [Function],
                    ";
  padding-bottom: ",
                    [Function],
                    ";
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                    [Function],
                    ";
  background-color: ",
                    [Function],
                    ";
  &:hover {
    cursor: ",
                    [Function],
                    ";
    color: ",
                    [Function],
                    ";
    background-color: ",
                    [Function],
                    ";
    border-color: ",
                    [Function],
                    ";
  }

  &::before {
    content: '",
                    [Function],
                    "';
  }
",
                    "
  margin: 0;
  margin-right: 1rem;
",
                  ],
                },
                "displayName": "Styled(styled.button)",
                "foldedComponentIds": Array [
                  "sc-dnqmqq",
                ],
                "render": [Function],
                "styledComponentId": "sc-lkqHmb",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "crumbs": Array [
                  Object {
                    "path": "/season",
                    "title": "Season Dashboard",
                  },
                  Object {
                    "path": "/event/1",
                    "title": "Some Event",
                  },
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-hMqMXs",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Flex",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
            ],
            "render": [Function],
            "styledComponentId": "sc-hMqMXs",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "height": "1.5rem",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ksYbfQ",
              "isStatic": false,
              "rules": Array [
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ksYbfQ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "align": "flex-start",
            "children": Array [
              <ForwardRef
                flex="1"
                margin="0 20px 0 0"
              >
                <ForwardRef>
                  Some Event
                </ForwardRef>
                <ForwardRef>
                  2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A
                </ForwardRef>
                <ForwardRef
                  to="/event/1/inventory"
                >
                  <ForwardRef
                    color="#38A9DB"
                  >
                    See Inventory List
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef>,
              <ForwardRef
                justify="flex-end"
              >
                <ForwardRef
                  flex="0 0 auto"
                  margin="0 25px"
                >
                  <ForwardRef
                    size="16px"
                  >
                    Inventory
                  </ForwardRef>
                  <ForwardRef
                    color="#1A4B8A"
                    size="22px"
                  >
                    -- / --
                  </ForwardRef>
                  <ForwardRef
                    align="right"
                    color="#1A4B8A"
                  >
                    Unsold / Sold
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef>,
              <ForwardRef
                flex="0 0 auto"
                margin="0 25px"
              >
                <ForwardRef
                  size="16px"
                >
                  Revenue
                </ForwardRef>
                <ForwardRef
                  color="#1A4B8A"
                  size="22px"
                >
                  $739,472
                </ForwardRef>
                <ForwardRef
                  align="right"
                  color="#1A4B8A"
                >
                  to date
                </ForwardRef>
              </ForwardRef>,
            ],
            "justify": "space-between",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef>
                    Some Event
                  </ForwardRef>,
                  <ForwardRef>
                    2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A
                  </ForwardRef>,
                  <ForwardRef
                    to="/event/1/inventory"
                  >
                    <ForwardRef
                      color="#38A9DB"
                    >
                      See Inventory List
                    </ForwardRef>
                  </ForwardRef>,
                ],
                "flex": "1",
                "margin": "0 20px 0 0",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Some Event",
                  },
                  "ref": null,
                  "rendered": "Some Event",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-eLExRp",
                      "isStatic": false,
                      "rules": Array [
                        "
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  margin: 0;
  margin-bottom: 0.15rem;
",
                      ],
                    },
                    "displayName": "Styled(Styled(styled.h1))",
                    "foldedComponentIds": Array [
                      "sc-gZMcBi",
                      "sc-gqjmRU",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-eLExRp",
                    "target": "h1",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A",
                  },
                  "ref": null,
                  "rendered": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-cbkKFq",
                      "isStatic": false,
                      "rules": Array [
                        "
    color: ",
                        [Function],
                        ";
    font-size: ",
                        [Function],
                        ";
    font-weight: ",
                        [Function],
                        ";
  ",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  color: ",
                        "#1A4B8A",
                        ";
  margin: 0;
  margin-bottom: 0.15rem;
",
                      ],
                    },
                    "displayName": "Styled(Styled(styled.h4))",
                    "foldedComponentIds": Array [
                      "sc-fjdhpX",
                      "sc-jzJRlG",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-cbkKFq",
                    "target": "h4",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef
                      color="#38A9DB"
                    >
                      See Inventory List
                    </ForwardRef>,
                    "to": "/event/1/inventory",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "See Inventory List",
                      "color": "#38A9DB",
                    },
                    "ref": null,
                    "rendered": "See Inventory List",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-krvtoX",
                        "isStatic": false,
                        "rules": Array [
                          "
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: ",
                          [Function],
                          ";
",
                          "
  color: ",
                          "#38A9DB",
                          ";
  text-decoration: underline;
",
                        ],
                      },
                      "displayName": "Styled(styled.span)",
                      "foldedComponentIds": Array [
                        "sc-chPdSV",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-krvtoX",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-hXRMBi",
                      "isStatic": false,
                      "rules": Array [
                        "
  text-decoration: none;
  font-size: ",
                        [Function],
                        ";
  color: ",
                        "#323232",
                        ";
  font-weight: ",
                        [Function],
                        ";

  &:focus,
  &:hover {
    outline: 0;
    text-decoration: none;
    cursor: pointer;
    color: ",
                        "#38A9DB",
                        ";
    transition: all .1s ease-in-out;
    text-shadow: 0 0 .1px ",
                        "#38A9DB",
                        ";
  }

  &:active,
  &:visited {
    outline: 0
    text-decoration: none;
  }
",
                      ],
                    },
                    "displayName": "Styled(Link)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-hXRMBi",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kEYyzF",
                  "isStatic": false,
                  "rules": Array [
                    "
  flex: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                  ],
                },
                "defaultProps": Object {
                  "flex": 1,
                },
                "displayName": "FlexItem",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-kEYyzF",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  flex="0 0 auto"
                  margin="0 25px"
                >
                  <ForwardRef
                    size="16px"
                  >
                    Inventory
                  </ForwardRef>
                  <ForwardRef
                    color="#1A4B8A"
                    size="22px"
                  >
                    -- / --
                  </ForwardRef>
                  <ForwardRef
                    align="right"
                    color="#1A4B8A"
                  >
                    Unsold / Sold
                  </ForwardRef>
                </ForwardRef>,
                "justify": "flex-end",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <ForwardRef
                      size="16px"
                    >
                      Inventory
                    </ForwardRef>,
                    <ForwardRef
                      color="#1A4B8A"
                      size="22px"
                    >
                      -- / --
                    </ForwardRef>,
                    <ForwardRef
                      align="right"
                      color="#1A4B8A"
                    >
                      Unsold / Sold
                    </ForwardRef>,
                  ],
                  "flex": "0 0 auto",
                  "margin": "0 25px",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Inventory",
                      "size": "16px",
                    },
                    "ref": null,
                    "rendered": "Inventory",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fYiAbW",
                        "isStatic": false,
                        "rules": Array [
                          "
  margin: 0;
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: ",
                          [Function],
                          ";
",
                          "
  text-align: right;
",
                        ],
                      },
                      "displayName": "Styled(styled.p)",
                      "foldedComponentIds": Array [
                        "sc-kAzzGY",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-fYiAbW",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "-- / --",
                      "color": "#1A4B8A",
                      "size": "22px",
                    },
                    "ref": null,
                    "rendered": "-- / --",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fYiAbW",
                        "isStatic": false,
                        "rules": Array [
                          "
  margin: 0;
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: ",
                          [Function],
                          ";
",
                          "
  text-align: right;
",
                        ],
                      },
                      "displayName": "Styled(styled.p)",
                      "foldedComponentIds": Array [
                        "sc-kAzzGY",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-fYiAbW",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "align": "right",
                      "children": "Unsold / Sold",
                      "color": "#1A4B8A",
                    },
                    "ref": null,
                    "rendered": "Unsold / Sold",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fOKMvo",
                        "isStatic": false,
                        "rules": Array [
                          "
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: ",
                          [Function],
                          ";
",
                          "
  font-style: italic;
  display: block;
  text-align: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "Styled(styled.span)",
                      "foldedComponentIds": Array [
                        "sc-chPdSV",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-fOKMvo",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-kEYyzF",
                    "isStatic": false,
                    "rules": Array [
                      "
  flex: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  margin: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "defaultProps": Object {
                    "flex": 1,
                  },
                  "displayName": "FlexItem",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-kEYyzF",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-hMqMXs",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: ",
                    [Function],
                    ";
  flex: ",
                    [Function],
                    ";
  flex-direction: ",
                    [Function],
                    "
  flex-grow: ",
                    [Function],
                    ";
  flex-shrink: ",
                    [Function],
                    ";
  flex-basis: ",
                    [Function],
                    ";
  flex-wrap: ",
                    [Function],
                    ";
  order: ",
                    [Function],
                    ";
  justify-content: ",
                    [Function],
                    ";
  align-items: ",
                    [Function],
                    ";
  align-content: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Flex",
                "foldedComponentIds": Array [
                  "sc-eNQAEJ",
                ],
                "render": [Function],
                "styledComponentId": "sc-hMqMXs",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    size="16px"
                  >
                    Revenue
                  </ForwardRef>,
                  <ForwardRef
                    color="#1A4B8A"
                    size="22px"
                  >
                    $739,472
                  </ForwardRef>,
                  <ForwardRef
                    align="right"
                    color="#1A4B8A"
                  >
                    to date
                  </ForwardRef>,
                ],
                "flex": "0 0 auto",
                "margin": "0 25px",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Revenue",
                    "size": "16px",
                  },
                  "ref": null,
                  "rendered": "Revenue",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fYiAbW",
                      "isStatic": false,
                      "rules": Array [
                        "
  margin: 0;
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
  text-align: right;
",
                      ],
                    },
                    "displayName": "Styled(styled.p)",
                    "foldedComponentIds": Array [
                      "sc-kAzzGY",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-fYiAbW",
                    "target": "p",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "$739,472",
                    "color": "#1A4B8A",
                    "size": "22px",
                  },
                  "ref": null,
                  "rendered": "$739,472",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fYiAbW",
                      "isStatic": false,
                      "rules": Array [
                        "
  margin: 0;
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
  text-align: right;
",
                      ],
                    },
                    "displayName": "Styled(styled.p)",
                    "foldedComponentIds": Array [
                      "sc-kAzzGY",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-fYiAbW",
                    "target": "p",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "align": "right",
                    "children": "to date",
                    "color": "#1A4B8A",
                  },
                  "ref": null,
                  "rendered": "to date",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fOKMvo",
                      "isStatic": false,
                      "rules": Array [
                        "
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
  font-style: italic;
  display: block;
  text-align: ",
                        [Function],
                        ";
",
                      ],
                    },
                    "displayName": "Styled(styled.span)",
                    "foldedComponentIds": Array [
                      "sc-chPdSV",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-fOKMvo",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kEYyzF",
                  "isStatic": false,
                  "rules": Array [
                    "
  flex: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                  ],
                },
                "defaultProps": Object {
                  "flex": 1,
                },
                "displayName": "FlexItem",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-kEYyzF",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-hMqMXs",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Flex",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
            ],
            "render": [Function],
            "styledComponentId": "sc-hMqMXs",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-dxgOiQ",
          "isStatic": false,
          "rules": Array [
            "
  width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
",
            "
    margin: ",
            [Function],
            ";
    margin-top: ",
            [Function],
            ";
    margin-bottom: ",
            [Function],
            ";
    margin-left: ",
            [Function],
            ";
    margin-right: ",
            [Function],
            ";

    padding: ",
            [Function],
            ";
    padding-top: ",
            [Function],
            ";
    padding-bottom: ",
            [Function],
            ";
    padding-left: ",
            [Function],
            ";
    padding-right: ",
            [Function],
            ";

    border: ",
            [Function],
            ";
    border-top: ",
            [Function],
            ";
    border-bottom: ",
            [Function],
            ";
    border-left: ",
            [Function],
            ";
    border-right: ",
            [Function],
            ";
  ",
          ],
        },
        "displayName": "Styled(styled.div)",
        "foldedComponentIds": Array [
          "sc-kpOJdX",
        ],
        "render": [Function],
        "styledComponentId": "sc-dxgOiQ",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<EventHeader /> should render correctly when on the location route 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventHeader
    availableInventory={100}
    event={
      Object {
        "clientId": 1,
        "createdAt": 1529336865706,
        "id": 1,
        "integrationId": 1,
        "modifiedAt": 1529336865706,
        "name": "Some Event",
        "revenue": 739472,
        "seasonId": 1,
        "timestamp": 1529336865706,
        "venueId": 1,
      }
    }
    pathname="/event/1/inventory"
    totalInventory={1000}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          align="center"
        >
          <ForwardRef
            expand={true}
            small={true}
          />
          <Breadcrumbs
            crumbs={
              Array [
                Object {
                  "path": "/season",
                  "title": "Season Dashboard",
                },
                Object {
                  "path": "/event/1",
                  "title": "Some Event",
                },
                Object {
                  "path": "/event/1/inventory",
                  "title": "Inventory",
                },
              ]
            }
          />
        </ForwardRef>,
        <ForwardRef
          height="1.5rem"
        />,
        <ForwardRef
          align="flex-start"
          justify="space-between"
        >
          <ForwardRef
            flex="1"
            margin="0 20px 0 0"
          >
            <ForwardRef>
              Some Event
            </ForwardRef>
            <ForwardRef>
              2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            justify="flex-end"
          >
            <ForwardRef
              flex="0 0 auto"
              margin="0 25px"
            >
              <ForwardRef
                size="16px"
              >
                Inventory
              </ForwardRef>
              <ForwardRef
                color="#1A4B8A"
                size="22px"
              >
                -- / --
              </ForwardRef>
              <ForwardRef
                align="right"
                color="#1A4B8A"
              >
                Unsold / Sold
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            flex="0 0 auto"
            margin="0 25px"
          >
            <ForwardRef
              size="16px"
            >
              Revenue
            </ForwardRef>
            <ForwardRef
              color="#1A4B8A"
              size="22px"
            >
              $739,472
            </ForwardRef>
            <ForwardRef
              align="right"
              color="#1A4B8A"
            >
              to date
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "align": "center",
          "children": Array [
            <ForwardRef
              expand={true}
              small={true}
            />,
            <Breadcrumbs
              crumbs={
                Array [
                  Object {
                    "path": "/season",
                    "title": "Season Dashboard",
                  },
                  Object {
                    "path": "/event/1",
                    "title": "Some Event",
                  },
                  Object {
                    "path": "/event/1/inventory",
                    "title": "Inventory",
                  },
                ]
              }
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "expand": true,
              "onClick": undefined,
              "small": true,
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [
                [Function],
              ],
              "componentStyle": ComponentStyle {
                "componentId": "sc-lkqHmb",
                "isStatic": false,
                "rules": Array [
                  "
  display: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-size: ",
                  [Function],
                  ";
  font-weight: 200;
  width: ",
                  [Function],
                  ";
  margin: 0;
  margin-top: ",
                  [Function],
                  ";
  margin-bottom: ",
                  [Function],
                  ";
  margin-right: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
  padding-top: ",
                  [Function],
                  ";
  padding-bottom: ",
                  [Function],
                  ";
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                  [Function],
                  ";
  background-color: ",
                  [Function],
                  ";
  &:hover {
    cursor: ",
                  [Function],
                  ";
    color: ",
                  [Function],
                  ";
    background-color: ",
                  [Function],
                  ";
    border-color: ",
                  [Function],
                  ";
  }

  &::before {
    content: '",
                  [Function],
                  "';
  }
",
                  "
  margin: 0;
  margin-right: 1rem;
",
                ],
              },
              "displayName": "Styled(styled.button)",
              "foldedComponentIds": Array [
                "sc-dnqmqq",
              ],
              "render": [Function],
              "styledComponentId": "sc-lkqHmb",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "crumbs": Array [
                Object {
                  "path": "/season",
                  "title": "Season Dashboard",
                },
                Object {
                  "path": "/event/1",
                  "title": "Some Event",
                },
                Object {
                  "path": "/event/1/inventory",
                  "title": "Inventory",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-hMqMXs",
            "isStatic": false,
            "rules": Array [
              "
  display: ",
              [Function],
              ";
  flex: ",
              [Function],
              ";
  flex-direction: ",
              [Function],
              "
  flex-grow: ",
              [Function],
              ";
  flex-shrink: ",
              [Function],
              ";
  flex-basis: ",
              [Function],
              ";
  flex-wrap: ",
              [Function],
              ";
  order: ",
              [Function],
              ";
  justify-content: ",
              [Function],
              ";
  align-items: ",
              [Function],
              ";
  align-content: ",
              [Function],
              ";
  align-self: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
            ],
          },
          "displayName": "Flex",
          "foldedComponentIds": Array [
            "sc-eNQAEJ",
          ],
          "render": [Function],
          "styledComponentId": "sc-hMqMXs",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "height": "1.5rem",
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-ksYbfQ",
            "isStatic": false,
            "rules": Array [
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-ksYbfQ",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "align": "flex-start",
          "children": Array [
            <ForwardRef
              flex="1"
              margin="0 20px 0 0"
            >
              <ForwardRef>
                Some Event
              </ForwardRef>
              <ForwardRef>
                2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A
              </ForwardRef>
            </ForwardRef>,
            <ForwardRef
              justify="flex-end"
            >
              <ForwardRef
                flex="0 0 auto"
                margin="0 25px"
              >
                <ForwardRef
                  size="16px"
                >
                  Inventory
                </ForwardRef>
                <ForwardRef
                  color="#1A4B8A"
                  size="22px"
                >
                  -- / --
                </ForwardRef>
                <ForwardRef
                  align="right"
                  color="#1A4B8A"
                >
                  Unsold / Sold
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>,
            <ForwardRef
              flex="0 0 auto"
              margin="0 25px"
            >
              <ForwardRef
                size="16px"
              >
                Revenue
              </ForwardRef>
              <ForwardRef
                color="#1A4B8A"
                size="22px"
              >
                $739,472
              </ForwardRef>
              <ForwardRef
                align="right"
                color="#1A4B8A"
              >
                to date
              </ForwardRef>
            </ForwardRef>,
          ],
          "justify": "space-between",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  Some Event
                </ForwardRef>,
                <ForwardRef>
                  2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A
                </ForwardRef>,
                false,
              ],
              "flex": "1",
              "margin": "0 20px 0 0",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Some Event",
                },
                "ref": null,
                "rendered": "Some Event",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-eLExRp",
                    "isStatic": false,
                    "rules": Array [
                      "
  color: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  font-weight: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  margin: 0;
  margin-bottom: 0.15rem;
",
                    ],
                  },
                  "displayName": "Styled(Styled(styled.h1))",
                  "foldedComponentIds": Array [
                    "sc-gZMcBi",
                    "sc-gqjmRU",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-eLExRp",
                  "target": "h1",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A",
                },
                "ref": null,
                "rendered": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-cbkKFq",
                    "isStatic": false,
                    "rules": Array [
                      "
    color: ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      ";
    font-weight: ",
                      [Function],
                      ";
  ",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  color: ",
                      "#1A4B8A",
                      ";
  margin: 0;
  margin-bottom: 0.15rem;
",
                    ],
                  },
                  "displayName": "Styled(Styled(styled.h4))",
                  "foldedComponentIds": Array [
                    "sc-fjdhpX",
                    "sc-jzJRlG",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-cbkKFq",
                  "target": "h4",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              false,
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-kEYyzF",
                "isStatic": false,
                "rules": Array [
                  "
  flex: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                ],
              },
              "defaultProps": Object {
                "flex": 1,
              },
              "displayName": "FlexItem",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-kEYyzF",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                flex="0 0 auto"
                margin="0 25px"
              >
                <ForwardRef
                  size="16px"
                >
                  Inventory
                </ForwardRef>
                <ForwardRef
                  color="#1A4B8A"
                  size="22px"
                >
                  -- / --
                </ForwardRef>
                <ForwardRef
                  align="right"
                  color="#1A4B8A"
                >
                  Unsold / Sold
                </ForwardRef>
              </ForwardRef>,
              "justify": "flex-end",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    size="16px"
                  >
                    Inventory
                  </ForwardRef>,
                  <ForwardRef
                    color="#1A4B8A"
                    size="22px"
                  >
                    -- / --
                  </ForwardRef>,
                  <ForwardRef
                    align="right"
                    color="#1A4B8A"
                  >
                    Unsold / Sold
                  </ForwardRef>,
                ],
                "flex": "0 0 auto",
                "margin": "0 25px",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Inventory",
                    "size": "16px",
                  },
                  "ref": null,
                  "rendered": "Inventory",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fYiAbW",
                      "isStatic": false,
                      "rules": Array [
                        "
  margin: 0;
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
  text-align: right;
",
                      ],
                    },
                    "displayName": "Styled(styled.p)",
                    "foldedComponentIds": Array [
                      "sc-kAzzGY",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-fYiAbW",
                    "target": "p",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "-- / --",
                    "color": "#1A4B8A",
                    "size": "22px",
                  },
                  "ref": null,
                  "rendered": "-- / --",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fYiAbW",
                      "isStatic": false,
                      "rules": Array [
                        "
  margin: 0;
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
  text-align: right;
",
                      ],
                    },
                    "displayName": "Styled(styled.p)",
                    "foldedComponentIds": Array [
                      "sc-kAzzGY",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-fYiAbW",
                    "target": "p",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "align": "right",
                    "children": "Unsold / Sold",
                    "color": "#1A4B8A",
                  },
                  "ref": null,
                  "rendered": "Unsold / Sold",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fOKMvo",
                      "isStatic": false,
                      "rules": Array [
                        "
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
  font-style: italic;
  display: block;
  text-align: ",
                        [Function],
                        ";
",
                      ],
                    },
                    "displayName": "Styled(styled.span)",
                    "foldedComponentIds": Array [
                      "sc-chPdSV",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-fOKMvo",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kEYyzF",
                  "isStatic": false,
                  "rules": Array [
                    "
  flex: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                  ],
                },
                "defaultProps": Object {
                  "flex": 1,
                },
                "displayName": "FlexItem",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-kEYyzF",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-hMqMXs",
                "isStatic": false,
                "rules": Array [
                  "
  display: ",
                  [Function],
                  ";
  flex: ",
                  [Function],
                  ";
  flex-direction: ",
                  [Function],
                  "
  flex-grow: ",
                  [Function],
                  ";
  flex-shrink: ",
                  [Function],
                  ";
  flex-basis: ",
                  [Function],
                  ";
  flex-wrap: ",
                  [Function],
                  ";
  order: ",
                  [Function],
                  ";
  justify-content: ",
                  [Function],
                  ";
  align-items: ",
                  [Function],
                  ";
  align-content: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Flex",
              "foldedComponentIds": Array [
                "sc-eNQAEJ",
              ],
              "render": [Function],
              "styledComponentId": "sc-hMqMXs",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef
                  size="16px"
                >
                  Revenue
                </ForwardRef>,
                <ForwardRef
                  color="#1A4B8A"
                  size="22px"
                >
                  $739,472
                </ForwardRef>,
                <ForwardRef
                  align="right"
                  color="#1A4B8A"
                >
                  to date
                </ForwardRef>,
              ],
              "flex": "0 0 auto",
              "margin": "0 25px",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Revenue",
                  "size": "16px",
                },
                "ref": null,
                "rendered": "Revenue",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-fYiAbW",
                    "isStatic": false,
                    "rules": Array [
                      "
  margin: 0;
  color: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  font-weight: ",
                      [Function],
                      ";
",
                      "
  text-align: right;
",
                    ],
                  },
                  "displayName": "Styled(styled.p)",
                  "foldedComponentIds": Array [
                    "sc-kAzzGY",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-fYiAbW",
                  "target": "p",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "$739,472",
                  "color": "#1A4B8A",
                  "size": "22px",
                },
                "ref": null,
                "rendered": "$739,472",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-fYiAbW",
                    "isStatic": false,
                    "rules": Array [
                      "
  margin: 0;
  color: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  font-weight: ",
                      [Function],
                      ";
",
                      "
  text-align: right;
",
                    ],
                  },
                  "displayName": "Styled(styled.p)",
                  "foldedComponentIds": Array [
                    "sc-kAzzGY",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-fYiAbW",
                  "target": "p",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "align": "right",
                  "children": "to date",
                  "color": "#1A4B8A",
                },
                "ref": null,
                "rendered": "to date",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-fOKMvo",
                    "isStatic": false,
                    "rules": Array [
                      "
  color: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  font-weight: ",
                      [Function],
                      ";
",
                      "
  font-style: italic;
  display: block;
  text-align: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "Styled(styled.span)",
                  "foldedComponentIds": Array [
                    "sc-chPdSV",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-fOKMvo",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-kEYyzF",
                "isStatic": false,
                "rules": Array [
                  "
  flex: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                ],
              },
              "defaultProps": Object {
                "flex": 1,
              },
              "displayName": "FlexItem",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-kEYyzF",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-hMqMXs",
            "isStatic": false,
            "rules": Array [
              "
  display: ",
              [Function],
              ";
  flex: ",
              [Function],
              ";
  flex-direction: ",
              [Function],
              "
  flex-grow: ",
              [Function],
              ";
  flex-shrink: ",
              [Function],
              ";
  flex-basis: ",
              [Function],
              ";
  flex-wrap: ",
              [Function],
              ";
  order: ",
              [Function],
              ";
  justify-content: ",
              [Function],
              ";
  align-items: ",
              [Function],
              ";
  align-content: ",
              [Function],
              ";
  align-self: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
            ],
          },
          "displayName": "Flex",
          "foldedComponentIds": Array [
            "sc-eNQAEJ",
          ],
          "render": [Function],
          "styledComponentId": "sc-hMqMXs",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-dxgOiQ",
        "isStatic": false,
        "rules": Array [
          "
  width: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
",
          "
    margin: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
    margin-left: ",
          [Function],
          ";
    margin-right: ",
          [Function],
          ";

    padding: ",
          [Function],
          ";
    padding-top: ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    padding-left: ",
          [Function],
          ";
    padding-right: ",
          [Function],
          ";

    border: ",
          [Function],
          ";
    border-top: ",
          [Function],
          ";
    border-bottom: ",
          [Function],
          ";
    border-left: ",
          [Function],
          ";
    border-right: ",
          [Function],
          ";
  ",
        ],
      },
      "displayName": "Styled(styled.div)",
      "foldedComponentIds": Array [
        "sc-kpOJdX",
      ],
      "render": [Function],
      "styledComponentId": "sc-dxgOiQ",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            align="center"
          >
            <ForwardRef
              expand={true}
              small={true}
            />
            <Breadcrumbs
              crumbs={
                Array [
                  Object {
                    "path": "/season",
                    "title": "Season Dashboard",
                  },
                  Object {
                    "path": "/event/1",
                    "title": "Some Event",
                  },
                  Object {
                    "path": "/event/1/inventory",
                    "title": "Inventory",
                  },
                ]
              }
            />
          </ForwardRef>,
          <ForwardRef
            height="1.5rem"
          />,
          <ForwardRef
            align="flex-start"
            justify="space-between"
          >
            <ForwardRef
              flex="1"
              margin="0 20px 0 0"
            >
              <ForwardRef>
                Some Event
              </ForwardRef>
              <ForwardRef>
                2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              justify="flex-end"
            >
              <ForwardRef
                flex="0 0 auto"
                margin="0 25px"
              >
                <ForwardRef
                  size="16px"
                >
                  Inventory
                </ForwardRef>
                <ForwardRef
                  color="#1A4B8A"
                  size="22px"
                >
                  -- / --
                </ForwardRef>
                <ForwardRef
                  align="right"
                  color="#1A4B8A"
                >
                  Unsold / Sold
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              flex="0 0 auto"
              margin="0 25px"
            >
              <ForwardRef
                size="16px"
              >
                Revenue
              </ForwardRef>
              <ForwardRef
                color="#1A4B8A"
                size="22px"
              >
                $739,472
              </ForwardRef>
              <ForwardRef
                align="right"
                color="#1A4B8A"
              >
                to date
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "align": "center",
            "children": Array [
              <ForwardRef
                expand={true}
                small={true}
              />,
              <Breadcrumbs
                crumbs={
                  Array [
                    Object {
                      "path": "/season",
                      "title": "Season Dashboard",
                    },
                    Object {
                      "path": "/event/1",
                      "title": "Some Event",
                    },
                    Object {
                      "path": "/event/1/inventory",
                      "title": "Inventory",
                    },
                  ]
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "expand": true,
                "onClick": undefined,
                "small": true,
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-lkqHmb",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-size: ",
                    [Function],
                    ";
  font-weight: 200;
  width: ",
                    [Function],
                    ";
  margin: 0;
  margin-top: ",
                    [Function],
                    ";
  margin-bottom: ",
                    [Function],
                    ";
  margin-right: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
  padding-top: ",
                    [Function],
                    ";
  padding-bottom: ",
                    [Function],
                    ";
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                    [Function],
                    ";
  background-color: ",
                    [Function],
                    ";
  &:hover {
    cursor: ",
                    [Function],
                    ";
    color: ",
                    [Function],
                    ";
    background-color: ",
                    [Function],
                    ";
    border-color: ",
                    [Function],
                    ";
  }

  &::before {
    content: '",
                    [Function],
                    "';
  }
",
                    "
  margin: 0;
  margin-right: 1rem;
",
                  ],
                },
                "displayName": "Styled(styled.button)",
                "foldedComponentIds": Array [
                  "sc-dnqmqq",
                ],
                "render": [Function],
                "styledComponentId": "sc-lkqHmb",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "crumbs": Array [
                  Object {
                    "path": "/season",
                    "title": "Season Dashboard",
                  },
                  Object {
                    "path": "/event/1",
                    "title": "Some Event",
                  },
                  Object {
                    "path": "/event/1/inventory",
                    "title": "Inventory",
                  },
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-hMqMXs",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Flex",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
            ],
            "render": [Function],
            "styledComponentId": "sc-hMqMXs",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "height": "1.5rem",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ksYbfQ",
              "isStatic": false,
              "rules": Array [
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ksYbfQ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "align": "flex-start",
            "children": Array [
              <ForwardRef
                flex="1"
                margin="0 20px 0 0"
              >
                <ForwardRef>
                  Some Event
                </ForwardRef>
                <ForwardRef>
                  2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A
                </ForwardRef>
              </ForwardRef>,
              <ForwardRef
                justify="flex-end"
              >
                <ForwardRef
                  flex="0 0 auto"
                  margin="0 25px"
                >
                  <ForwardRef
                    size="16px"
                  >
                    Inventory
                  </ForwardRef>
                  <ForwardRef
                    color="#1A4B8A"
                    size="22px"
                  >
                    -- / --
                  </ForwardRef>
                  <ForwardRef
                    align="right"
                    color="#1A4B8A"
                  >
                    Unsold / Sold
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef>,
              <ForwardRef
                flex="0 0 auto"
                margin="0 25px"
              >
                <ForwardRef
                  size="16px"
                >
                  Revenue
                </ForwardRef>
                <ForwardRef
                  color="#1A4B8A"
                  size="22px"
                >
                  $739,472
                </ForwardRef>
                <ForwardRef
                  align="right"
                  color="#1A4B8A"
                >
                  to date
                </ForwardRef>
              </ForwardRef>,
            ],
            "justify": "space-between",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef>
                    Some Event
                  </ForwardRef>,
                  <ForwardRef>
                    2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A
                  </ForwardRef>,
                  false,
                ],
                "flex": "1",
                "margin": "0 20px 0 0",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Some Event",
                  },
                  "ref": null,
                  "rendered": "Some Event",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-eLExRp",
                      "isStatic": false,
                      "rules": Array [
                        "
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  margin: 0;
  margin-bottom: 0.15rem;
",
                      ],
                    },
                    "displayName": "Styled(Styled(styled.h1))",
                    "foldedComponentIds": Array [
                      "sc-gZMcBi",
                      "sc-gqjmRU",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-eLExRp",
                    "target": "h1",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A",
                  },
                  "ref": null,
                  "rendered": "2018-06-18T15:47:45.706Z @dddd, MMMM Do, YYYY @ h:mm A",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-cbkKFq",
                      "isStatic": false,
                      "rules": Array [
                        "
    color: ",
                        [Function],
                        ";
    font-size: ",
                        [Function],
                        ";
    font-weight: ",
                        [Function],
                        ";
  ",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  color: ",
                        "#1A4B8A",
                        ";
  margin: 0;
  margin-bottom: 0.15rem;
",
                      ],
                    },
                    "displayName": "Styled(Styled(styled.h4))",
                    "foldedComponentIds": Array [
                      "sc-fjdhpX",
                      "sc-jzJRlG",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-cbkKFq",
                    "target": "h4",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                false,
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kEYyzF",
                  "isStatic": false,
                  "rules": Array [
                    "
  flex: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                  ],
                },
                "defaultProps": Object {
                  "flex": 1,
                },
                "displayName": "FlexItem",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-kEYyzF",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  flex="0 0 auto"
                  margin="0 25px"
                >
                  <ForwardRef
                    size="16px"
                  >
                    Inventory
                  </ForwardRef>
                  <ForwardRef
                    color="#1A4B8A"
                    size="22px"
                  >
                    -- / --
                  </ForwardRef>
                  <ForwardRef
                    align="right"
                    color="#1A4B8A"
                  >
                    Unsold / Sold
                  </ForwardRef>
                </ForwardRef>,
                "justify": "flex-end",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <ForwardRef
                      size="16px"
                    >
                      Inventory
                    </ForwardRef>,
                    <ForwardRef
                      color="#1A4B8A"
                      size="22px"
                    >
                      -- / --
                    </ForwardRef>,
                    <ForwardRef
                      align="right"
                      color="#1A4B8A"
                    >
                      Unsold / Sold
                    </ForwardRef>,
                  ],
                  "flex": "0 0 auto",
                  "margin": "0 25px",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Inventory",
                      "size": "16px",
                    },
                    "ref": null,
                    "rendered": "Inventory",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fYiAbW",
                        "isStatic": false,
                        "rules": Array [
                          "
  margin: 0;
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: ",
                          [Function],
                          ";
",
                          "
  text-align: right;
",
                        ],
                      },
                      "displayName": "Styled(styled.p)",
                      "foldedComponentIds": Array [
                        "sc-kAzzGY",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-fYiAbW",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "-- / --",
                      "color": "#1A4B8A",
                      "size": "22px",
                    },
                    "ref": null,
                    "rendered": "-- / --",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fYiAbW",
                        "isStatic": false,
                        "rules": Array [
                          "
  margin: 0;
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: ",
                          [Function],
                          ";
",
                          "
  text-align: right;
",
                        ],
                      },
                      "displayName": "Styled(styled.p)",
                      "foldedComponentIds": Array [
                        "sc-kAzzGY",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-fYiAbW",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "align": "right",
                      "children": "Unsold / Sold",
                      "color": "#1A4B8A",
                    },
                    "ref": null,
                    "rendered": "Unsold / Sold",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fOKMvo",
                        "isStatic": false,
                        "rules": Array [
                          "
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  font-weight: ",
                          [Function],
                          ";
",
                          "
  font-style: italic;
  display: block;
  text-align: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "Styled(styled.span)",
                      "foldedComponentIds": Array [
                        "sc-chPdSV",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-fOKMvo",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-kEYyzF",
                    "isStatic": false,
                    "rules": Array [
                      "
  flex: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  margin: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "defaultProps": Object {
                    "flex": 1,
                  },
                  "displayName": "FlexItem",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-kEYyzF",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-hMqMXs",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: ",
                    [Function],
                    ";
  flex: ",
                    [Function],
                    ";
  flex-direction: ",
                    [Function],
                    "
  flex-grow: ",
                    [Function],
                    ";
  flex-shrink: ",
                    [Function],
                    ";
  flex-basis: ",
                    [Function],
                    ";
  flex-wrap: ",
                    [Function],
                    ";
  order: ",
                    [Function],
                    ";
  justify-content: ",
                    [Function],
                    ";
  align-items: ",
                    [Function],
                    ";
  align-content: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Flex",
                "foldedComponentIds": Array [
                  "sc-eNQAEJ",
                ],
                "render": [Function],
                "styledComponentId": "sc-hMqMXs",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    size="16px"
                  >
                    Revenue
                  </ForwardRef>,
                  <ForwardRef
                    color="#1A4B8A"
                    size="22px"
                  >
                    $739,472
                  </ForwardRef>,
                  <ForwardRef
                    align="right"
                    color="#1A4B8A"
                  >
                    to date
                  </ForwardRef>,
                ],
                "flex": "0 0 auto",
                "margin": "0 25px",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Revenue",
                    "size": "16px",
                  },
                  "ref": null,
                  "rendered": "Revenue",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fYiAbW",
                      "isStatic": false,
                      "rules": Array [
                        "
  margin: 0;
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
  text-align: right;
",
                      ],
                    },
                    "displayName": "Styled(styled.p)",
                    "foldedComponentIds": Array [
                      "sc-kAzzGY",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-fYiAbW",
                    "target": "p",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "$739,472",
                    "color": "#1A4B8A",
                    "size": "22px",
                  },
                  "ref": null,
                  "rendered": "$739,472",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fYiAbW",
                      "isStatic": false,
                      "rules": Array [
                        "
  margin: 0;
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
  text-align: right;
",
                      ],
                    },
                    "displayName": "Styled(styled.p)",
                    "foldedComponentIds": Array [
                      "sc-kAzzGY",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-fYiAbW",
                    "target": "p",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "align": "right",
                    "children": "to date",
                    "color": "#1A4B8A",
                  },
                  "ref": null,
                  "rendered": "to date",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fOKMvo",
                      "isStatic": false,
                      "rules": Array [
                        "
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                        "
  font-style: italic;
  display: block;
  text-align: ",
                        [Function],
                        ";
",
                      ],
                    },
                    "displayName": "Styled(styled.span)",
                    "foldedComponentIds": Array [
                      "sc-chPdSV",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-fOKMvo",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kEYyzF",
                  "isStatic": false,
                  "rules": Array [
                    "
  flex: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                  ],
                },
                "defaultProps": Object {
                  "flex": 1,
                },
                "displayName": "FlexItem",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-kEYyzF",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-hMqMXs",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Flex",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
            ],
            "render": [Function],
            "styledComponentId": "sc-hMqMXs",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-dxgOiQ",
          "isStatic": false,
          "rules": Array [
            "
  width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
",
            "
    margin: ",
            [Function],
            ";
    margin-top: ",
            [Function],
            ";
    margin-bottom: ",
            [Function],
            ";
    margin-left: ",
            [Function],
            ";
    margin-right: ",
            [Function],
            ";

    padding: ",
            [Function],
            ";
    padding-top: ",
            [Function],
            ";
    padding-bottom: ",
            [Function],
            ";
    padding-left: ",
            [Function],
            ";
    padding-right: ",
            [Function],
            ";

    border: ",
            [Function],
            ";
    border-top: ",
            [Function],
            ";
    border-bottom: ",
            [Function],
            ";
    border-left: ",
            [Function],
            ";
    border-right: ",
            [Function],
            ";
  ",
          ],
        },
        "displayName": "Styled(styled.div)",
        "foldedComponentIds": Array [
          "sc-kpOJdX",
        ],
        "render": [Function],
        "styledComponentId": "sc-dxgOiQ",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
