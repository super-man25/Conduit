// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EventListPresenter /> when filtered 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventListPresenter
    activeId={1}
    events={
      Array [
        Object {
          "clientId": 1,
          "createdAt": 1529336865706,
          "id": 1,
          "integrationId": 1,
          "modifiedAt": 1529336865706,
          "name": "Some Event",
          "seasonId": 1,
          "timestamp": 1529336865706,
          "venueId": 1,
        },
        Object {
          "clientId": 1,
          "createdAt": 1529336865706,
          "id": 1,
          "integrationId": 1,
          "modifiedAt": 1529336865706,
          "name": "Some Event",
          "seasonId": 1,
          "timestamp": 1529336865706,
          "venueId": 1,
        },
        Object {
          "clientId": 1,
          "createdAt": 1529336865706,
          "id": 1,
          "integrationId": 1,
          "modifiedAt": 1529336865706,
          "name": "Some Event",
          "seasonId": 1,
          "timestamp": 1529336865706,
          "venueId": 1,
        },
      ]
    }
    filter="Query"
    filterOptions={
      Array [
        Object {
          "id": 1,
          "label": "one",
        },
      ]
    }
    loading={false}
    onClick={[Function]}
    onSearchInputChange={[Function]}
    title="title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          <ForwardRef
            padding="24px 40px"
          >
            <ForwardRef>
              title
            </ForwardRef>
            <ForwardRef
              height="4px"
            />
            <ForwardRef
              data-test-id="event-list-search"
              onChange={[Function]}
              placeholder="Search"
              type="text"
              value="Query"
            />
          </ForwardRef>
        </ForwardRef>,
        false,
        <ForwardRef>
          <ScrollableList
            data={
              Array [
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
              ]
            }
            scrollIndex={0}
          >
            [Function]
          </ScrollableList>
        </ForwardRef>,
      ],
      "direction": "column",
      "height": "100%",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            padding="24px 40px"
          >
            <ForwardRef>
              title
            </ForwardRef>
            <ForwardRef
              height="4px"
            />
            <ForwardRef
              data-test-id="event-list-search"
              onChange={[Function]}
              placeholder="Search"
              type="text"
              value="Query"
            />
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                title
              </ForwardRef>,
              <ForwardRef
                height="4px"
              />,
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value="Query"
              />,
            ],
            "padding": "24px 40px",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "title",
              },
              "ref": null,
              "rendered": "title",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eilVRo",
                  "isStatic": false,
                  "rules": Array [
                    "
    color: ",
                    [Function],
                    ";
    font-size: ",
                    [Function],
                    ";
    font-weight: ",
                    [Function],
                    ";
  ",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                    "
  margin: 0;
  padding: 0;
",
                  ],
                },
                "displayName": "Styled(Styled(styled.h4))",
                "foldedComponentIds": Array [
                  "sc-fjdhpX",
                  "sc-jzJRlG",
                ],
                "render": [Function],
                "styledComponentId": "sc-eilVRo",
                "target": "h4",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "height": "4px",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ksYbfQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ksYbfQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "data-test-id": "event-list-search",
                "onChange": [Function],
                "placeholder": "Search",
                "type": "text",
                "value": "Query",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jWBwVP",
                  "isStatic": false,
                  "rules": Array [
                    "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                    [Function],
                    ";
  background-image: ",
                    [Function],
                    ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                    [Function],
                    ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                    [Function],
                    ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                    [Function],
                    ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                    "#999999",
                    ";
  }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-jWBwVP",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ksYbfQ",
              "isStatic": false,
              "rules": Array [
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ksYbfQ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-eerKOB",
            "isStatic": true,
            "rules": Array [
              "
  border-bottom: 1px solid ",
              "#D1D1D1",
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-eerKOB",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ScrollableList
            data={
              Array [
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
              ]
            }
            scrollIndex={0}
          >
            [Function]
          </ScrollableList>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": [Function],
            "data": Array [
              Object {
                "clientId": 1,
                "createdAt": 1529336865706,
                "id": 1,
                "integrationId": 1,
                "modifiedAt": 1529336865706,
                "name": "Some Event",
                "seasonId": 1,
                "timestamp": 1529336865706,
                "venueId": 1,
              },
              Object {
                "clientId": 1,
                "createdAt": 1529336865706,
                "id": 1,
                "integrationId": 1,
                "modifiedAt": 1529336865706,
                "name": "Some Event",
                "seasonId": 1,
                "timestamp": 1529336865706,
                "venueId": 1,
              },
              Object {
                "clientId": 1,
                "createdAt": 1529336865706,
                "id": 1,
                "integrationId": 1,
                "modifiedAt": 1529336865706,
                "name": "Some Event",
                "seasonId": 1,
                "timestamp": 1529336865706,
                "venueId": 1,
              },
            ],
            "scrollIndex": 0,
          },
          "ref": null,
          "rendered": [Function],
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-gHboQg",
            "isStatic": true,
            "rules": Array [
              "
  overflow-y: scroll;
  flex: 1;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-gHboQg",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-hMqMXs",
        "isStatic": false,
        "rules": Array [
          "
  display: ",
          [Function],
          ";
  flex: ",
          [Function],
          ";
  flex-direction: ",
          [Function],
          "
  flex-grow: ",
          [Function],
          ";
  flex-shrink: ",
          [Function],
          ";
  flex-basis: ",
          [Function],
          ";
  flex-wrap: ",
          [Function],
          ";
  order: ",
          [Function],
          ";
  justify-content: ",
          [Function],
          ";
  align-items: ",
          [Function],
          ";
  align-content: ",
          [Function],
          ";
  align-self: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  width: ",
          [Function],
          ";
",
          "
    margin: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
    margin-left: ",
          [Function],
          ";
    margin-right: ",
          [Function],
          ";

    padding: ",
          [Function],
          ";
    padding-top: ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    padding-left: ",
          [Function],
          ";
    padding-right: ",
          [Function],
          ";

    border: ",
          [Function],
          ";
    border-top: ",
          [Function],
          ";
    border-bottom: ",
          [Function],
          ";
    border-left: ",
          [Function],
          ";
    border-right: ",
          [Function],
          ";
  ",
        ],
      },
      "displayName": "Flex",
      "foldedComponentIds": Array [
        "sc-eNQAEJ",
      ],
      "render": [Function],
      "styledComponentId": "sc-hMqMXs",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            <ForwardRef
              padding="24px 40px"
            >
              <ForwardRef>
                title
              </ForwardRef>
              <ForwardRef
                height="4px"
              />
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value="Query"
              />
            </ForwardRef>
          </ForwardRef>,
          false,
          <ForwardRef>
            <ScrollableList
              data={
                Array [
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                ]
              }
              scrollIndex={0}
            >
              [Function]
            </ScrollableList>
          </ForwardRef>,
        ],
        "direction": "column",
        "height": "100%",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              padding="24px 40px"
            >
              <ForwardRef>
                title
              </ForwardRef>
              <ForwardRef
                height="4px"
              />
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value="Query"
              />
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  title
                </ForwardRef>,
                <ForwardRef
                  height="4px"
                />,
                <ForwardRef
                  data-test-id="event-list-search"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                  value="Query"
                />,
              ],
              "padding": "24px 40px",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "title",
                },
                "ref": null,
                "rendered": "title",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-eilVRo",
                    "isStatic": false,
                    "rules": Array [
                      "
    color: ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      ";
    font-weight: ",
                      [Function],
                      ";
  ",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  margin: 0;
  padding: 0;
",
                    ],
                  },
                  "displayName": "Styled(Styled(styled.h4))",
                  "foldedComponentIds": Array [
                    "sc-fjdhpX",
                    "sc-jzJRlG",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-eilVRo",
                  "target": "h4",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "height": "4px",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-ksYbfQ",
                    "isStatic": false,
                    "rules": Array [
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-ksYbfQ",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "data-test-id": "event-list-search",
                  "onChange": [Function],
                  "placeholder": "Search",
                  "type": "text",
                  "value": "Query",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jWBwVP",
                    "isStatic": false,
                    "rules": Array [
                      "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                      [Function],
                      ";
  background-image: ",
                      [Function],
                      ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                      [Function],
                      ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                      [Function],
                      ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                      [Function],
                      ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                      "#999999",
                      ";
  }
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jWBwVP",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ksYbfQ",
                "isStatic": false,
                "rules": Array [
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-ksYbfQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-eerKOB",
              "isStatic": true,
              "rules": Array [
                "
  border-bottom: 1px solid ",
                "#D1D1D1",
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-eerKOB",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ScrollableList
              data={
                Array [
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                ]
              }
              scrollIndex={0}
            >
              [Function]
            </ScrollableList>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": [Function],
              "data": Array [
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
              ],
              "scrollIndex": 0,
            },
            "ref": null,
            "rendered": [Function],
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gHboQg",
              "isStatic": true,
              "rules": Array [
                "
  overflow-y: scroll;
  flex: 1;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gHboQg",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-hMqMXs",
          "isStatic": false,
          "rules": Array [
            "
  display: ",
            [Function],
            ";
  flex: ",
            [Function],
            ";
  flex-direction: ",
            [Function],
            "
  flex-grow: ",
            [Function],
            ";
  flex-shrink: ",
            [Function],
            ";
  flex-basis: ",
            [Function],
            ";
  flex-wrap: ",
            [Function],
            ";
  order: ",
            [Function],
            ";
  justify-content: ",
            [Function],
            ";
  align-items: ",
            [Function],
            ";
  align-content: ",
            [Function],
            ";
  align-self: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
",
            "
    margin: ",
            [Function],
            ";
    margin-top: ",
            [Function],
            ";
    margin-bottom: ",
            [Function],
            ";
    margin-left: ",
            [Function],
            ";
    margin-right: ",
            [Function],
            ";

    padding: ",
            [Function],
            ";
    padding-top: ",
            [Function],
            ";
    padding-bottom: ",
            [Function],
            ";
    padding-left: ",
            [Function],
            ";
    padding-right: ",
            [Function],
            ";

    border: ",
            [Function],
            ";
    border-top: ",
            [Function],
            ";
    border-bottom: ",
            [Function],
            ";
    border-left: ",
            [Function],
            ";
    border-right: ",
            [Function],
            ";
  ",
          ],
        },
        "displayName": "Flex",
        "foldedComponentIds": Array [
          "sc-eNQAEJ",
        ],
        "render": [Function],
        "styledComponentId": "sc-hMqMXs",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<EventListPresenter /> when loading 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventListPresenter
    activeId={1}
    events={
      Array [
        Object {
          "clientId": 1,
          "createdAt": 1529336865706,
          "id": 1,
          "integrationId": 1,
          "modifiedAt": 1529336865706,
          "name": "Some Event",
          "seasonId": 1,
          "timestamp": 1529336865706,
          "venueId": 1,
        },
        Object {
          "clientId": 1,
          "createdAt": 1529336865706,
          "id": 1,
          "integrationId": 1,
          "modifiedAt": 1529336865706,
          "name": "Some Event",
          "seasonId": 1,
          "timestamp": 1529336865706,
          "venueId": 1,
        },
        Object {
          "clientId": 1,
          "createdAt": 1529336865706,
          "id": 1,
          "integrationId": 1,
          "modifiedAt": 1529336865706,
          "name": "Some Event",
          "seasonId": 1,
          "timestamp": 1529336865706,
          "venueId": 1,
        },
      ]
    }
    filter=""
    filterOptions={
      Array [
        Object {
          "id": 1,
          "label": "one",
        },
      ]
    }
    loading={true}
    onClick={[Function]}
    onSearchInputChange={[Function]}
    title="title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          <ForwardRef
            padding="24px 40px"
          >
            <ForwardRef>
              title
            </ForwardRef>
            <ForwardRef
              height="4px"
            />
            <ForwardRef
              data-test-id="event-list-search"
              onChange={[Function]}
              placeholder="Search"
              type="text"
              value=""
            />
          </ForwardRef>
        </ForwardRef>,
        false,
        <ForwardRef>
          <ScrollableList
            data={
              Array [
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
              ]
            }
            scrollIndex={0}
          >
            [Function]
          </ScrollableList>
        </ForwardRef>,
      ],
      "direction": "column",
      "height": "100%",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            padding="24px 40px"
          >
            <ForwardRef>
              title
            </ForwardRef>
            <ForwardRef
              height="4px"
            />
            <ForwardRef
              data-test-id="event-list-search"
              onChange={[Function]}
              placeholder="Search"
              type="text"
              value=""
            />
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                title
              </ForwardRef>,
              <ForwardRef
                height="4px"
              />,
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value=""
              />,
            ],
            "padding": "24px 40px",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "title",
              },
              "ref": null,
              "rendered": "title",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eilVRo",
                  "isStatic": false,
                  "rules": Array [
                    "
    color: ",
                    [Function],
                    ";
    font-size: ",
                    [Function],
                    ";
    font-weight: ",
                    [Function],
                    ";
  ",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                    "
  margin: 0;
  padding: 0;
",
                  ],
                },
                "displayName": "Styled(Styled(styled.h4))",
                "foldedComponentIds": Array [
                  "sc-fjdhpX",
                  "sc-jzJRlG",
                ],
                "render": [Function],
                "styledComponentId": "sc-eilVRo",
                "target": "h4",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "height": "4px",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ksYbfQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ksYbfQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "data-test-id": "event-list-search",
                "onChange": [Function],
                "placeholder": "Search",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jWBwVP",
                  "isStatic": false,
                  "rules": Array [
                    "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                    [Function],
                    ";
  background-image: ",
                    [Function],
                    ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                    [Function],
                    ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                    [Function],
                    ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                    [Function],
                    ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                    "#999999",
                    ";
  }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-jWBwVP",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ksYbfQ",
              "isStatic": false,
              "rules": Array [
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ksYbfQ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-eerKOB",
            "isStatic": true,
            "rules": Array [
              "
  border-bottom: 1px solid ",
              "#D1D1D1",
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-eerKOB",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ScrollableList
            data={
              Array [
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
              ]
            }
            scrollIndex={0}
          >
            [Function]
          </ScrollableList>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": [Function],
            "data": Array [
              Object {
                "clientId": 1,
                "createdAt": 1529336865706,
                "id": 1,
                "integrationId": 1,
                "modifiedAt": 1529336865706,
                "name": "Some Event",
                "seasonId": 1,
                "timestamp": 1529336865706,
                "venueId": 1,
              },
              Object {
                "clientId": 1,
                "createdAt": 1529336865706,
                "id": 1,
                "integrationId": 1,
                "modifiedAt": 1529336865706,
                "name": "Some Event",
                "seasonId": 1,
                "timestamp": 1529336865706,
                "venueId": 1,
              },
              Object {
                "clientId": 1,
                "createdAt": 1529336865706,
                "id": 1,
                "integrationId": 1,
                "modifiedAt": 1529336865706,
                "name": "Some Event",
                "seasonId": 1,
                "timestamp": 1529336865706,
                "venueId": 1,
              },
            ],
            "scrollIndex": 0,
          },
          "ref": null,
          "rendered": [Function],
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-gHboQg",
            "isStatic": true,
            "rules": Array [
              "
  overflow-y: scroll;
  flex: 1;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-gHboQg",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-hMqMXs",
        "isStatic": false,
        "rules": Array [
          "
  display: ",
          [Function],
          ";
  flex: ",
          [Function],
          ";
  flex-direction: ",
          [Function],
          "
  flex-grow: ",
          [Function],
          ";
  flex-shrink: ",
          [Function],
          ";
  flex-basis: ",
          [Function],
          ";
  flex-wrap: ",
          [Function],
          ";
  order: ",
          [Function],
          ";
  justify-content: ",
          [Function],
          ";
  align-items: ",
          [Function],
          ";
  align-content: ",
          [Function],
          ";
  align-self: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  width: ",
          [Function],
          ";
",
          "
    margin: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
    margin-left: ",
          [Function],
          ";
    margin-right: ",
          [Function],
          ";

    padding: ",
          [Function],
          ";
    padding-top: ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    padding-left: ",
          [Function],
          ";
    padding-right: ",
          [Function],
          ";

    border: ",
          [Function],
          ";
    border-top: ",
          [Function],
          ";
    border-bottom: ",
          [Function],
          ";
    border-left: ",
          [Function],
          ";
    border-right: ",
          [Function],
          ";
  ",
        ],
      },
      "displayName": "Flex",
      "foldedComponentIds": Array [
        "sc-eNQAEJ",
      ],
      "render": [Function],
      "styledComponentId": "sc-hMqMXs",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            <ForwardRef
              padding="24px 40px"
            >
              <ForwardRef>
                title
              </ForwardRef>
              <ForwardRef
                height="4px"
              />
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value=""
              />
            </ForwardRef>
          </ForwardRef>,
          false,
          <ForwardRef>
            <ScrollableList
              data={
                Array [
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                ]
              }
              scrollIndex={0}
            >
              [Function]
            </ScrollableList>
          </ForwardRef>,
        ],
        "direction": "column",
        "height": "100%",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              padding="24px 40px"
            >
              <ForwardRef>
                title
              </ForwardRef>
              <ForwardRef
                height="4px"
              />
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value=""
              />
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  title
                </ForwardRef>,
                <ForwardRef
                  height="4px"
                />,
                <ForwardRef
                  data-test-id="event-list-search"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                  value=""
                />,
              ],
              "padding": "24px 40px",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "title",
                },
                "ref": null,
                "rendered": "title",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-eilVRo",
                    "isStatic": false,
                    "rules": Array [
                      "
    color: ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      ";
    font-weight: ",
                      [Function],
                      ";
  ",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  margin: 0;
  padding: 0;
",
                    ],
                  },
                  "displayName": "Styled(Styled(styled.h4))",
                  "foldedComponentIds": Array [
                    "sc-fjdhpX",
                    "sc-jzJRlG",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-eilVRo",
                  "target": "h4",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "height": "4px",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-ksYbfQ",
                    "isStatic": false,
                    "rules": Array [
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-ksYbfQ",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "data-test-id": "event-list-search",
                  "onChange": [Function],
                  "placeholder": "Search",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jWBwVP",
                    "isStatic": false,
                    "rules": Array [
                      "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                      [Function],
                      ";
  background-image: ",
                      [Function],
                      ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                      [Function],
                      ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                      [Function],
                      ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                      [Function],
                      ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                      "#999999",
                      ";
  }
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jWBwVP",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ksYbfQ",
                "isStatic": false,
                "rules": Array [
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-ksYbfQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-eerKOB",
              "isStatic": true,
              "rules": Array [
                "
  border-bottom: 1px solid ",
                "#D1D1D1",
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-eerKOB",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ScrollableList
              data={
                Array [
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                ]
              }
              scrollIndex={0}
            >
              [Function]
            </ScrollableList>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": [Function],
              "data": Array [
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
              ],
              "scrollIndex": 0,
            },
            "ref": null,
            "rendered": [Function],
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gHboQg",
              "isStatic": true,
              "rules": Array [
                "
  overflow-y: scroll;
  flex: 1;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gHboQg",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-hMqMXs",
          "isStatic": false,
          "rules": Array [
            "
  display: ",
            [Function],
            ";
  flex: ",
            [Function],
            ";
  flex-direction: ",
            [Function],
            "
  flex-grow: ",
            [Function],
            ";
  flex-shrink: ",
            [Function],
            ";
  flex-basis: ",
            [Function],
            ";
  flex-wrap: ",
            [Function],
            ";
  order: ",
            [Function],
            ";
  justify-content: ",
            [Function],
            ";
  align-items: ",
            [Function],
            ";
  align-content: ",
            [Function],
            ";
  align-self: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
",
            "
    margin: ",
            [Function],
            ";
    margin-top: ",
            [Function],
            ";
    margin-bottom: ",
            [Function],
            ";
    margin-left: ",
            [Function],
            ";
    margin-right: ",
            [Function],
            ";

    padding: ",
            [Function],
            ";
    padding-top: ",
            [Function],
            ";
    padding-bottom: ",
            [Function],
            ";
    padding-left: ",
            [Function],
            ";
    padding-right: ",
            [Function],
            ";

    border: ",
            [Function],
            ";
    border-top: ",
            [Function],
            ";
    border-bottom: ",
            [Function],
            ";
    border-left: ",
            [Function],
            ";
    border-right: ",
            [Function],
            ";
  ",
          ],
        },
        "displayName": "Flex",
        "foldedComponentIds": Array [
          "sc-eNQAEJ",
        ],
        "render": [Function],
        "styledComponentId": "sc-hMqMXs",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<EventListPresenter /> when passed no events 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventListPresenter
    activeId={1}
    events={Array []}
    filter=""
    filterOptions={
      Array [
        Object {
          "id": 1,
          "label": "one",
        },
      ]
    }
    loading={false}
    onClick={[Function]}
    onSearchInputChange={[Function]}
    title="title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          <ForwardRef
            padding="24px 40px"
          >
            <ForwardRef>
              title
            </ForwardRef>
            <ForwardRef
              height="4px"
            />
            <ForwardRef
              data-test-id="event-list-search"
              onChange={[Function]}
              placeholder="Search"
              type="text"
              value=""
            />
          </ForwardRef>
        </ForwardRef>,
        <ForwardRef>
          <ForwardRef
            data-test-id="no-events-message"
          >
            No events matching query
          </ForwardRef>
        </ForwardRef>,
        false,
      ],
      "direction": "column",
      "height": "100%",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            padding="24px 40px"
          >
            <ForwardRef>
              title
            </ForwardRef>
            <ForwardRef
              height="4px"
            />
            <ForwardRef
              data-test-id="event-list-search"
              onChange={[Function]}
              placeholder="Search"
              type="text"
              value=""
            />
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                title
              </ForwardRef>,
              <ForwardRef
                height="4px"
              />,
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value=""
              />,
            ],
            "padding": "24px 40px",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "title",
              },
              "ref": null,
              "rendered": "title",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eilVRo",
                  "isStatic": false,
                  "rules": Array [
                    "
    color: ",
                    [Function],
                    ";
    font-size: ",
                    [Function],
                    ";
    font-weight: ",
                    [Function],
                    ";
  ",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                    "
  margin: 0;
  padding: 0;
",
                  ],
                },
                "displayName": "Styled(Styled(styled.h4))",
                "foldedComponentIds": Array [
                  "sc-fjdhpX",
                  "sc-jzJRlG",
                ],
                "render": [Function],
                "styledComponentId": "sc-eilVRo",
                "target": "h4",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "height": "4px",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ksYbfQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ksYbfQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "data-test-id": "event-list-search",
                "onChange": [Function],
                "placeholder": "Search",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jWBwVP",
                  "isStatic": false,
                  "rules": Array [
                    "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                    [Function],
                    ";
  background-image: ",
                    [Function],
                    ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                    [Function],
                    ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                    [Function],
                    ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                    [Function],
                    ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                    "#999999",
                    ";
  }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-jWBwVP",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ksYbfQ",
              "isStatic": false,
              "rules": Array [
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ksYbfQ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-eerKOB",
            "isStatic": true,
            "rules": Array [
              "
  border-bottom: 1px solid ",
              "#D1D1D1",
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-eerKOB",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            data-test-id="no-events-message"
          >
            No events matching query
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "No events matching query",
            "data-test-id": "no-events-message",
          },
          "ref": null,
          "rendered": "No events matching query",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-eilVRo",
              "isStatic": false,
              "rules": Array [
                "
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                ";
    font-weight: ",
                [Function],
                ";
  ",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
                "
  margin: 0;
  padding: 0;
",
              ],
            },
            "displayName": "Styled(Styled(styled.h4))",
            "foldedComponentIds": Array [
              "sc-fjdhpX",
              "sc-jzJRlG",
            ],
            "render": [Function],
            "styledComponentId": "sc-eilVRo",
            "target": "h4",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-emmjRN",
            "isStatic": true,
            "rules": Array [
              "
  padding: 10vh 0;
  text-align: center;
  color: ",
              "#767676",
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-emmjRN",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      false,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-hMqMXs",
        "isStatic": false,
        "rules": Array [
          "
  display: ",
          [Function],
          ";
  flex: ",
          [Function],
          ";
  flex-direction: ",
          [Function],
          "
  flex-grow: ",
          [Function],
          ";
  flex-shrink: ",
          [Function],
          ";
  flex-basis: ",
          [Function],
          ";
  flex-wrap: ",
          [Function],
          ";
  order: ",
          [Function],
          ";
  justify-content: ",
          [Function],
          ";
  align-items: ",
          [Function],
          ";
  align-content: ",
          [Function],
          ";
  align-self: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  width: ",
          [Function],
          ";
",
          "
    margin: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
    margin-left: ",
          [Function],
          ";
    margin-right: ",
          [Function],
          ";

    padding: ",
          [Function],
          ";
    padding-top: ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    padding-left: ",
          [Function],
          ";
    padding-right: ",
          [Function],
          ";

    border: ",
          [Function],
          ";
    border-top: ",
          [Function],
          ";
    border-bottom: ",
          [Function],
          ";
    border-left: ",
          [Function],
          ";
    border-right: ",
          [Function],
          ";
  ",
        ],
      },
      "displayName": "Flex",
      "foldedComponentIds": Array [
        "sc-eNQAEJ",
      ],
      "render": [Function],
      "styledComponentId": "sc-hMqMXs",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            <ForwardRef
              padding="24px 40px"
            >
              <ForwardRef>
                title
              </ForwardRef>
              <ForwardRef
                height="4px"
              />
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value=""
              />
            </ForwardRef>
          </ForwardRef>,
          <ForwardRef>
            <ForwardRef
              data-test-id="no-events-message"
            >
              No events matching query
            </ForwardRef>
          </ForwardRef>,
          false,
        ],
        "direction": "column",
        "height": "100%",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              padding="24px 40px"
            >
              <ForwardRef>
                title
              </ForwardRef>
              <ForwardRef
                height="4px"
              />
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value=""
              />
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  title
                </ForwardRef>,
                <ForwardRef
                  height="4px"
                />,
                <ForwardRef
                  data-test-id="event-list-search"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                  value=""
                />,
              ],
              "padding": "24px 40px",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "title",
                },
                "ref": null,
                "rendered": "title",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-eilVRo",
                    "isStatic": false,
                    "rules": Array [
                      "
    color: ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      ";
    font-weight: ",
                      [Function],
                      ";
  ",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  margin: 0;
  padding: 0;
",
                    ],
                  },
                  "displayName": "Styled(Styled(styled.h4))",
                  "foldedComponentIds": Array [
                    "sc-fjdhpX",
                    "sc-jzJRlG",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-eilVRo",
                  "target": "h4",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "height": "4px",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-ksYbfQ",
                    "isStatic": false,
                    "rules": Array [
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-ksYbfQ",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "data-test-id": "event-list-search",
                  "onChange": [Function],
                  "placeholder": "Search",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jWBwVP",
                    "isStatic": false,
                    "rules": Array [
                      "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                      [Function],
                      ";
  background-image: ",
                      [Function],
                      ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                      [Function],
                      ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                      [Function],
                      ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                      [Function],
                      ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                      "#999999",
                      ";
  }
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jWBwVP",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ksYbfQ",
                "isStatic": false,
                "rules": Array [
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-ksYbfQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-eerKOB",
              "isStatic": true,
              "rules": Array [
                "
  border-bottom: 1px solid ",
                "#D1D1D1",
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-eerKOB",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              data-test-id="no-events-message"
            >
              No events matching query
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "No events matching query",
              "data-test-id": "no-events-message",
            },
            "ref": null,
            "rendered": "No events matching query",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [
                [Function],
              ],
              "componentStyle": ComponentStyle {
                "componentId": "sc-eilVRo",
                "isStatic": false,
                "rules": Array [
                  "
    color: ",
                  [Function],
                  ";
    font-size: ",
                  [Function],
                  ";
    font-weight: ",
                  [Function],
                  ";
  ",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                  "
  margin: 0;
  padding: 0;
",
                ],
              },
              "displayName": "Styled(Styled(styled.h4))",
              "foldedComponentIds": Array [
                "sc-fjdhpX",
                "sc-jzJRlG",
              ],
              "render": [Function],
              "styledComponentId": "sc-eilVRo",
              "target": "h4",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-emmjRN",
              "isStatic": true,
              "rules": Array [
                "
  padding: 10vh 0;
  text-align: center;
  color: ",
                "#767676",
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-emmjRN",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        false,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-hMqMXs",
          "isStatic": false,
          "rules": Array [
            "
  display: ",
            [Function],
            ";
  flex: ",
            [Function],
            ";
  flex-direction: ",
            [Function],
            "
  flex-grow: ",
            [Function],
            ";
  flex-shrink: ",
            [Function],
            ";
  flex-basis: ",
            [Function],
            ";
  flex-wrap: ",
            [Function],
            ";
  order: ",
            [Function],
            ";
  justify-content: ",
            [Function],
            ";
  align-items: ",
            [Function],
            ";
  align-content: ",
            [Function],
            ";
  align-self: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
",
            "
    margin: ",
            [Function],
            ";
    margin-top: ",
            [Function],
            ";
    margin-bottom: ",
            [Function],
            ";
    margin-left: ",
            [Function],
            ";
    margin-right: ",
            [Function],
            ";

    padding: ",
            [Function],
            ";
    padding-top: ",
            [Function],
            ";
    padding-bottom: ",
            [Function],
            ";
    padding-left: ",
            [Function],
            ";
    padding-right: ",
            [Function],
            ";

    border: ",
            [Function],
            ";
    border-top: ",
            [Function],
            ";
    border-bottom: ",
            [Function],
            ";
    border-left: ",
            [Function],
            ";
    border-right: ",
            [Function],
            ";
  ",
          ],
        },
        "displayName": "Flex",
        "foldedComponentIds": Array [
          "sc-eNQAEJ",
        ],
        "render": [Function],
        "styledComponentId": "sc-hMqMXs",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<EventListPresenter /> with active event 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventListPresenter
    activeId={1}
    events={
      Array [
        Object {
          "clientId": 1,
          "createdAt": 1529336865706,
          "id": 1,
          "integrationId": 1,
          "modifiedAt": 1529336865706,
          "name": "Some Event",
          "seasonId": 1,
          "timestamp": 1529336865706,
          "venueId": 1,
        },
        Object {
          "clientId": 1,
          "createdAt": 1529336865706,
          "id": 1,
          "integrationId": 1,
          "modifiedAt": 1529336865706,
          "name": "Some Event",
          "seasonId": 1,
          "timestamp": 1529336865706,
          "venueId": 1,
        },
        Object {
          "clientId": 1,
          "createdAt": 1529336865706,
          "id": 1,
          "integrationId": 1,
          "modifiedAt": 1529336865706,
          "name": "Some Event",
          "seasonId": 1,
          "timestamp": 1529336865706,
          "venueId": 1,
        },
      ]
    }
    filter=""
    filterOptions={
      Array [
        Object {
          "id": 1,
          "label": "one",
        },
      ]
    }
    loading={false}
    onClick={[Function]}
    onSearchInputChange={[Function]}
    title="title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          <ForwardRef
            padding="24px 40px"
          >
            <ForwardRef>
              title
            </ForwardRef>
            <ForwardRef
              height="4px"
            />
            <ForwardRef
              data-test-id="event-list-search"
              onChange={[Function]}
              placeholder="Search"
              type="text"
              value=""
            />
          </ForwardRef>
        </ForwardRef>,
        false,
        <ForwardRef>
          <ScrollableList
            data={
              Array [
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
              ]
            }
            scrollIndex={0}
          >
            [Function]
          </ScrollableList>
        </ForwardRef>,
      ],
      "direction": "column",
      "height": "100%",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            padding="24px 40px"
          >
            <ForwardRef>
              title
            </ForwardRef>
            <ForwardRef
              height="4px"
            />
            <ForwardRef
              data-test-id="event-list-search"
              onChange={[Function]}
              placeholder="Search"
              type="text"
              value=""
            />
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                title
              </ForwardRef>,
              <ForwardRef
                height="4px"
              />,
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value=""
              />,
            ],
            "padding": "24px 40px",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "title",
              },
              "ref": null,
              "rendered": "title",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eilVRo",
                  "isStatic": false,
                  "rules": Array [
                    "
    color: ",
                    [Function],
                    ";
    font-size: ",
                    [Function],
                    ";
    font-weight: ",
                    [Function],
                    ";
  ",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                    "
  margin: 0;
  padding: 0;
",
                  ],
                },
                "displayName": "Styled(Styled(styled.h4))",
                "foldedComponentIds": Array [
                  "sc-fjdhpX",
                  "sc-jzJRlG",
                ],
                "render": [Function],
                "styledComponentId": "sc-eilVRo",
                "target": "h4",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "height": "4px",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ksYbfQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ksYbfQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "data-test-id": "event-list-search",
                "onChange": [Function],
                "placeholder": "Search",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jWBwVP",
                  "isStatic": false,
                  "rules": Array [
                    "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                    [Function],
                    ";
  background-image: ",
                    [Function],
                    ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                    [Function],
                    ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                    [Function],
                    ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                    [Function],
                    ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                    "#999999",
                    ";
  }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-jWBwVP",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ksYbfQ",
              "isStatic": false,
              "rules": Array [
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ksYbfQ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-eerKOB",
            "isStatic": true,
            "rules": Array [
              "
  border-bottom: 1px solid ",
              "#D1D1D1",
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-eerKOB",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ScrollableList
            data={
              Array [
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
              ]
            }
            scrollIndex={0}
          >
            [Function]
          </ScrollableList>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": [Function],
            "data": Array [
              Object {
                "clientId": 1,
                "createdAt": 1529336865706,
                "id": 1,
                "integrationId": 1,
                "modifiedAt": 1529336865706,
                "name": "Some Event",
                "seasonId": 1,
                "timestamp": 1529336865706,
                "venueId": 1,
              },
              Object {
                "clientId": 1,
                "createdAt": 1529336865706,
                "id": 1,
                "integrationId": 1,
                "modifiedAt": 1529336865706,
                "name": "Some Event",
                "seasonId": 1,
                "timestamp": 1529336865706,
                "venueId": 1,
              },
              Object {
                "clientId": 1,
                "createdAt": 1529336865706,
                "id": 1,
                "integrationId": 1,
                "modifiedAt": 1529336865706,
                "name": "Some Event",
                "seasonId": 1,
                "timestamp": 1529336865706,
                "venueId": 1,
              },
            ],
            "scrollIndex": 0,
          },
          "ref": null,
          "rendered": [Function],
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-gHboQg",
            "isStatic": true,
            "rules": Array [
              "
  overflow-y: scroll;
  flex: 1;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-gHboQg",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-hMqMXs",
        "isStatic": false,
        "rules": Array [
          "
  display: ",
          [Function],
          ";
  flex: ",
          [Function],
          ";
  flex-direction: ",
          [Function],
          "
  flex-grow: ",
          [Function],
          ";
  flex-shrink: ",
          [Function],
          ";
  flex-basis: ",
          [Function],
          ";
  flex-wrap: ",
          [Function],
          ";
  order: ",
          [Function],
          ";
  justify-content: ",
          [Function],
          ";
  align-items: ",
          [Function],
          ";
  align-content: ",
          [Function],
          ";
  align-self: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  width: ",
          [Function],
          ";
",
          "
    margin: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
    margin-left: ",
          [Function],
          ";
    margin-right: ",
          [Function],
          ";

    padding: ",
          [Function],
          ";
    padding-top: ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    padding-left: ",
          [Function],
          ";
    padding-right: ",
          [Function],
          ";

    border: ",
          [Function],
          ";
    border-top: ",
          [Function],
          ";
    border-bottom: ",
          [Function],
          ";
    border-left: ",
          [Function],
          ";
    border-right: ",
          [Function],
          ";
  ",
        ],
      },
      "displayName": "Flex",
      "foldedComponentIds": Array [
        "sc-eNQAEJ",
      ],
      "render": [Function],
      "styledComponentId": "sc-hMqMXs",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            <ForwardRef
              padding="24px 40px"
            >
              <ForwardRef>
                title
              </ForwardRef>
              <ForwardRef
                height="4px"
              />
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value=""
              />
            </ForwardRef>
          </ForwardRef>,
          false,
          <ForwardRef>
            <ScrollableList
              data={
                Array [
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                ]
              }
              scrollIndex={0}
            >
              [Function]
            </ScrollableList>
          </ForwardRef>,
        ],
        "direction": "column",
        "height": "100%",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              padding="24px 40px"
            >
              <ForwardRef>
                title
              </ForwardRef>
              <ForwardRef
                height="4px"
              />
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value=""
              />
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  title
                </ForwardRef>,
                <ForwardRef
                  height="4px"
                />,
                <ForwardRef
                  data-test-id="event-list-search"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                  value=""
                />,
              ],
              "padding": "24px 40px",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "title",
                },
                "ref": null,
                "rendered": "title",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-eilVRo",
                    "isStatic": false,
                    "rules": Array [
                      "
    color: ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      ";
    font-weight: ",
                      [Function],
                      ";
  ",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  margin: 0;
  padding: 0;
",
                    ],
                  },
                  "displayName": "Styled(Styled(styled.h4))",
                  "foldedComponentIds": Array [
                    "sc-fjdhpX",
                    "sc-jzJRlG",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-eilVRo",
                  "target": "h4",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "height": "4px",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-ksYbfQ",
                    "isStatic": false,
                    "rules": Array [
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-ksYbfQ",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "data-test-id": "event-list-search",
                  "onChange": [Function],
                  "placeholder": "Search",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jWBwVP",
                    "isStatic": false,
                    "rules": Array [
                      "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                      [Function],
                      ";
  background-image: ",
                      [Function],
                      ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                      [Function],
                      ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                      [Function],
                      ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                      [Function],
                      ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                      "#999999",
                      ";
  }
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jWBwVP",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ksYbfQ",
                "isStatic": false,
                "rules": Array [
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-ksYbfQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-eerKOB",
              "isStatic": true,
              "rules": Array [
                "
  border-bottom: 1px solid ",
                "#D1D1D1",
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-eerKOB",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ScrollableList
              data={
                Array [
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                ]
              }
              scrollIndex={0}
            >
              [Function]
            </ScrollableList>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": [Function],
              "data": Array [
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
              ],
              "scrollIndex": 0,
            },
            "ref": null,
            "rendered": [Function],
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gHboQg",
              "isStatic": true,
              "rules": Array [
                "
  overflow-y: scroll;
  flex: 1;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gHboQg",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-hMqMXs",
          "isStatic": false,
          "rules": Array [
            "
  display: ",
            [Function],
            ";
  flex: ",
            [Function],
            ";
  flex-direction: ",
            [Function],
            "
  flex-grow: ",
            [Function],
            ";
  flex-shrink: ",
            [Function],
            ";
  flex-basis: ",
            [Function],
            ";
  flex-wrap: ",
            [Function],
            ";
  order: ",
            [Function],
            ";
  justify-content: ",
            [Function],
            ";
  align-items: ",
            [Function],
            ";
  align-content: ",
            [Function],
            ";
  align-self: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
",
            "
    margin: ",
            [Function],
            ";
    margin-top: ",
            [Function],
            ";
    margin-bottom: ",
            [Function],
            ";
    margin-left: ",
            [Function],
            ";
    margin-right: ",
            [Function],
            ";

    padding: ",
            [Function],
            ";
    padding-top: ",
            [Function],
            ";
    padding-bottom: ",
            [Function],
            ";
    padding-left: ",
            [Function],
            ";
    padding-right: ",
            [Function],
            ";

    border: ",
            [Function],
            ";
    border-top: ",
            [Function],
            ";
    border-bottom: ",
            [Function],
            ";
    border-left: ",
            [Function],
            ";
    border-right: ",
            [Function],
            ";
  ",
          ],
        },
        "displayName": "Flex",
        "foldedComponentIds": Array [
          "sc-eNQAEJ",
        ],
        "render": [Function],
        "styledComponentId": "sc-hMqMXs",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<EventListPresenter /> with no active event 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventListPresenter
    activeId={-1}
    events={
      Array [
        Object {
          "clientId": 1,
          "createdAt": 1529336865706,
          "id": 1,
          "integrationId": 1,
          "modifiedAt": 1529336865706,
          "name": "Some Event",
          "seasonId": 1,
          "timestamp": 1529336865706,
          "venueId": 1,
        },
        Object {
          "clientId": 1,
          "createdAt": 1529336865706,
          "id": 1,
          "integrationId": 1,
          "modifiedAt": 1529336865706,
          "name": "Some Event",
          "seasonId": 1,
          "timestamp": 1529336865706,
          "venueId": 1,
        },
        Object {
          "clientId": 1,
          "createdAt": 1529336865706,
          "id": 1,
          "integrationId": 1,
          "modifiedAt": 1529336865706,
          "name": "Some Event",
          "seasonId": 1,
          "timestamp": 1529336865706,
          "venueId": 1,
        },
      ]
    }
    filter=""
    filterOptions={
      Array [
        Object {
          "id": 1,
          "label": "one",
        },
      ]
    }
    loading={false}
    onClick={[Function]}
    onSearchInputChange={[Function]}
    title="title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          <ForwardRef
            padding="24px 40px"
          >
            <ForwardRef>
              title
            </ForwardRef>
            <ForwardRef
              height="4px"
            />
            <ForwardRef
              data-test-id="event-list-search"
              onChange={[Function]}
              placeholder="Search"
              type="text"
              value=""
            />
          </ForwardRef>
        </ForwardRef>,
        false,
        <ForwardRef>
          <ScrollableList
            data={
              Array [
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
              ]
            }
            scrollIndex={-1}
          >
            [Function]
          </ScrollableList>
        </ForwardRef>,
      ],
      "direction": "column",
      "height": "100%",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            padding="24px 40px"
          >
            <ForwardRef>
              title
            </ForwardRef>
            <ForwardRef
              height="4px"
            />
            <ForwardRef
              data-test-id="event-list-search"
              onChange={[Function]}
              placeholder="Search"
              type="text"
              value=""
            />
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                title
              </ForwardRef>,
              <ForwardRef
                height="4px"
              />,
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value=""
              />,
            ],
            "padding": "24px 40px",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "title",
              },
              "ref": null,
              "rendered": "title",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eilVRo",
                  "isStatic": false,
                  "rules": Array [
                    "
    color: ",
                    [Function],
                    ";
    font-size: ",
                    [Function],
                    ";
    font-weight: ",
                    [Function],
                    ";
  ",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                    "
  margin: 0;
  padding: 0;
",
                  ],
                },
                "displayName": "Styled(Styled(styled.h4))",
                "foldedComponentIds": Array [
                  "sc-fjdhpX",
                  "sc-jzJRlG",
                ],
                "render": [Function],
                "styledComponentId": "sc-eilVRo",
                "target": "h4",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "height": "4px",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ksYbfQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ksYbfQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "data-test-id": "event-list-search",
                "onChange": [Function],
                "placeholder": "Search",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jWBwVP",
                  "isStatic": false,
                  "rules": Array [
                    "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                    [Function],
                    ";
  background-image: ",
                    [Function],
                    ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                    [Function],
                    ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                    [Function],
                    ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                    [Function],
                    ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                    "#999999",
                    ";
  }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-jWBwVP",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ksYbfQ",
              "isStatic": false,
              "rules": Array [
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ksYbfQ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-eerKOB",
            "isStatic": true,
            "rules": Array [
              "
  border-bottom: 1px solid ",
              "#D1D1D1",
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-eerKOB",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ScrollableList
            data={
              Array [
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
              ]
            }
            scrollIndex={-1}
          >
            [Function]
          </ScrollableList>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": [Function],
            "data": Array [
              Object {
                "clientId": 1,
                "createdAt": 1529336865706,
                "id": 1,
                "integrationId": 1,
                "modifiedAt": 1529336865706,
                "name": "Some Event",
                "seasonId": 1,
                "timestamp": 1529336865706,
                "venueId": 1,
              },
              Object {
                "clientId": 1,
                "createdAt": 1529336865706,
                "id": 1,
                "integrationId": 1,
                "modifiedAt": 1529336865706,
                "name": "Some Event",
                "seasonId": 1,
                "timestamp": 1529336865706,
                "venueId": 1,
              },
              Object {
                "clientId": 1,
                "createdAt": 1529336865706,
                "id": 1,
                "integrationId": 1,
                "modifiedAt": 1529336865706,
                "name": "Some Event",
                "seasonId": 1,
                "timestamp": 1529336865706,
                "venueId": 1,
              },
            ],
            "scrollIndex": -1,
          },
          "ref": null,
          "rendered": [Function],
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-gHboQg",
            "isStatic": true,
            "rules": Array [
              "
  overflow-y: scroll;
  flex: 1;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-gHboQg",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-hMqMXs",
        "isStatic": false,
        "rules": Array [
          "
  display: ",
          [Function],
          ";
  flex: ",
          [Function],
          ";
  flex-direction: ",
          [Function],
          "
  flex-grow: ",
          [Function],
          ";
  flex-shrink: ",
          [Function],
          ";
  flex-basis: ",
          [Function],
          ";
  flex-wrap: ",
          [Function],
          ";
  order: ",
          [Function],
          ";
  justify-content: ",
          [Function],
          ";
  align-items: ",
          [Function],
          ";
  align-content: ",
          [Function],
          ";
  align-self: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  width: ",
          [Function],
          ";
",
          "
    margin: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
    margin-left: ",
          [Function],
          ";
    margin-right: ",
          [Function],
          ";

    padding: ",
          [Function],
          ";
    padding-top: ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    padding-left: ",
          [Function],
          ";
    padding-right: ",
          [Function],
          ";

    border: ",
          [Function],
          ";
    border-top: ",
          [Function],
          ";
    border-bottom: ",
          [Function],
          ";
    border-left: ",
          [Function],
          ";
    border-right: ",
          [Function],
          ";
  ",
        ],
      },
      "displayName": "Flex",
      "foldedComponentIds": Array [
        "sc-eNQAEJ",
      ],
      "render": [Function],
      "styledComponentId": "sc-hMqMXs",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            <ForwardRef
              padding="24px 40px"
            >
              <ForwardRef>
                title
              </ForwardRef>
              <ForwardRef
                height="4px"
              />
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value=""
              />
            </ForwardRef>
          </ForwardRef>,
          false,
          <ForwardRef>
            <ScrollableList
              data={
                Array [
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                ]
              }
              scrollIndex={-1}
            >
              [Function]
            </ScrollableList>
          </ForwardRef>,
        ],
        "direction": "column",
        "height": "100%",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              padding="24px 40px"
            >
              <ForwardRef>
                title
              </ForwardRef>
              <ForwardRef
                height="4px"
              />
              <ForwardRef
                data-test-id="event-list-search"
                onChange={[Function]}
                placeholder="Search"
                type="text"
                value=""
              />
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  title
                </ForwardRef>,
                <ForwardRef
                  height="4px"
                />,
                <ForwardRef
                  data-test-id="event-list-search"
                  onChange={[Function]}
                  placeholder="Search"
                  type="text"
                  value=""
                />,
              ],
              "padding": "24px 40px",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "title",
                },
                "ref": null,
                "rendered": "title",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-eilVRo",
                    "isStatic": false,
                    "rules": Array [
                      "
    color: ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      ";
    font-weight: ",
                      [Function],
                      ";
  ",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  margin: 0;
  padding: 0;
",
                    ],
                  },
                  "displayName": "Styled(Styled(styled.h4))",
                  "foldedComponentIds": Array [
                    "sc-fjdhpX",
                    "sc-jzJRlG",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-eilVRo",
                  "target": "h4",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "height": "4px",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-ksYbfQ",
                    "isStatic": false,
                    "rules": Array [
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-ksYbfQ",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "data-test-id": "event-list-search",
                  "onChange": [Function],
                  "placeholder": "Search",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jWBwVP",
                    "isStatic": false,
                    "rules": Array [
                      "
  box-sizing: border-box;
  display: block;
  margin-top: 10px;
  margin-bottom: 5px;
  background: ",
                      [Function],
                      ";
  background-image: ",
                      [Function],
                      ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill,
  -webkit-autofill:hover,
  -webkit-autofill:focus {
    -webkit-animation-name: ",
                      [Function],
                      ";
    -webkit-animation-fill-mode: both;
  }
  font-size: 1rem;
  width: ",
                      [Function],
                      ";
  padding-left: 3%;
  border: 2px solid;
  border-radius: 3px;
  border-color: ",
                      [Function],
                      ";
  padding-top: 0.9em;
  padding-bottom: 0.9em;

  ::placeholder {
    color: ",
                      "#999999",
                      ";
  }
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jWBwVP",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ksYbfQ",
                "isStatic": false,
                "rules": Array [
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-ksYbfQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-eerKOB",
              "isStatic": true,
              "rules": Array [
                "
  border-bottom: 1px solid ",
                "#D1D1D1",
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-eerKOB",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ScrollableList
              data={
                Array [
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                  Object {
                    "clientId": 1,
                    "createdAt": 1529336865706,
                    "id": 1,
                    "integrationId": 1,
                    "modifiedAt": 1529336865706,
                    "name": "Some Event",
                    "seasonId": 1,
                    "timestamp": 1529336865706,
                    "venueId": 1,
                  },
                ]
              }
              scrollIndex={-1}
            >
              [Function]
            </ScrollableList>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": [Function],
              "data": Array [
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
                Object {
                  "clientId": 1,
                  "createdAt": 1529336865706,
                  "id": 1,
                  "integrationId": 1,
                  "modifiedAt": 1529336865706,
                  "name": "Some Event",
                  "seasonId": 1,
                  "timestamp": 1529336865706,
                  "venueId": 1,
                },
              ],
              "scrollIndex": -1,
            },
            "ref": null,
            "rendered": [Function],
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gHboQg",
              "isStatic": true,
              "rules": Array [
                "
  overflow-y: scroll;
  flex: 1;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gHboQg",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-hMqMXs",
          "isStatic": false,
          "rules": Array [
            "
  display: ",
            [Function],
            ";
  flex: ",
            [Function],
            ";
  flex-direction: ",
            [Function],
            "
  flex-grow: ",
            [Function],
            ";
  flex-shrink: ",
            [Function],
            ";
  flex-basis: ",
            [Function],
            ";
  flex-wrap: ",
            [Function],
            ";
  order: ",
            [Function],
            ";
  justify-content: ",
            [Function],
            ";
  align-items: ",
            [Function],
            ";
  align-content: ",
            [Function],
            ";
  align-self: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
",
            "
    margin: ",
            [Function],
            ";
    margin-top: ",
            [Function],
            ";
    margin-bottom: ",
            [Function],
            ";
    margin-left: ",
            [Function],
            ";
    margin-right: ",
            [Function],
            ";

    padding: ",
            [Function],
            ";
    padding-top: ",
            [Function],
            ";
    padding-bottom: ",
            [Function],
            ";
    padding-left: ",
            [Function],
            ";
    padding-right: ",
            [Function],
            ";

    border: ",
            [Function],
            ";
    border-top: ",
            [Function],
            ";
    border-bottom: ",
            [Function],
            ";
    border-left: ",
            [Function],
            ";
    border-right: ",
            [Function],
            ";
  ",
          ],
        },
        "displayName": "Flex",
        "foldedComponentIds": Array [
          "sc-eNQAEJ",
        ],
        "render": [Function],
        "styledComponentId": "sc-hMqMXs",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
