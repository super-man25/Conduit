// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EventPriceModifier /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventPriceModifier
    event={
      Object {
        "id": 1,
        "percentPriceModifier": 10,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ApiAlertPresenter
          alertState={
            Object {
              "message": null,
              "type": null,
            }
          }
        />,
        <Flex
          justify="space-between"
        >
          <styled.p
            size={18}
          >
            Price Modifier: 
            10
            %
             
            increase
          </styled.p>
          <Styled(styled.div)
            onClick={[Function]}
            size="medium"
            type="primary"
            weight="normal"
          >
            EDIT
          </Styled(styled.div)>
        </Flex>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "alertState": Object {
            "message": null,
            "type": null,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.p
              size={18}
            >
              Price Modifier: 
              10
              %
               
              increase
            </styled.p>,
            <Styled(styled.div)
              onClick={[Function]}
              size="medium"
              type="primary"
              weight="normal"
            >
              EDIT
            </Styled(styled.div)>,
          ],
          "justify": "space-between",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "Price Modifier: ",
                10,
                "%",
                " ",
                "increase",
              ],
              "size": 18,
            },
            "ref": null,
            "rendered": Array [
              "Price Modifier: ",
              10,
              "%",
              " ",
              "increase",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "EDIT",
              "onClick": [Function],
              "size": "medium",
              "type": "primary",
              "weight": "normal",
            },
            "ref": null,
            "rendered": "EDIT",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ApiAlertPresenter
            alertState={
              Object {
                "message": null,
                "type": null,
              }
            }
          />,
          <Flex
            justify="space-between"
          >
            <styled.p
              size={18}
            >
              Price Modifier: 
              10
              %
               
              increase
            </styled.p>
            <Styled(styled.div)
              onClick={[Function]}
              size="medium"
              type="primary"
              weight="normal"
            >
              EDIT
            </Styled(styled.div)>
          </Flex>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alertState": Object {
              "message": null,
              "type": null,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.p
                size={18}
              >
                Price Modifier: 
                10
                %
                 
                increase
              </styled.p>,
              <Styled(styled.div)
                onClick={[Function]}
                size="medium"
                type="primary"
                weight="normal"
              >
                EDIT
              </Styled(styled.div)>,
            ],
            "justify": "space-between",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "Price Modifier: ",
                  10,
                  "%",
                  " ",
                  "increase",
                ],
                "size": 18,
              },
              "ref": null,
              "rendered": Array [
                "Price Modifier: ",
                10,
                "%",
                " ",
                "increase",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "EDIT",
                "onClick": [Function],
                "size": "medium",
                "type": "primary",
                "weight": "normal",
              },
              "ref": null,
              "rendered": "EDIT",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
