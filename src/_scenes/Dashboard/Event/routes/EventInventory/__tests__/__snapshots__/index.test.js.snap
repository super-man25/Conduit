// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EventInventory /> index route should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventInventory
    event={Object {}}
    isBulkUpdating={false}
    selectedEventIds={Array []}
    startBulkUpdate={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          direction="column"
          height="100%"
        >
          <ForwardRef
            padding="1.5rem 2rem"
          >
            <Connect(withSidebarEventHeader)
              availableInventory={15000}
              totalInventory={40000}
            />
            <ForwardRef
              marginTop="1rem"
            >
              <EventInventorySeatMap />
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            height="2rem"
          />
          <ForwardRef
            padding="0 1rem"
          >
            <ForwardRef
              disabled={true}
              onClick={[MockFunction]}
              small={true}
              title="Update Selected Items"
            >
              Bulk Update (
              0
               Rows)
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            flex={1}
          >
            <Connect(VirtualizedEventInventoryPresenter)
              event={Object {}}
            />
          </ForwardRef>
        </ForwardRef>,
        <Portal />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              padding="1.5rem 2rem"
            >
              <Connect(withSidebarEventHeader)
                availableInventory={15000}
                totalInventory={40000}
              />
              <ForwardRef
                marginTop="1rem"
              >
                <EventInventorySeatMap />
              </ForwardRef>
            </ForwardRef>,
            <ForwardRef
              height="2rem"
            />,
            <ForwardRef
              padding="0 1rem"
            >
              <ForwardRef
                disabled={true}
                onClick={[MockFunction]}
                small={true}
                title="Update Selected Items"
              >
                Bulk Update (
                0
                 Rows)
              </ForwardRef>
            </ForwardRef>,
            <ForwardRef
              flex={1}
            >
              <Connect(VirtualizedEventInventoryPresenter)
                event={Object {}}
              />
            </ForwardRef>,
          ],
          "direction": "column",
          "height": "100%",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Connect(withSidebarEventHeader)
                  availableInventory={15000}
                  totalInventory={40000}
                />,
                <ForwardRef
                  marginTop="1rem"
                >
                  <EventInventorySeatMap />
                </ForwardRef>,
              ],
              "padding": "1.5rem 2rem",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "availableInventory": 15000,
                  "totalInventory": 40000,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <EventInventorySeatMap />,
                  "marginTop": "1rem",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-dxgOiQ",
                    "isStatic": false,
                    "rules": Array [
                      "
  width: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-kpOJdX",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-dxgOiQ",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-dxgOiQ",
                "isStatic": false,
                "rules": Array [
                  "
  width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-kpOJdX",
              ],
              "render": [Function],
              "styledComponentId": "sc-dxgOiQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "height": "2rem",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ksYbfQ",
                "isStatic": false,
                "rules": Array [
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-ksYbfQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                disabled={true}
                onClick={[MockFunction]}
                small={true}
                title="Update Selected Items"
              >
                Bulk Update (
                0
                 Rows)
              </ForwardRef>,
              "padding": "0 1rem",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  "Bulk Update (",
                  0,
                  " Rows)",
                ],
                "disabled": true,
                "onClick": [MockFunction],
                "small": true,
                "title": "Update Selected Items",
              },
              "ref": null,
              "rendered": Array [
                "Bulk Update (",
                0,
                " Rows)",
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htoDjs",
                  "isStatic": false,
                  "rules": Array [
                    "
  min-width: 100px;
  padding: 0 1rem;
  border: none;
  border-radius: 3px;
  height: ",
                    [Function],
                    ";
  background-color: ",
                    "#38A9DB",
                    ";
  color: ",
                    "#FFFFFF",
                    ";
  transition: opacity 100ms ease-out;
  margin: ",
                    [Function],
                    ";

  &:disabled {
    opacity: 0.3;
    background-color: ",
                    "#D1D1D1",
                    ";
  }

  &:hover:not(:disabled) {
    background-color: ",
                    "#024A8F",
                    ";
    cursor: pointer;
  }
",
                    "
  background-color: ",
                    "#D1D1D1",
                    ";
  color: ",
                    "#070707",
                    ";
  opacity: 0.8;

  &:hover:not(:disabled) {
    opacity: 1;
    background-color: ",
                    "#D1D1D1",
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(styled.button)",
                "foldedComponentIds": Array [
                  "sc-bZQynM",
                ],
                "render": [Function],
                "styledComponentId": "sc-htoDjs",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-dxgOiQ",
                "isStatic": false,
                "rules": Array [
                  "
  width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-kpOJdX",
              ],
              "render": [Function],
              "styledComponentId": "sc-dxgOiQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Connect(VirtualizedEventInventoryPresenter)
                event={Object {}}
              />,
              "flex": 1,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "event": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-dTdPqK",
                "isStatic": false,
                "rules": Array [
                  "
  flex: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
  min-height: 60%;
  min-width: 1100px;
",
                ],
              },
              "defaultProps": Object {
                "flex": 1,
              },
              "displayName": "Styled(FlexItem)",
              "foldedComponentIds": Array [
                "sc-kEYyzF",
              ],
              "render": [Function],
              "styledComponentId": "sc-dTdPqK",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-hMqMXs",
            "isStatic": false,
            "rules": Array [
              "
  display: ",
              [Function],
              ";
  flex: ",
              [Function],
              ";
  flex-direction: ",
              [Function],
              "
  flex-grow: ",
              [Function],
              ";
  flex-shrink: ",
              [Function],
              ";
  flex-basis: ",
              [Function],
              ";
  flex-wrap: ",
              [Function],
              ";
  order: ",
              [Function],
              ";
  justify-content: ",
              [Function],
              ";
  align-items: ",
              [Function],
              ";
  align-content: ",
              [Function],
              ";
  align-self: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
            ],
          },
          "displayName": "Flex",
          "foldedComponentIds": Array [
            "sc-eNQAEJ",
          ],
          "render": [Function],
          "styledComponentId": "sc-hMqMXs",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": false,
        },
        "ref": null,
        "rendered": false,
        "type": [Function],
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwCtUz",
        "isStatic": true,
        "rules": Array [
          "
  height: 100%;
  width: 100%;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwCtUz",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            direction="column"
            height="100%"
          >
            <ForwardRef
              padding="1.5rem 2rem"
            >
              <Connect(withSidebarEventHeader)
                availableInventory={15000}
                totalInventory={40000}
              />
              <ForwardRef
                marginTop="1rem"
              >
                <EventInventorySeatMap />
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              height="2rem"
            />
            <ForwardRef
              padding="0 1rem"
            >
              <ForwardRef
                disabled={true}
                onClick={[MockFunction]}
                small={true}
                title="Update Selected Items"
              >
                Bulk Update (
                0
                 Rows)
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              flex={1}
            >
              <Connect(VirtualizedEventInventoryPresenter)
                event={Object {}}
              />
            </ForwardRef>
          </ForwardRef>,
          <Portal />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                padding="1.5rem 2rem"
              >
                <Connect(withSidebarEventHeader)
                  availableInventory={15000}
                  totalInventory={40000}
                />
                <ForwardRef
                  marginTop="1rem"
                >
                  <EventInventorySeatMap />
                </ForwardRef>
              </ForwardRef>,
              <ForwardRef
                height="2rem"
              />,
              <ForwardRef
                padding="0 1rem"
              >
                <ForwardRef
                  disabled={true}
                  onClick={[MockFunction]}
                  small={true}
                  title="Update Selected Items"
                >
                  Bulk Update (
                  0
                   Rows)
                </ForwardRef>
              </ForwardRef>,
              <ForwardRef
                flex={1}
              >
                <Connect(VirtualizedEventInventoryPresenter)
                  event={Object {}}
                />
              </ForwardRef>,
            ],
            "direction": "column",
            "height": "100%",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Connect(withSidebarEventHeader)
                    availableInventory={15000}
                    totalInventory={40000}
                  />,
                  <ForwardRef
                    marginTop="1rem"
                  >
                    <EventInventorySeatMap />
                  </ForwardRef>,
                ],
                "padding": "1.5rem 2rem",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "availableInventory": 15000,
                    "totalInventory": 40000,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <EventInventorySeatMap />,
                    "marginTop": "1rem",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-dxgOiQ",
                      "isStatic": false,
                      "rules": Array [
                        "
  width: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Styled(styled.div)",
                    "foldedComponentIds": Array [
                      "sc-kpOJdX",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-dxgOiQ",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dxgOiQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  width: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-kpOJdX",
                ],
                "render": [Function],
                "styledComponentId": "sc-dxgOiQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "height": "2rem",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ksYbfQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ksYbfQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  disabled={true}
                  onClick={[MockFunction]}
                  small={true}
                  title="Update Selected Items"
                >
                  Bulk Update (
                  0
                   Rows)
                </ForwardRef>,
                "padding": "0 1rem",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    "Bulk Update (",
                    0,
                    " Rows)",
                  ],
                  "disabled": true,
                  "onClick": [MockFunction],
                  "small": true,
                  "title": "Update Selected Items",
                },
                "ref": null,
                "rendered": Array [
                  "Bulk Update (",
                  0,
                  " Rows)",
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-htoDjs",
                    "isStatic": false,
                    "rules": Array [
                      "
  min-width: 100px;
  padding: 0 1rem;
  border: none;
  border-radius: 3px;
  height: ",
                      [Function],
                      ";
  background-color: ",
                      "#38A9DB",
                      ";
  color: ",
                      "#FFFFFF",
                      ";
  transition: opacity 100ms ease-out;
  margin: ",
                      [Function],
                      ";

  &:disabled {
    opacity: 0.3;
    background-color: ",
                      "#D1D1D1",
                      ";
  }

  &:hover:not(:disabled) {
    background-color: ",
                      "#024A8F",
                      ";
    cursor: pointer;
  }
",
                      "
  background-color: ",
                      "#D1D1D1",
                      ";
  color: ",
                      "#070707",
                      ";
  opacity: 0.8;

  &:hover:not(:disabled) {
    opacity: 1;
    background-color: ",
                      "#D1D1D1",
                      ";
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.button)",
                  "foldedComponentIds": Array [
                    "sc-bZQynM",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-htoDjs",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dxgOiQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  width: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-kpOJdX",
                ],
                "render": [Function],
                "styledComponentId": "sc-dxgOiQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Connect(VirtualizedEventInventoryPresenter)
                  event={Object {}}
                />,
                "flex": 1,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "event": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dTdPqK",
                  "isStatic": false,
                  "rules": Array [
                    "
  flex: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
  min-height: 60%;
  min-width: 1100px;
",
                  ],
                },
                "defaultProps": Object {
                  "flex": 1,
                },
                "displayName": "Styled(FlexItem)",
                "foldedComponentIds": Array [
                  "sc-kEYyzF",
                ],
                "render": [Function],
                "styledComponentId": "sc-dTdPqK",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-hMqMXs",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Flex",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
            ],
            "render": [Function],
            "styledComponentId": "sc-hMqMXs",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": false,
          },
          "ref": null,
          "rendered": false,
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwCtUz",
          "isStatic": true,
          "rules": Array [
            "
  height: 100%;
  width: 100%;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwCtUz",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<EventInventory /> index route should render correctly when there are selectedEventIds 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventInventory
    event={Object {}}
    isBulkUpdating={false}
    selectedEventIds={
      Array [
        1,
        2,
        3,
      ]
    }
    startBulkUpdate={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          direction="column"
          height="100%"
        >
          <ForwardRef
            padding="1.5rem 2rem"
          >
            <Connect(withSidebarEventHeader)
              availableInventory={15000}
              totalInventory={40000}
            />
            <ForwardRef
              marginTop="1rem"
            >
              <EventInventorySeatMap />
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            height="2rem"
          />
          <ForwardRef
            padding="0 1rem"
          >
            <ForwardRef
              disabled={false}
              onClick={[MockFunction]}
              small={true}
              title="Update Selected Items"
            >
              Bulk Update (
              3
               Rows)
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            flex={1}
          >
            <Connect(VirtualizedEventInventoryPresenter)
              event={Object {}}
            />
          </ForwardRef>
        </ForwardRef>,
        <Portal />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              padding="1.5rem 2rem"
            >
              <Connect(withSidebarEventHeader)
                availableInventory={15000}
                totalInventory={40000}
              />
              <ForwardRef
                marginTop="1rem"
              >
                <EventInventorySeatMap />
              </ForwardRef>
            </ForwardRef>,
            <ForwardRef
              height="2rem"
            />,
            <ForwardRef
              padding="0 1rem"
            >
              <ForwardRef
                disabled={false}
                onClick={[MockFunction]}
                small={true}
                title="Update Selected Items"
              >
                Bulk Update (
                3
                 Rows)
              </ForwardRef>
            </ForwardRef>,
            <ForwardRef
              flex={1}
            >
              <Connect(VirtualizedEventInventoryPresenter)
                event={Object {}}
              />
            </ForwardRef>,
          ],
          "direction": "column",
          "height": "100%",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Connect(withSidebarEventHeader)
                  availableInventory={15000}
                  totalInventory={40000}
                />,
                <ForwardRef
                  marginTop="1rem"
                >
                  <EventInventorySeatMap />
                </ForwardRef>,
              ],
              "padding": "1.5rem 2rem",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "availableInventory": 15000,
                  "totalInventory": 40000,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <EventInventorySeatMap />,
                  "marginTop": "1rem",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-dxgOiQ",
                    "isStatic": false,
                    "rules": Array [
                      "
  width: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-kpOJdX",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-dxgOiQ",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-dxgOiQ",
                "isStatic": false,
                "rules": Array [
                  "
  width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-kpOJdX",
              ],
              "render": [Function],
              "styledComponentId": "sc-dxgOiQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "height": "2rem",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ksYbfQ",
                "isStatic": false,
                "rules": Array [
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-ksYbfQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                disabled={false}
                onClick={[MockFunction]}
                small={true}
                title="Update Selected Items"
              >
                Bulk Update (
                3
                 Rows)
              </ForwardRef>,
              "padding": "0 1rem",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  "Bulk Update (",
                  3,
                  " Rows)",
                ],
                "disabled": false,
                "onClick": [MockFunction],
                "small": true,
                "title": "Update Selected Items",
              },
              "ref": null,
              "rendered": Array [
                "Bulk Update (",
                3,
                " Rows)",
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htoDjs",
                  "isStatic": false,
                  "rules": Array [
                    "
  min-width: 100px;
  padding: 0 1rem;
  border: none;
  border-radius: 3px;
  height: ",
                    [Function],
                    ";
  background-color: ",
                    "#38A9DB",
                    ";
  color: ",
                    "#FFFFFF",
                    ";
  transition: opacity 100ms ease-out;
  margin: ",
                    [Function],
                    ";

  &:disabled {
    opacity: 0.3;
    background-color: ",
                    "#D1D1D1",
                    ";
  }

  &:hover:not(:disabled) {
    background-color: ",
                    "#024A8F",
                    ";
    cursor: pointer;
  }
",
                    "
  background-color: ",
                    "#D1D1D1",
                    ";
  color: ",
                    "#070707",
                    ";
  opacity: 0.8;

  &:hover:not(:disabled) {
    opacity: 1;
    background-color: ",
                    "#D1D1D1",
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(styled.button)",
                "foldedComponentIds": Array [
                  "sc-bZQynM",
                ],
                "render": [Function],
                "styledComponentId": "sc-htoDjs",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-dxgOiQ",
                "isStatic": false,
                "rules": Array [
                  "
  width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-kpOJdX",
              ],
              "render": [Function],
              "styledComponentId": "sc-dxgOiQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Connect(VirtualizedEventInventoryPresenter)
                event={Object {}}
              />,
              "flex": 1,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "event": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-dTdPqK",
                "isStatic": false,
                "rules": Array [
                  "
  flex: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
  min-height: 60%;
  min-width: 1100px;
",
                ],
              },
              "defaultProps": Object {
                "flex": 1,
              },
              "displayName": "Styled(FlexItem)",
              "foldedComponentIds": Array [
                "sc-kEYyzF",
              ],
              "render": [Function],
              "styledComponentId": "sc-dTdPqK",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-hMqMXs",
            "isStatic": false,
            "rules": Array [
              "
  display: ",
              [Function],
              ";
  flex: ",
              [Function],
              ";
  flex-direction: ",
              [Function],
              "
  flex-grow: ",
              [Function],
              ";
  flex-shrink: ",
              [Function],
              ";
  flex-basis: ",
              [Function],
              ";
  flex-wrap: ",
              [Function],
              ";
  order: ",
              [Function],
              ";
  justify-content: ",
              [Function],
              ";
  align-items: ",
              [Function],
              ";
  align-content: ",
              [Function],
              ";
  align-self: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
            ],
          },
          "displayName": "Flex",
          "foldedComponentIds": Array [
            "sc-eNQAEJ",
          ],
          "render": [Function],
          "styledComponentId": "sc-hMqMXs",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": false,
        },
        "ref": null,
        "rendered": false,
        "type": [Function],
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwCtUz",
        "isStatic": true,
        "rules": Array [
          "
  height: 100%;
  width: 100%;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwCtUz",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            direction="column"
            height="100%"
          >
            <ForwardRef
              padding="1.5rem 2rem"
            >
              <Connect(withSidebarEventHeader)
                availableInventory={15000}
                totalInventory={40000}
              />
              <ForwardRef
                marginTop="1rem"
              >
                <EventInventorySeatMap />
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              height="2rem"
            />
            <ForwardRef
              padding="0 1rem"
            >
              <ForwardRef
                disabled={false}
                onClick={[MockFunction]}
                small={true}
                title="Update Selected Items"
              >
                Bulk Update (
                3
                 Rows)
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              flex={1}
            >
              <Connect(VirtualizedEventInventoryPresenter)
                event={Object {}}
              />
            </ForwardRef>
          </ForwardRef>,
          <Portal />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                padding="1.5rem 2rem"
              >
                <Connect(withSidebarEventHeader)
                  availableInventory={15000}
                  totalInventory={40000}
                />
                <ForwardRef
                  marginTop="1rem"
                >
                  <EventInventorySeatMap />
                </ForwardRef>
              </ForwardRef>,
              <ForwardRef
                height="2rem"
              />,
              <ForwardRef
                padding="0 1rem"
              >
                <ForwardRef
                  disabled={false}
                  onClick={[MockFunction]}
                  small={true}
                  title="Update Selected Items"
                >
                  Bulk Update (
                  3
                   Rows)
                </ForwardRef>
              </ForwardRef>,
              <ForwardRef
                flex={1}
              >
                <Connect(VirtualizedEventInventoryPresenter)
                  event={Object {}}
                />
              </ForwardRef>,
            ],
            "direction": "column",
            "height": "100%",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Connect(withSidebarEventHeader)
                    availableInventory={15000}
                    totalInventory={40000}
                  />,
                  <ForwardRef
                    marginTop="1rem"
                  >
                    <EventInventorySeatMap />
                  </ForwardRef>,
                ],
                "padding": "1.5rem 2rem",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "availableInventory": 15000,
                    "totalInventory": 40000,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <EventInventorySeatMap />,
                    "marginTop": "1rem",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-dxgOiQ",
                      "isStatic": false,
                      "rules": Array [
                        "
  width: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Styled(styled.div)",
                    "foldedComponentIds": Array [
                      "sc-kpOJdX",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-dxgOiQ",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dxgOiQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  width: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-kpOJdX",
                ],
                "render": [Function],
                "styledComponentId": "sc-dxgOiQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "height": "2rem",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ksYbfQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ksYbfQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  disabled={false}
                  onClick={[MockFunction]}
                  small={true}
                  title="Update Selected Items"
                >
                  Bulk Update (
                  3
                   Rows)
                </ForwardRef>,
                "padding": "0 1rem",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    "Bulk Update (",
                    3,
                    " Rows)",
                  ],
                  "disabled": false,
                  "onClick": [MockFunction],
                  "small": true,
                  "title": "Update Selected Items",
                },
                "ref": null,
                "rendered": Array [
                  "Bulk Update (",
                  3,
                  " Rows)",
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-htoDjs",
                    "isStatic": false,
                    "rules": Array [
                      "
  min-width: 100px;
  padding: 0 1rem;
  border: none;
  border-radius: 3px;
  height: ",
                      [Function],
                      ";
  background-color: ",
                      "#38A9DB",
                      ";
  color: ",
                      "#FFFFFF",
                      ";
  transition: opacity 100ms ease-out;
  margin: ",
                      [Function],
                      ";

  &:disabled {
    opacity: 0.3;
    background-color: ",
                      "#D1D1D1",
                      ";
  }

  &:hover:not(:disabled) {
    background-color: ",
                      "#024A8F",
                      ";
    cursor: pointer;
  }
",
                      "
  background-color: ",
                      "#D1D1D1",
                      ";
  color: ",
                      "#070707",
                      ";
  opacity: 0.8;

  &:hover:not(:disabled) {
    opacity: 1;
    background-color: ",
                      "#D1D1D1",
                      ";
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.button)",
                  "foldedComponentIds": Array [
                    "sc-bZQynM",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-htoDjs",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dxgOiQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  width: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-kpOJdX",
                ],
                "render": [Function],
                "styledComponentId": "sc-dxgOiQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Connect(VirtualizedEventInventoryPresenter)
                  event={Object {}}
                />,
                "flex": 1,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "event": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dTdPqK",
                  "isStatic": false,
                  "rules": Array [
                    "
  flex: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
  min-height: 60%;
  min-width: 1100px;
",
                  ],
                },
                "defaultProps": Object {
                  "flex": 1,
                },
                "displayName": "Styled(FlexItem)",
                "foldedComponentIds": Array [
                  "sc-kEYyzF",
                ],
                "render": [Function],
                "styledComponentId": "sc-dTdPqK",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-hMqMXs",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Flex",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
            ],
            "render": [Function],
            "styledComponentId": "sc-hMqMXs",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": false,
          },
          "ref": null,
          "rendered": false,
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwCtUz",
          "isStatic": true,
          "rules": Array [
            "
  height: 100%;
  width: 100%;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwCtUz",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<EventInventory /> index route should render correctly when there are selectedEventIds and isBulkUpdating is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventInventory
    event={Object {}}
    isBulkUpdating={true}
    selectedEventIds={
      Array [
        1,
        2,
        3,
      ]
    }
    startBulkUpdate={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          direction="column"
          height="100%"
        >
          <ForwardRef
            padding="1.5rem 2rem"
          >
            <Connect(withSidebarEventHeader)
              availableInventory={15000}
              totalInventory={40000}
            />
            <ForwardRef
              marginTop="1rem"
            >
              <EventInventorySeatMap />
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            height="2rem"
          />
          <ForwardRef
            padding="0 1rem"
          >
            <ForwardRef
              disabled={false}
              onClick={[MockFunction]}
              small={true}
              title="Update Selected Items"
            >
              Bulk Update (
              3
               Rows)
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            flex={1}
          >
            <Connect(VirtualizedEventInventoryPresenter)
              event={Object {}}
            />
          </ForwardRef>
        </ForwardRef>,
        <Portal>
          <Connect(BulkUpdateModalPresenter)
            selectedEventIds={
              Array [
                1,
                2,
                3,
              ]
            }
          />
        </Portal>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              padding="1.5rem 2rem"
            >
              <Connect(withSidebarEventHeader)
                availableInventory={15000}
                totalInventory={40000}
              />
              <ForwardRef
                marginTop="1rem"
              >
                <EventInventorySeatMap />
              </ForwardRef>
            </ForwardRef>,
            <ForwardRef
              height="2rem"
            />,
            <ForwardRef
              padding="0 1rem"
            >
              <ForwardRef
                disabled={false}
                onClick={[MockFunction]}
                small={true}
                title="Update Selected Items"
              >
                Bulk Update (
                3
                 Rows)
              </ForwardRef>
            </ForwardRef>,
            <ForwardRef
              flex={1}
            >
              <Connect(VirtualizedEventInventoryPresenter)
                event={Object {}}
              />
            </ForwardRef>,
          ],
          "direction": "column",
          "height": "100%",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Connect(withSidebarEventHeader)
                  availableInventory={15000}
                  totalInventory={40000}
                />,
                <ForwardRef
                  marginTop="1rem"
                >
                  <EventInventorySeatMap />
                </ForwardRef>,
              ],
              "padding": "1.5rem 2rem",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "availableInventory": 15000,
                  "totalInventory": 40000,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <EventInventorySeatMap />,
                  "marginTop": "1rem",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-dxgOiQ",
                    "isStatic": false,
                    "rules": Array [
                      "
  width: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-kpOJdX",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-dxgOiQ",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-dxgOiQ",
                "isStatic": false,
                "rules": Array [
                  "
  width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-kpOJdX",
              ],
              "render": [Function],
              "styledComponentId": "sc-dxgOiQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "height": "2rem",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ksYbfQ",
                "isStatic": false,
                "rules": Array [
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-ksYbfQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                disabled={false}
                onClick={[MockFunction]}
                small={true}
                title="Update Selected Items"
              >
                Bulk Update (
                3
                 Rows)
              </ForwardRef>,
              "padding": "0 1rem",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  "Bulk Update (",
                  3,
                  " Rows)",
                ],
                "disabled": false,
                "onClick": [MockFunction],
                "small": true,
                "title": "Update Selected Items",
              },
              "ref": null,
              "rendered": Array [
                "Bulk Update (",
                3,
                " Rows)",
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htoDjs",
                  "isStatic": false,
                  "rules": Array [
                    "
  min-width: 100px;
  padding: 0 1rem;
  border: none;
  border-radius: 3px;
  height: ",
                    [Function],
                    ";
  background-color: ",
                    "#38A9DB",
                    ";
  color: ",
                    "#FFFFFF",
                    ";
  transition: opacity 100ms ease-out;
  margin: ",
                    [Function],
                    ";

  &:disabled {
    opacity: 0.3;
    background-color: ",
                    "#D1D1D1",
                    ";
  }

  &:hover:not(:disabled) {
    background-color: ",
                    "#024A8F",
                    ";
    cursor: pointer;
  }
",
                    "
  background-color: ",
                    "#D1D1D1",
                    ";
  color: ",
                    "#070707",
                    ";
  opacity: 0.8;

  &:hover:not(:disabled) {
    opacity: 1;
    background-color: ",
                    "#D1D1D1",
                    ";
  }
",
                  ],
                },
                "displayName": "Styled(styled.button)",
                "foldedComponentIds": Array [
                  "sc-bZQynM",
                ],
                "render": [Function],
                "styledComponentId": "sc-htoDjs",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-dxgOiQ",
                "isStatic": false,
                "rules": Array [
                  "
  width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-kpOJdX",
              ],
              "render": [Function],
              "styledComponentId": "sc-dxgOiQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Connect(VirtualizedEventInventoryPresenter)
                event={Object {}}
              />,
              "flex": 1,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "event": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-dTdPqK",
                "isStatic": false,
                "rules": Array [
                  "
  flex: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
  min-height: 60%;
  min-width: 1100px;
",
                ],
              },
              "defaultProps": Object {
                "flex": 1,
              },
              "displayName": "Styled(FlexItem)",
              "foldedComponentIds": Array [
                "sc-kEYyzF",
              ],
              "render": [Function],
              "styledComponentId": "sc-dTdPqK",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-hMqMXs",
            "isStatic": false,
            "rules": Array [
              "
  display: ",
              [Function],
              ";
  flex: ",
              [Function],
              ";
  flex-direction: ",
              [Function],
              "
  flex-grow: ",
              [Function],
              ";
  flex-shrink: ",
              [Function],
              ";
  flex-basis: ",
              [Function],
              ";
  flex-wrap: ",
              [Function],
              ";
  order: ",
              [Function],
              ";
  justify-content: ",
              [Function],
              ";
  align-items: ",
              [Function],
              ";
  align-content: ",
              [Function],
              ";
  align-self: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
            ],
          },
          "displayName": "Flex",
          "foldedComponentIds": Array [
            "sc-eNQAEJ",
          ],
          "render": [Function],
          "styledComponentId": "sc-hMqMXs",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Connect(BulkUpdateModalPresenter)
            selectedEventIds={
              Array [
                1,
                2,
                3,
              ]
            }
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "selectedEventIds": Array [
              1,
              2,
              3,
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwCtUz",
        "isStatic": true,
        "rules": Array [
          "
  height: 100%;
  width: 100%;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwCtUz",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            direction="column"
            height="100%"
          >
            <ForwardRef
              padding="1.5rem 2rem"
            >
              <Connect(withSidebarEventHeader)
                availableInventory={15000}
                totalInventory={40000}
              />
              <ForwardRef
                marginTop="1rem"
              >
                <EventInventorySeatMap />
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              height="2rem"
            />
            <ForwardRef
              padding="0 1rem"
            >
              <ForwardRef
                disabled={false}
                onClick={[MockFunction]}
                small={true}
                title="Update Selected Items"
              >
                Bulk Update (
                3
                 Rows)
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              flex={1}
            >
              <Connect(VirtualizedEventInventoryPresenter)
                event={Object {}}
              />
            </ForwardRef>
          </ForwardRef>,
          <Portal>
            <Connect(BulkUpdateModalPresenter)
              selectedEventIds={
                Array [
                  1,
                  2,
                  3,
                ]
              }
            />
          </Portal>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                padding="1.5rem 2rem"
              >
                <Connect(withSidebarEventHeader)
                  availableInventory={15000}
                  totalInventory={40000}
                />
                <ForwardRef
                  marginTop="1rem"
                >
                  <EventInventorySeatMap />
                </ForwardRef>
              </ForwardRef>,
              <ForwardRef
                height="2rem"
              />,
              <ForwardRef
                padding="0 1rem"
              >
                <ForwardRef
                  disabled={false}
                  onClick={[MockFunction]}
                  small={true}
                  title="Update Selected Items"
                >
                  Bulk Update (
                  3
                   Rows)
                </ForwardRef>
              </ForwardRef>,
              <ForwardRef
                flex={1}
              >
                <Connect(VirtualizedEventInventoryPresenter)
                  event={Object {}}
                />
              </ForwardRef>,
            ],
            "direction": "column",
            "height": "100%",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Connect(withSidebarEventHeader)
                    availableInventory={15000}
                    totalInventory={40000}
                  />,
                  <ForwardRef
                    marginTop="1rem"
                  >
                    <EventInventorySeatMap />
                  </ForwardRef>,
                ],
                "padding": "1.5rem 2rem",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "availableInventory": 15000,
                    "totalInventory": 40000,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <EventInventorySeatMap />,
                    "marginTop": "1rem",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-dxgOiQ",
                      "isStatic": false,
                      "rules": Array [
                        "
  width: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Styled(styled.div)",
                    "foldedComponentIds": Array [
                      "sc-kpOJdX",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-dxgOiQ",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dxgOiQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  width: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-kpOJdX",
                ],
                "render": [Function],
                "styledComponentId": "sc-dxgOiQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "height": "2rem",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ksYbfQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ksYbfQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  disabled={false}
                  onClick={[MockFunction]}
                  small={true}
                  title="Update Selected Items"
                >
                  Bulk Update (
                  3
                   Rows)
                </ForwardRef>,
                "padding": "0 1rem",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    "Bulk Update (",
                    3,
                    " Rows)",
                  ],
                  "disabled": false,
                  "onClick": [MockFunction],
                  "small": true,
                  "title": "Update Selected Items",
                },
                "ref": null,
                "rendered": Array [
                  "Bulk Update (",
                  3,
                  " Rows)",
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-htoDjs",
                    "isStatic": false,
                    "rules": Array [
                      "
  min-width: 100px;
  padding: 0 1rem;
  border: none;
  border-radius: 3px;
  height: ",
                      [Function],
                      ";
  background-color: ",
                      "#38A9DB",
                      ";
  color: ",
                      "#FFFFFF",
                      ";
  transition: opacity 100ms ease-out;
  margin: ",
                      [Function],
                      ";

  &:disabled {
    opacity: 0.3;
    background-color: ",
                      "#D1D1D1",
                      ";
  }

  &:hover:not(:disabled) {
    background-color: ",
                      "#024A8F",
                      ";
    cursor: pointer;
  }
",
                      "
  background-color: ",
                      "#D1D1D1",
                      ";
  color: ",
                      "#070707",
                      ";
  opacity: 0.8;

  &:hover:not(:disabled) {
    opacity: 1;
    background-color: ",
                      "#D1D1D1",
                      ";
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.button)",
                  "foldedComponentIds": Array [
                    "sc-bZQynM",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-htoDjs",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dxgOiQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  width: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-kpOJdX",
                ],
                "render": [Function],
                "styledComponentId": "sc-dxgOiQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Connect(VirtualizedEventInventoryPresenter)
                  event={Object {}}
                />,
                "flex": 1,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "event": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dTdPqK",
                  "isStatic": false,
                  "rules": Array [
                    "
  flex: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
  min-height: 60%;
  min-width: 1100px;
",
                  ],
                },
                "defaultProps": Object {
                  "flex": 1,
                },
                "displayName": "Styled(FlexItem)",
                "foldedComponentIds": Array [
                  "sc-kEYyzF",
                ],
                "render": [Function],
                "styledComponentId": "sc-dTdPqK",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-hMqMXs",
              "isStatic": false,
              "rules": Array [
                "
  display: ",
                [Function],
                ";
  flex: ",
                [Function],
                ";
  flex-direction: ",
                [Function],
                "
  flex-grow: ",
                [Function],
                ";
  flex-shrink: ",
                [Function],
                ";
  flex-basis: ",
                [Function],
                ";
  flex-wrap: ",
                [Function],
                ";
  order: ",
                [Function],
                ";
  justify-content: ",
                [Function],
                ";
  align-items: ",
                [Function],
                ";
  align-content: ",
                [Function],
                ";
  align-self: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Flex",
            "foldedComponentIds": Array [
              "sc-eNQAEJ",
            ],
            "render": [Function],
            "styledComponentId": "sc-hMqMXs",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Connect(BulkUpdateModalPresenter)
              selectedEventIds={
                Array [
                  1,
                  2,
                  3,
                ]
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "selectedEventIds": Array [
                1,
                2,
                3,
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwCtUz",
          "isStatic": true,
          "rules": Array [
            "
  height: 100%;
  width: 100%;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwCtUz",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
