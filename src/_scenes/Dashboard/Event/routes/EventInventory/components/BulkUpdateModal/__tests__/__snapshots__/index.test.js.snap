// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BulkUpdateModal /> should render correctly 1`] = `
<Styled(styled.div)>
  <styled.div>
    <styled.div>
      <Styled(Styled(styled.h4))>
        Bulk Inventory Update
      </Styled(Styled(styled.h4))>
      <Styled(styled.p)
        size={14}
        weight={300}
      >
        Updating inventory for 
        3
         row(s).
      </Styled(styled.p)>
    </styled.div>
    <styled.div>
      <Styled(styled.div)
        marginBottom="2rem"
      >
        <styled.label>
          Action
        </styled.label>
        <SelectDropdown
          full={true}
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Update Manual Price",
                "value": 0,
              },
              Object {
                "label": "Update Pricing Status",
                "value": 1,
              },
            ]
          }
          placeholder="Select"
          selected={
            Object {
              "label": "Update Manual Price",
              "value": 0,
            }
          }
        />
      </Styled(styled.div)>
      <Styled(Styled(styled.div))
        marginBottom="2rem"
      >
        <styled.label>
          Manual Price
        </styled.label>
        <NumberInputField
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-fjmCvl",
                "isStatic": true,
                "rules": Array [
                  "
  background-color: ",
                  "#FFFFFF",
                  ";
  border: 1px solid ",
                  "#999999",
                  ";
  border-radius: 3px;
  height: 40px;
  margin: 0;
  padding: 0 0.5rem;
  width: 100%;
",
                ],
              },
              "displayName": "styled.input",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-fjmCvl",
              "target": "input",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          id="manual-price"
          name="price"
          onBlur={[Function]}
          onChange={[Function]}
          placeholder="$ Manual Price"
          type="number"
          value=""
        />
      </Styled(Styled(styled.div))>
      <Flex
        justify="flex-end"
      >
        <Styled(Styled(styled.button))
          margin="0 1rem 0 0"
          onClick={[MockFunction]}
          small={true}
        >
          Cancel
        </Styled(Styled(styled.button))>
        <AsyncButton
          disabled={false}
          isLoading={false}
          onClick={[Function]}
        >
          Submit
        </AsyncButton>
      </Flex>
    </styled.div>
  </styled.div>
  <styled.div
    onClick={[MockFunction]}
  />
</Styled(styled.div)>
`;

exports[`<BulkUpdateModal /> should render correctly when an invalid manual price is entered and blurred 1`] = `
<Styled(styled.div)>
  <styled.div>
    <styled.div>
      <Styled(Styled(styled.h4))>
        Bulk Inventory Update
      </Styled(Styled(styled.h4))>
      <Styled(styled.p)
        size={14}
        weight={300}
      >
        Updating inventory for 
        3
         row(s).
      </Styled(styled.p)>
    </styled.div>
    <styled.div>
      <Styled(styled.div)
        marginBottom="2rem"
      >
        <styled.label>
          Action
        </styled.label>
        <SelectDropdown
          full={true}
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Update Manual Price",
                "value": 0,
              },
              Object {
                "label": "Update Pricing Status",
                "value": 1,
              },
            ]
          }
          placeholder="Select"
          selected={
            Object {
              "label": "Update Manual Price",
              "value": 0,
            }
          }
        />
      </Styled(styled.div)>
      <Styled(Styled(styled.div))
        marginBottom="2rem"
      >
        <styled.label>
          Manual Price
        </styled.label>
        <NumberInputField
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-fjmCvl",
                "isStatic": true,
                "rules": Array [
                  "
  background-color: ",
                  "#FFFFFF",
                  ";
  border: 1px solid ",
                  "#999999",
                  ";
  border-radius: 3px;
  height: 40px;
  margin: 0;
  padding: 0 0.5rem;
  width: 100%;
",
                ],
              },
              "displayName": "styled.input",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-fjmCvl",
              "target": "input",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          id="manual-price"
          name="price"
          onBlur={[Function]}
          onChange={[Function]}
          placeholder="$ Manual Price"
          type="number"
          value="12.222"
        />
        <Styled(Styled(styled.p))
          color="#DC0A0A"
          marginTop="0.5rem"
          size={12}
          weight={300}
        >
          Manual Price must be a valid dollar amount.
        </Styled(Styled(styled.p))>
      </Styled(Styled(styled.div))>
      <Flex
        justify="flex-end"
      >
        <Styled(Styled(styled.button))
          margin="0 1rem 0 0"
          onClick={[MockFunction]}
          small={true}
        >
          Cancel
        </Styled(Styled(styled.button))>
        <AsyncButton
          disabled={true}
          isLoading={false}
          onClick={[Function]}
        >
          Submit
        </AsyncButton>
      </Flex>
    </styled.div>
  </styled.div>
  <styled.div
    onClick={[MockFunction]}
  />
</Styled(styled.div)>
`;

exports[`<BulkUpdateModal /> should render correctly when loading is true 1`] = `
<Styled(styled.div)>
  <styled.div>
    <styled.div>
      <Styled(Styled(styled.h4))>
        Bulk Inventory Update
      </Styled(Styled(styled.h4))>
      <Styled(styled.p)
        size={14}
        weight={300}
      >
        Updating inventory for 
        3
         row(s).
      </Styled(styled.p)>
    </styled.div>
    <styled.div>
      <Styled(styled.div)
        marginBottom="2rem"
      >
        <styled.label>
          Action
        </styled.label>
        <SelectDropdown
          full={true}
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Update Manual Price",
                "value": 0,
              },
              Object {
                "label": "Update Pricing Status",
                "value": 1,
              },
            ]
          }
          placeholder="Select"
          selected={
            Object {
              "label": "Update Manual Price",
              "value": 0,
            }
          }
        />
      </Styled(styled.div)>
      <Styled(Styled(styled.div))
        marginBottom="2rem"
      >
        <styled.label>
          Manual Price
        </styled.label>
        <NumberInputField
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-fjmCvl",
                "isStatic": true,
                "rules": Array [
                  "
  background-color: ",
                  "#FFFFFF",
                  ";
  border: 1px solid ",
                  "#999999",
                  ";
  border-radius: 3px;
  height: 40px;
  margin: 0;
  padding: 0 0.5rem;
  width: 100%;
",
                ],
              },
              "displayName": "styled.input",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-fjmCvl",
              "target": "input",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          id="manual-price"
          name="price"
          onBlur={[Function]}
          onChange={[Function]}
          placeholder="$ Manual Price"
          type="number"
          value=""
        />
      </Styled(Styled(styled.div))>
      <Flex
        justify="flex-end"
      >
        <Styled(Styled(styled.button))
          margin="0 1rem 0 0"
          onClick={[MockFunction]}
          small={true}
        >
          Cancel
        </Styled(Styled(styled.button))>
        <AsyncButton
          disabled={false}
          isLoading={true}
          onClick={[Function]}
        >
          Submit
        </AsyncButton>
      </Flex>
    </styled.div>
  </styled.div>
  <styled.div
    onClick={[MockFunction]}
  />
</Styled(styled.div)>
`;

exports[`<BulkUpdateModal /> should render correctly when the selectedAction is changed 1`] = `
<Styled(styled.div)>
  <styled.div>
    <styled.div>
      <Styled(Styled(styled.h4))>
        Bulk Inventory Update
      </Styled(Styled(styled.h4))>
      <Styled(styled.p)
        size={14}
        weight={300}
      >
        Updating inventory for 
        3
         row(s).
      </Styled(styled.p)>
    </styled.div>
    <styled.div>
      <Styled(styled.div)
        marginBottom="2rem"
      >
        <styled.label>
          Action
        </styled.label>
        <SelectDropdown
          full={true}
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Update Manual Price",
                "value": 0,
              },
              Object {
                "label": "Update Pricing Status",
                "value": 1,
              },
            ]
          }
          placeholder="Select"
          selected={
            Object {
              "label": "Update Pricing Status",
              "value": 1,
            }
          }
        />
      </Styled(styled.div)>
      <Styled(Styled(styled.div))
        marginBottom="1.5rem"
      >
        <styled.label>
          Pricing
        </styled.label>
        <Toggle
          isChecked=""
          onChange={[Function]}
          size="small"
        />
      </Styled(Styled(styled.div))>
      <Flex
        justify="flex-end"
      >
        <Styled(Styled(styled.button))
          margin="0 1rem 0 0"
          onClick={[MockFunction]}
          small={true}
        >
          Cancel
        </Styled(Styled(styled.button))>
        <AsyncButton
          disabled={false}
          isLoading={true}
          onClick={[Function]}
        >
          Submit
        </AsyncButton>
      </Flex>
    </styled.div>
  </styled.div>
  <styled.div
    onClick={[MockFunction]}
  />
</Styled(styled.div)>
`;
