// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ManualPricingColumnCellRenderer /> should render correctly 1`] = `
<Flex
  align="center"
>
  <Styled(styled.p)
    color="#0A169A"
    cursor="pointer"
    ellipsis={true}
    onClick={[Function]}
    opacity={1}
    size={14}
    title="SET PRICE"
  >
    SET PRICE
  </Styled(styled.p)>
</Flex>
`;

exports[`<ManualPricingColumnCellRenderer /> should render correctly when isEditing is true 1`] = `
<Flex
  align="center"
>
  <NumberInputField
    component={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [
          [Function],
        ],
        "componentStyle": ComponentStyle {
          "componentId": "sc-jVODtj",
          "isStatic": false,
          "rules": Array [
            "
  position: relative;
  padding: 15px;
  font-size: 14px;
  border: 2px solid ",
            "#0A169A",
            ";
  border-color: ",
            [Function],
            ";
  border-radius: 3px;
  background: ",
            [Function],
            ";
  ::placeholder {
    color: ",
            "#999999",
            ";
  }
",
            "
  display: block;
  background: ",
            [Function],
            ";
  background-image: ",
            [Function],
            ";
  background-repeat: no-repeat;
  background-position: right center;
  &:-webkit-autofill {
    animation-name: ",
            [Function],
            ";
    animation-fill-mode: both;
  }
  width: ",
            [Function],
            ";
",
            "
  margin: 0 0.5rem 0 0;
  padding: 10px 8px;
  max-height: 35px;
  max-width: 80px;
",
          ],
        },
        "displayName": "Styled(Styled(styled.input))",
        "foldedComponentIds": Array [
          "sc-frDJqD",
          "sc-hqyNC",
        ],
        "render": [Function],
        "styledComponentId": "sc-jVODtj",
        "target": "input",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    onChange={[Function]}
    placeholder="$12.00"
    value=""
  />
  <Styled(Styled(Styled(styled.button)))
    onClick={[Function]}
  >
    Set Price
  </Styled(Styled(Styled(styled.button)))>
  <Flex>
    <ClearIcon
      fill="#000"
      height="24px"
      onClick={[Function]}
      styles={
        Object {
          "cursor": "pointer",
          "marginLeft": 7,
        }
      }
      width="24px"
    />
  </Flex>
</Flex>
`;

exports[`<ManualPricingColumnCellRenderer /> should render correctly when manualPriceLocked is true 1`] = `
<Flex
  align="center"
>
  <Styled(styled.p)
    color="#0A169A"
    cursor="pointer"
    ellipsis={true}
    onClick={[Function]}
    opacity={0.5}
    size={14}
    title="SET PRICE"
  >
    SET PRICE
  </Styled(styled.p)>
</Flex>
`;

exports[`<ManualPricingColumnCellRenderer /> should render correctly when the cellData has a value 1`] = `
<Flex
  align="center"
>
  <Styled(styled.p)
    color="#0A169A"
    cursor="pointer"
    marginLeft="1rem"
    onClick={[Function]}
    size={14}
  >
    $12.00
  </Styled(styled.p)>
</Flex>
`;
