// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ScaleColumnHeaderRenderer /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ScaleColumnHeaderPresenter
    disableSort={false}
    filterDirection="asc"
    isFiltered={false}
    label="Label"
    scaleFilters={Array []}
    selectedScaleFilters={Array []}
    setFilter={[MockFunction]}
    setSelectedScaleFilters={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "active": false,
      "children": Array [
        <styled.div
          position="relative"
        >
          <SortIcon
            filterDirection="asc"
            isFiltered={false}
            onClick={[MockFunction]}
          />
          <Flex
            align="center"
            marginLeft="1.25rem"
          >
            Label
            <div
              style={
                Object {
                  "height": 14,
                  "marginLeft": 7,
                }
              }
            >
              <FilterListIcon
                fill="#070707"
                height={14}
                onClick={[Function]}
                styles={
                  Object {
                    "cursor": "pointer",
                  }
                }
                width={14}
              />
            </div>
          </Flex>
        </styled.div>,
        false,
      ],
      "sortable": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <SortIcon
              filterDirection="asc"
              isFiltered={false}
              onClick={[MockFunction]}
            />,
            <Flex
              align="center"
              marginLeft="1.25rem"
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </Flex>,
          ],
          "position": "relative",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "filterDirection": "asc",
              "isFiltered": false,
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "align": "center",
              "children": Array [
                "Label",
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>,
              ],
              "marginLeft": "1.25rem",
            },
            "ref": null,
            "rendered": Array [
              "Label",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />,
                  "style": Object {
                    "height": 14,
                    "marginLeft": 7,
                  },
                },
                "ref": Object {
                  "current": null,
                },
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "fill": "#070707",
                    "height": 14,
                    "onClick": [Function],
                    "styles": Object {
                      "cursor": "pointer",
                    },
                    "width": 14,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "active": false,
        "children": Array [
          <styled.div
            position="relative"
          >
            <SortIcon
              filterDirection="asc"
              isFiltered={false}
              onClick={[MockFunction]}
            />
            <Flex
              align="center"
              marginLeft="1.25rem"
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </Flex>
          </styled.div>,
          false,
        ],
        "sortable": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <SortIcon
                filterDirection="asc"
                isFiltered={false}
                onClick={[MockFunction]}
              />,
              <Flex
                align="center"
                marginLeft="1.25rem"
              >
                Label
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>
              </Flex>,
            ],
            "position": "relative",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "filterDirection": "asc",
                "isFiltered": false,
                "onClick": [MockFunction],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "align": "center",
                "children": Array [
                  "Label",
                  <div
                    style={
                      Object {
                        "height": 14,
                        "marginLeft": 7,
                      }
                    }
                  >
                    <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />
                  </div>,
                ],
                "marginLeft": "1.25rem",
              },
              "ref": null,
              "rendered": Array [
                "Label",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />,
                    "style": Object {
                      "height": 14,
                      "marginLeft": 7,
                    },
                  },
                  "ref": Object {
                    "current": null,
                  },
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "fill": "#070707",
                      "height": 14,
                      "onClick": [Function],
                      "styles": Object {
                        "cursor": "pointer",
                      },
                      "width": 14,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`<ScaleColumnHeaderRenderer /> should render correctly when disableSort is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ScaleColumnHeaderPresenter
    disableSort={true}
    filterDirection="asc"
    isFiltered={false}
    label="Label"
    scaleFilters={Array []}
    selectedScaleFilters={Array []}
    setFilter={[MockFunction]}
    setSelectedScaleFilters={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "active": false,
      "children": Array [
        <styled.div
          position="relative"
        >
          <Flex
            align="center"
            marginLeft={false}
          >
            Label
            <div
              style={
                Object {
                  "height": 14,
                  "marginLeft": 7,
                }
              }
            >
              <FilterListIcon
                fill="#070707"
                height={14}
                onClick={[Function]}
                styles={
                  Object {
                    "cursor": "pointer",
                  }
                }
                width={14}
              />
            </div>
          </Flex>
        </styled.div>,
        false,
      ],
      "sortable": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            false,
            <Flex
              align="center"
              marginLeft={false}
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </Flex>,
          ],
          "position": "relative",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "align": "center",
              "children": Array [
                "Label",
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>,
              ],
              "marginLeft": false,
            },
            "ref": null,
            "rendered": Array [
              "Label",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />,
                  "style": Object {
                    "height": 14,
                    "marginLeft": 7,
                  },
                },
                "ref": Object {
                  "current": null,
                },
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "fill": "#070707",
                    "height": 14,
                    "onClick": [Function],
                    "styles": Object {
                      "cursor": "pointer",
                    },
                    "width": 14,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "active": false,
        "children": Array [
          <styled.div
            position="relative"
          >
            <Flex
              align="center"
              marginLeft={false}
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </Flex>
          </styled.div>,
          false,
        ],
        "sortable": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              false,
              <Flex
                align="center"
                marginLeft={false}
              >
                Label
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>
              </Flex>,
            ],
            "position": "relative",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "align": "center",
                "children": Array [
                  "Label",
                  <div
                    style={
                      Object {
                        "height": 14,
                        "marginLeft": 7,
                      }
                    }
                  >
                    <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />
                  </div>,
                ],
                "marginLeft": false,
              },
              "ref": null,
              "rendered": Array [
                "Label",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />,
                    "style": Object {
                      "height": 14,
                      "marginLeft": 7,
                    },
                  },
                  "ref": Object {
                    "current": null,
                  },
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "fill": "#070707",
                      "height": 14,
                      "onClick": [Function],
                      "styles": Object {
                        "cursor": "pointer",
                      },
                      "width": 14,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`<ScaleColumnHeaderRenderer /> should render correctly when isFiltered is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ScaleColumnHeaderPresenter
    disableSort={false}
    filterDirection="asc"
    isFiltered={true}
    label="Label"
    scaleFilters={Array []}
    selectedScaleFilters={Array []}
    setFilter={[MockFunction]}
    setSelectedScaleFilters={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "active": true,
      "children": Array [
        <styled.div
          position="relative"
        >
          <SortIcon
            filterDirection="asc"
            isFiltered={true}
            onClick={[MockFunction]}
          />
          <Flex
            align="center"
            marginLeft="1.25rem"
          >
            Label
            <div
              style={
                Object {
                  "height": 14,
                  "marginLeft": 7,
                }
              }
            >
              <FilterListIcon
                fill="#070707"
                height={14}
                onClick={[Function]}
                styles={
                  Object {
                    "cursor": "pointer",
                  }
                }
                width={14}
              />
            </div>
          </Flex>
        </styled.div>,
        false,
      ],
      "sortable": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <SortIcon
              filterDirection="asc"
              isFiltered={true}
              onClick={[MockFunction]}
            />,
            <Flex
              align="center"
              marginLeft="1.25rem"
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </Flex>,
          ],
          "position": "relative",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "filterDirection": "asc",
              "isFiltered": true,
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "align": "center",
              "children": Array [
                "Label",
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>,
              ],
              "marginLeft": "1.25rem",
            },
            "ref": null,
            "rendered": Array [
              "Label",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />,
                  "style": Object {
                    "height": 14,
                    "marginLeft": 7,
                  },
                },
                "ref": Object {
                  "current": null,
                },
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "fill": "#070707",
                    "height": 14,
                    "onClick": [Function],
                    "styles": Object {
                      "cursor": "pointer",
                    },
                    "width": 14,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "active": true,
        "children": Array [
          <styled.div
            position="relative"
          >
            <SortIcon
              filterDirection="asc"
              isFiltered={true}
              onClick={[MockFunction]}
            />
            <Flex
              align="center"
              marginLeft="1.25rem"
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </Flex>
          </styled.div>,
          false,
        ],
        "sortable": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <SortIcon
                filterDirection="asc"
                isFiltered={true}
                onClick={[MockFunction]}
              />,
              <Flex
                align="center"
                marginLeft="1.25rem"
              >
                Label
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>
              </Flex>,
            ],
            "position": "relative",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "filterDirection": "asc",
                "isFiltered": true,
                "onClick": [MockFunction],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "align": "center",
                "children": Array [
                  "Label",
                  <div
                    style={
                      Object {
                        "height": 14,
                        "marginLeft": 7,
                      }
                    }
                  >
                    <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />
                  </div>,
                ],
                "marginLeft": "1.25rem",
              },
              "ref": null,
              "rendered": Array [
                "Label",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />,
                    "style": Object {
                      "height": 14,
                      "marginLeft": 7,
                    },
                  },
                  "ref": Object {
                    "current": null,
                  },
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "fill": "#070707",
                      "height": 14,
                      "onClick": [Function],
                      "styles": Object {
                        "cursor": "pointer",
                      },
                      "width": 14,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`<ScaleColumnHeaderRenderer /> should render correctly when sort isFiltered is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ScaleColumnHeaderPresenter
    disableSort={false}
    filterDirection="asc"
    isFiltered={true}
    label="Label"
    scaleFilters={Array []}
    selectedScaleFilters={Array []}
    setFilter={[MockFunction]}
    setSelectedScaleFilters={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "active": true,
      "children": Array [
        <styled.div
          position="relative"
        >
          <SortIcon
            filterDirection="asc"
            isFiltered={true}
            onClick={[MockFunction]}
          />
          <Flex
            align="center"
            marginLeft="1.25rem"
          >
            Label
            <div
              style={
                Object {
                  "height": 14,
                  "marginLeft": 7,
                }
              }
            >
              <FilterListIcon
                fill="#070707"
                height={14}
                onClick={[Function]}
                styles={
                  Object {
                    "cursor": "pointer",
                  }
                }
                width={14}
              />
            </div>
          </Flex>
        </styled.div>,
        false,
      ],
      "sortable": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <SortIcon
              filterDirection="asc"
              isFiltered={true}
              onClick={[MockFunction]}
            />,
            <Flex
              align="center"
              marginLeft="1.25rem"
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </Flex>,
          ],
          "position": "relative",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "filterDirection": "asc",
              "isFiltered": true,
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "align": "center",
              "children": Array [
                "Label",
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>,
              ],
              "marginLeft": "1.25rem",
            },
            "ref": null,
            "rendered": Array [
              "Label",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />,
                  "style": Object {
                    "height": 14,
                    "marginLeft": 7,
                  },
                },
                "ref": Object {
                  "current": null,
                },
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "fill": "#070707",
                    "height": 14,
                    "onClick": [Function],
                    "styles": Object {
                      "cursor": "pointer",
                    },
                    "width": 14,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "active": true,
        "children": Array [
          <styled.div
            position="relative"
          >
            <SortIcon
              filterDirection="asc"
              isFiltered={true}
              onClick={[MockFunction]}
            />
            <Flex
              align="center"
              marginLeft="1.25rem"
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </Flex>
          </styled.div>,
          false,
        ],
        "sortable": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <SortIcon
                filterDirection="asc"
                isFiltered={true}
                onClick={[MockFunction]}
              />,
              <Flex
                align="center"
                marginLeft="1.25rem"
              >
                Label
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>
              </Flex>,
            ],
            "position": "relative",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "filterDirection": "asc",
                "isFiltered": true,
                "onClick": [MockFunction],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "align": "center",
                "children": Array [
                  "Label",
                  <div
                    style={
                      Object {
                        "height": 14,
                        "marginLeft": 7,
                      }
                    }
                  >
                    <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />
                  </div>,
                ],
                "marginLeft": "1.25rem",
              },
              "ref": null,
              "rendered": Array [
                "Label",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />,
                    "style": Object {
                      "height": 14,
                      "marginLeft": 7,
                    },
                  },
                  "ref": Object {
                    "current": null,
                  },
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "fill": "#070707",
                      "height": 14,
                      "onClick": [Function],
                      "styles": Object {
                        "cursor": "pointer",
                      },
                      "width": 14,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
