// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ScaleColumnHeaderRenderer /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ScaleColumnHeaderPresenter
    disableSort={false}
    filterDirection="asc"
    isFiltered={false}
    label="Label"
    scaleFilters={Array []}
    selectedScaleFilters={Array []}
    setFilter={[MockFunction]}
    setSelectedScaleFilters={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "active": false,
      "children": Array [
        <ForwardRef
          position="relative"
        >
          <SortIcon
            filterDirection="asc"
            isFiltered={false}
            onClick={[MockFunction]}
          />
          <ForwardRef
            align="center"
            marginLeft="1.25rem"
          >
            Label
            <div
              style={
                Object {
                  "height": 14,
                  "marginLeft": 7,
                }
              }
            >
              <FilterListIcon
                fill="#070707"
                height={14}
                onClick={[Function]}
                styles={
                  Object {
                    "cursor": "pointer",
                  }
                }
                width={14}
              />
            </div>
          </ForwardRef>
        </ForwardRef>,
        false,
      ],
      "sortable": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <SortIcon
              filterDirection="asc"
              isFiltered={false}
              onClick={[MockFunction]}
            />,
            <ForwardRef
              align="center"
              marginLeft="1.25rem"
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </ForwardRef>,
          ],
          "position": "relative",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "filterDirection": "asc",
              "isFiltered": false,
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "align": "center",
              "children": Array [
                "Label",
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>,
              ],
              "marginLeft": "1.25rem",
            },
            "ref": null,
            "rendered": Array [
              "Label",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />,
                  "style": Object {
                    "height": 14,
                    "marginLeft": 7,
                  },
                },
                "ref": Object {
                  "current": null,
                },
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "fill": "#070707",
                    "height": 14,
                    "onClick": [Function],
                    "styles": Object {
                      "cursor": "pointer",
                    },
                    "width": 14,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-hMqMXs",
                "isStatic": false,
                "rules": Array [
                  "
  display: ",
                  [Function],
                  ";
  flex: ",
                  [Function],
                  ";
  flex-direction: ",
                  [Function],
                  "
  flex-grow: ",
                  [Function],
                  ";
  flex-shrink: ",
                  [Function],
                  ";
  flex-basis: ",
                  [Function],
                  ";
  flex-wrap: ",
                  [Function],
                  ";
  order: ",
                  [Function],
                  ";
  justify-content: ",
                  [Function],
                  ";
  align-items: ",
                  [Function],
                  ";
  align-content: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Flex",
              "foldedComponentIds": Array [
                "sc-eNQAEJ",
              ],
              "render": [Function],
              "styledComponentId": "sc-hMqMXs",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-fYiAbW",
            "isStatic": false,
            "rules": Array [
              "
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
              "
  position: ",
              [Function],
              ";
  top: ",
              [Function],
              ";
  bottom: ",
              [Function],
              ";
  left: ",
              [Function],
              ";
  right: ",
              [Function],
              ";
  z-index: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "Styled(Styled(styled.div))",
          "foldedComponentIds": Array [
            "sc-kpOJdX",
            "sc-dxgOiQ",
          ],
          "render": [Function],
          "styledComponentId": "sc-fYiAbW",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      false,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-cbkKFq",
        "isStatic": false,
        "rules": Array [
          "
  text-align: ",
          [Function],
          ";
  color: ",
          "#323232",
          ";
  font-weight: 500;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-cbkKFq",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "active": false,
        "children": Array [
          <ForwardRef
            position="relative"
          >
            <SortIcon
              filterDirection="asc"
              isFiltered={false}
              onClick={[MockFunction]}
            />
            <ForwardRef
              align="center"
              marginLeft="1.25rem"
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </ForwardRef>
          </ForwardRef>,
          false,
        ],
        "sortable": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <SortIcon
                filterDirection="asc"
                isFiltered={false}
                onClick={[MockFunction]}
              />,
              <ForwardRef
                align="center"
                marginLeft="1.25rem"
              >
                Label
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>
              </ForwardRef>,
            ],
            "position": "relative",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "filterDirection": "asc",
                "isFiltered": false,
                "onClick": [MockFunction],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "align": "center",
                "children": Array [
                  "Label",
                  <div
                    style={
                      Object {
                        "height": 14,
                        "marginLeft": 7,
                      }
                    }
                  >
                    <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />
                  </div>,
                ],
                "marginLeft": "1.25rem",
              },
              "ref": null,
              "rendered": Array [
                "Label",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />,
                    "style": Object {
                      "height": 14,
                      "marginLeft": 7,
                    },
                  },
                  "ref": Object {
                    "current": null,
                  },
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "fill": "#070707",
                      "height": 14,
                      "onClick": [Function],
                      "styles": Object {
                        "cursor": "pointer",
                      },
                      "width": 14,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-hMqMXs",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: ",
                    [Function],
                    ";
  flex: ",
                    [Function],
                    ";
  flex-direction: ",
                    [Function],
                    "
  flex-grow: ",
                    [Function],
                    ";
  flex-shrink: ",
                    [Function],
                    ";
  flex-basis: ",
                    [Function],
                    ";
  flex-wrap: ",
                    [Function],
                    ";
  order: ",
                    [Function],
                    ";
  justify-content: ",
                    [Function],
                    ";
  align-items: ",
                    [Function],
                    ";
  align-content: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Flex",
                "foldedComponentIds": Array [
                  "sc-eNQAEJ",
                ],
                "render": [Function],
                "styledComponentId": "sc-hMqMXs",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-fYiAbW",
              "isStatic": false,
              "rules": Array [
                "
  width: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
                "
  position: ",
                [Function],
                ";
  top: ",
                [Function],
                ";
  bottom: ",
                [Function],
                ";
  left: ",
                [Function],
                ";
  right: ",
                [Function],
                ";
  z-index: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "Styled(Styled(styled.div))",
            "foldedComponentIds": Array [
              "sc-kpOJdX",
              "sc-dxgOiQ",
            ],
            "render": [Function],
            "styledComponentId": "sc-fYiAbW",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        false,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-cbkKFq",
          "isStatic": false,
          "rules": Array [
            "
  text-align: ",
            [Function],
            ";
  color: ",
            "#323232",
            ";
  font-weight: 500;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-cbkKFq",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`<ScaleColumnHeaderRenderer /> should render correctly when disableSort is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ScaleColumnHeaderPresenter
    disableSort={true}
    filterDirection="asc"
    isFiltered={false}
    label="Label"
    scaleFilters={Array []}
    selectedScaleFilters={Array []}
    setFilter={[MockFunction]}
    setSelectedScaleFilters={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "active": false,
      "children": Array [
        <ForwardRef
          position="relative"
        >
          <ForwardRef
            align="center"
            marginLeft={false}
          >
            Label
            <div
              style={
                Object {
                  "height": 14,
                  "marginLeft": 7,
                }
              }
            >
              <FilterListIcon
                fill="#070707"
                height={14}
                onClick={[Function]}
                styles={
                  Object {
                    "cursor": "pointer",
                  }
                }
                width={14}
              />
            </div>
          </ForwardRef>
        </ForwardRef>,
        false,
      ],
      "sortable": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            false,
            <ForwardRef
              align="center"
              marginLeft={false}
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </ForwardRef>,
          ],
          "position": "relative",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "align": "center",
              "children": Array [
                "Label",
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>,
              ],
              "marginLeft": false,
            },
            "ref": null,
            "rendered": Array [
              "Label",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />,
                  "style": Object {
                    "height": 14,
                    "marginLeft": 7,
                  },
                },
                "ref": Object {
                  "current": null,
                },
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "fill": "#070707",
                    "height": 14,
                    "onClick": [Function],
                    "styles": Object {
                      "cursor": "pointer",
                    },
                    "width": 14,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-hMqMXs",
                "isStatic": false,
                "rules": Array [
                  "
  display: ",
                  [Function],
                  ";
  flex: ",
                  [Function],
                  ";
  flex-direction: ",
                  [Function],
                  "
  flex-grow: ",
                  [Function],
                  ";
  flex-shrink: ",
                  [Function],
                  ";
  flex-basis: ",
                  [Function],
                  ";
  flex-wrap: ",
                  [Function],
                  ";
  order: ",
                  [Function],
                  ";
  justify-content: ",
                  [Function],
                  ";
  align-items: ",
                  [Function],
                  ";
  align-content: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Flex",
              "foldedComponentIds": Array [
                "sc-eNQAEJ",
              ],
              "render": [Function],
              "styledComponentId": "sc-hMqMXs",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-fYiAbW",
            "isStatic": false,
            "rules": Array [
              "
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
              "
  position: ",
              [Function],
              ";
  top: ",
              [Function],
              ";
  bottom: ",
              [Function],
              ";
  left: ",
              [Function],
              ";
  right: ",
              [Function],
              ";
  z-index: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "Styled(Styled(styled.div))",
          "foldedComponentIds": Array [
            "sc-kpOJdX",
            "sc-dxgOiQ",
          ],
          "render": [Function],
          "styledComponentId": "sc-fYiAbW",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      false,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-cbkKFq",
        "isStatic": false,
        "rules": Array [
          "
  text-align: ",
          [Function],
          ";
  color: ",
          "#323232",
          ";
  font-weight: 500;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-cbkKFq",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "active": false,
        "children": Array [
          <ForwardRef
            position="relative"
          >
            <ForwardRef
              align="center"
              marginLeft={false}
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </ForwardRef>
          </ForwardRef>,
          false,
        ],
        "sortable": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              false,
              <ForwardRef
                align="center"
                marginLeft={false}
              >
                Label
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>
              </ForwardRef>,
            ],
            "position": "relative",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "align": "center",
                "children": Array [
                  "Label",
                  <div
                    style={
                      Object {
                        "height": 14,
                        "marginLeft": 7,
                      }
                    }
                  >
                    <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />
                  </div>,
                ],
                "marginLeft": false,
              },
              "ref": null,
              "rendered": Array [
                "Label",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />,
                    "style": Object {
                      "height": 14,
                      "marginLeft": 7,
                    },
                  },
                  "ref": Object {
                    "current": null,
                  },
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "fill": "#070707",
                      "height": 14,
                      "onClick": [Function],
                      "styles": Object {
                        "cursor": "pointer",
                      },
                      "width": 14,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-hMqMXs",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: ",
                    [Function],
                    ";
  flex: ",
                    [Function],
                    ";
  flex-direction: ",
                    [Function],
                    "
  flex-grow: ",
                    [Function],
                    ";
  flex-shrink: ",
                    [Function],
                    ";
  flex-basis: ",
                    [Function],
                    ";
  flex-wrap: ",
                    [Function],
                    ";
  order: ",
                    [Function],
                    ";
  justify-content: ",
                    [Function],
                    ";
  align-items: ",
                    [Function],
                    ";
  align-content: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Flex",
                "foldedComponentIds": Array [
                  "sc-eNQAEJ",
                ],
                "render": [Function],
                "styledComponentId": "sc-hMqMXs",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-fYiAbW",
              "isStatic": false,
              "rules": Array [
                "
  width: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
                "
  position: ",
                [Function],
                ";
  top: ",
                [Function],
                ";
  bottom: ",
                [Function],
                ";
  left: ",
                [Function],
                ";
  right: ",
                [Function],
                ";
  z-index: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "Styled(Styled(styled.div))",
            "foldedComponentIds": Array [
              "sc-kpOJdX",
              "sc-dxgOiQ",
            ],
            "render": [Function],
            "styledComponentId": "sc-fYiAbW",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        false,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-cbkKFq",
          "isStatic": false,
          "rules": Array [
            "
  text-align: ",
            [Function],
            ";
  color: ",
            "#323232",
            ";
  font-weight: 500;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-cbkKFq",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`<ScaleColumnHeaderRenderer /> should render correctly when isFiltered is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ScaleColumnHeaderPresenter
    disableSort={false}
    filterDirection="asc"
    isFiltered={true}
    label="Label"
    scaleFilters={Array []}
    selectedScaleFilters={Array []}
    setFilter={[MockFunction]}
    setSelectedScaleFilters={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "active": true,
      "children": Array [
        <ForwardRef
          position="relative"
        >
          <SortIcon
            filterDirection="asc"
            isFiltered={true}
            onClick={[MockFunction]}
          />
          <ForwardRef
            align="center"
            marginLeft="1.25rem"
          >
            Label
            <div
              style={
                Object {
                  "height": 14,
                  "marginLeft": 7,
                }
              }
            >
              <FilterListIcon
                fill="#070707"
                height={14}
                onClick={[Function]}
                styles={
                  Object {
                    "cursor": "pointer",
                  }
                }
                width={14}
              />
            </div>
          </ForwardRef>
        </ForwardRef>,
        false,
      ],
      "sortable": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <SortIcon
              filterDirection="asc"
              isFiltered={true}
              onClick={[MockFunction]}
            />,
            <ForwardRef
              align="center"
              marginLeft="1.25rem"
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </ForwardRef>,
          ],
          "position": "relative",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "filterDirection": "asc",
              "isFiltered": true,
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "align": "center",
              "children": Array [
                "Label",
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>,
              ],
              "marginLeft": "1.25rem",
            },
            "ref": null,
            "rendered": Array [
              "Label",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />,
                  "style": Object {
                    "height": 14,
                    "marginLeft": 7,
                  },
                },
                "ref": Object {
                  "current": null,
                },
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "fill": "#070707",
                    "height": 14,
                    "onClick": [Function],
                    "styles": Object {
                      "cursor": "pointer",
                    },
                    "width": 14,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-hMqMXs",
                "isStatic": false,
                "rules": Array [
                  "
  display: ",
                  [Function],
                  ";
  flex: ",
                  [Function],
                  ";
  flex-direction: ",
                  [Function],
                  "
  flex-grow: ",
                  [Function],
                  ";
  flex-shrink: ",
                  [Function],
                  ";
  flex-basis: ",
                  [Function],
                  ";
  flex-wrap: ",
                  [Function],
                  ";
  order: ",
                  [Function],
                  ";
  justify-content: ",
                  [Function],
                  ";
  align-items: ",
                  [Function],
                  ";
  align-content: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Flex",
              "foldedComponentIds": Array [
                "sc-eNQAEJ",
              ],
              "render": [Function],
              "styledComponentId": "sc-hMqMXs",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-fYiAbW",
            "isStatic": false,
            "rules": Array [
              "
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
              "
  position: ",
              [Function],
              ";
  top: ",
              [Function],
              ";
  bottom: ",
              [Function],
              ";
  left: ",
              [Function],
              ";
  right: ",
              [Function],
              ";
  z-index: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "Styled(Styled(styled.div))",
          "foldedComponentIds": Array [
            "sc-kpOJdX",
            "sc-dxgOiQ",
          ],
          "render": [Function],
          "styledComponentId": "sc-fYiAbW",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      false,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-cbkKFq",
        "isStatic": false,
        "rules": Array [
          "
  text-align: ",
          [Function],
          ";
  color: ",
          "#323232",
          ";
  font-weight: 500;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-cbkKFq",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "active": true,
        "children": Array [
          <ForwardRef
            position="relative"
          >
            <SortIcon
              filterDirection="asc"
              isFiltered={true}
              onClick={[MockFunction]}
            />
            <ForwardRef
              align="center"
              marginLeft="1.25rem"
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </ForwardRef>
          </ForwardRef>,
          false,
        ],
        "sortable": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <SortIcon
                filterDirection="asc"
                isFiltered={true}
                onClick={[MockFunction]}
              />,
              <ForwardRef
                align="center"
                marginLeft="1.25rem"
              >
                Label
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>
              </ForwardRef>,
            ],
            "position": "relative",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "filterDirection": "asc",
                "isFiltered": true,
                "onClick": [MockFunction],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "align": "center",
                "children": Array [
                  "Label",
                  <div
                    style={
                      Object {
                        "height": 14,
                        "marginLeft": 7,
                      }
                    }
                  >
                    <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />
                  </div>,
                ],
                "marginLeft": "1.25rem",
              },
              "ref": null,
              "rendered": Array [
                "Label",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />,
                    "style": Object {
                      "height": 14,
                      "marginLeft": 7,
                    },
                  },
                  "ref": Object {
                    "current": null,
                  },
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "fill": "#070707",
                      "height": 14,
                      "onClick": [Function],
                      "styles": Object {
                        "cursor": "pointer",
                      },
                      "width": 14,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-hMqMXs",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: ",
                    [Function],
                    ";
  flex: ",
                    [Function],
                    ";
  flex-direction: ",
                    [Function],
                    "
  flex-grow: ",
                    [Function],
                    ";
  flex-shrink: ",
                    [Function],
                    ";
  flex-basis: ",
                    [Function],
                    ";
  flex-wrap: ",
                    [Function],
                    ";
  order: ",
                    [Function],
                    ";
  justify-content: ",
                    [Function],
                    ";
  align-items: ",
                    [Function],
                    ";
  align-content: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Flex",
                "foldedComponentIds": Array [
                  "sc-eNQAEJ",
                ],
                "render": [Function],
                "styledComponentId": "sc-hMqMXs",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-fYiAbW",
              "isStatic": false,
              "rules": Array [
                "
  width: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
                "
  position: ",
                [Function],
                ";
  top: ",
                [Function],
                ";
  bottom: ",
                [Function],
                ";
  left: ",
                [Function],
                ";
  right: ",
                [Function],
                ";
  z-index: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "Styled(Styled(styled.div))",
            "foldedComponentIds": Array [
              "sc-kpOJdX",
              "sc-dxgOiQ",
            ],
            "render": [Function],
            "styledComponentId": "sc-fYiAbW",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        false,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-cbkKFq",
          "isStatic": false,
          "rules": Array [
            "
  text-align: ",
            [Function],
            ";
  color: ",
            "#323232",
            ";
  font-weight: 500;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-cbkKFq",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`<ScaleColumnHeaderRenderer /> should render correctly when sort isFiltered is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ScaleColumnHeaderPresenter
    disableSort={false}
    filterDirection="asc"
    isFiltered={true}
    label="Label"
    scaleFilters={Array []}
    selectedScaleFilters={Array []}
    setFilter={[MockFunction]}
    setSelectedScaleFilters={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "active": true,
      "children": Array [
        <ForwardRef
          position="relative"
        >
          <SortIcon
            filterDirection="asc"
            isFiltered={true}
            onClick={[MockFunction]}
          />
          <ForwardRef
            align="center"
            marginLeft="1.25rem"
          >
            Label
            <div
              style={
                Object {
                  "height": 14,
                  "marginLeft": 7,
                }
              }
            >
              <FilterListIcon
                fill="#070707"
                height={14}
                onClick={[Function]}
                styles={
                  Object {
                    "cursor": "pointer",
                  }
                }
                width={14}
              />
            </div>
          </ForwardRef>
        </ForwardRef>,
        false,
      ],
      "sortable": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <SortIcon
              filterDirection="asc"
              isFiltered={true}
              onClick={[MockFunction]}
            />,
            <ForwardRef
              align="center"
              marginLeft="1.25rem"
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </ForwardRef>,
          ],
          "position": "relative",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "filterDirection": "asc",
              "isFiltered": true,
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "align": "center",
              "children": Array [
                "Label",
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>,
              ],
              "marginLeft": "1.25rem",
            },
            "ref": null,
            "rendered": Array [
              "Label",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />,
                  "style": Object {
                    "height": 14,
                    "marginLeft": 7,
                  },
                },
                "ref": Object {
                  "current": null,
                },
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "fill": "#070707",
                    "height": 14,
                    "onClick": [Function],
                    "styles": Object {
                      "cursor": "pointer",
                    },
                    "width": 14,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-hMqMXs",
                "isStatic": false,
                "rules": Array [
                  "
  display: ",
                  [Function],
                  ";
  flex: ",
                  [Function],
                  ";
  flex-direction: ",
                  [Function],
                  "
  flex-grow: ",
                  [Function],
                  ";
  flex-shrink: ",
                  [Function],
                  ";
  flex-basis: ",
                  [Function],
                  ";
  flex-wrap: ",
                  [Function],
                  ";
  order: ",
                  [Function],
                  ";
  justify-content: ",
                  [Function],
                  ";
  align-items: ",
                  [Function],
                  ";
  align-content: ",
                  [Function],
                  ";
  align-self: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Flex",
              "foldedComponentIds": Array [
                "sc-eNQAEJ",
              ],
              "render": [Function],
              "styledComponentId": "sc-hMqMXs",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-fYiAbW",
            "isStatic": false,
            "rules": Array [
              "
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
              "
  position: ",
              [Function],
              ";
  top: ",
              [Function],
              ";
  bottom: ",
              [Function],
              ";
  left: ",
              [Function],
              ";
  right: ",
              [Function],
              ";
  z-index: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "Styled(Styled(styled.div))",
          "foldedComponentIds": Array [
            "sc-kpOJdX",
            "sc-dxgOiQ",
          ],
          "render": [Function],
          "styledComponentId": "sc-fYiAbW",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      false,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-cbkKFq",
        "isStatic": false,
        "rules": Array [
          "
  text-align: ",
          [Function],
          ";
  color: ",
          "#323232",
          ";
  font-weight: 500;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-cbkKFq",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "active": true,
        "children": Array [
          <ForwardRef
            position="relative"
          >
            <SortIcon
              filterDirection="asc"
              isFiltered={true}
              onClick={[MockFunction]}
            />
            <ForwardRef
              align="center"
              marginLeft="1.25rem"
            >
              Label
              <div
                style={
                  Object {
                    "height": 14,
                    "marginLeft": 7,
                  }
                }
              >
                <FilterListIcon
                  fill="#070707"
                  height={14}
                  onClick={[Function]}
                  styles={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                  width={14}
                />
              </div>
            </ForwardRef>
          </ForwardRef>,
          false,
        ],
        "sortable": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <SortIcon
                filterDirection="asc"
                isFiltered={true}
                onClick={[MockFunction]}
              />,
              <ForwardRef
                align="center"
                marginLeft="1.25rem"
              >
                Label
                <div
                  style={
                    Object {
                      "height": 14,
                      "marginLeft": 7,
                    }
                  }
                >
                  <FilterListIcon
                    fill="#070707"
                    height={14}
                    onClick={[Function]}
                    styles={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                    width={14}
                  />
                </div>
              </ForwardRef>,
            ],
            "position": "relative",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "filterDirection": "asc",
                "isFiltered": true,
                "onClick": [MockFunction],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "align": "center",
                "children": Array [
                  "Label",
                  <div
                    style={
                      Object {
                        "height": 14,
                        "marginLeft": 7,
                      }
                    }
                  >
                    <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />
                  </div>,
                ],
                "marginLeft": "1.25rem",
              },
              "ref": null,
              "rendered": Array [
                "Label",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <FilterListIcon
                      fill="#070707"
                      height={14}
                      onClick={[Function]}
                      styles={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                      width={14}
                    />,
                    "style": Object {
                      "height": 14,
                      "marginLeft": 7,
                    },
                  },
                  "ref": Object {
                    "current": null,
                  },
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "fill": "#070707",
                      "height": 14,
                      "onClick": [Function],
                      "styles": Object {
                        "cursor": "pointer",
                      },
                      "width": 14,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-hMqMXs",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: ",
                    [Function],
                    ";
  flex: ",
                    [Function],
                    ";
  flex-direction: ",
                    [Function],
                    "
  flex-grow: ",
                    [Function],
                    ";
  flex-shrink: ",
                    [Function],
                    ";
  flex-basis: ",
                    [Function],
                    ";
  flex-wrap: ",
                    [Function],
                    ";
  order: ",
                    [Function],
                    ";
  justify-content: ",
                    [Function],
                    ";
  align-items: ",
                    [Function],
                    ";
  align-content: ",
                    [Function],
                    ";
  align-self: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Flex",
                "foldedComponentIds": Array [
                  "sc-eNQAEJ",
                ],
                "render": [Function],
                "styledComponentId": "sc-hMqMXs",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-fYiAbW",
              "isStatic": false,
              "rules": Array [
                "
  width: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
                "
  position: ",
                [Function],
                ";
  top: ",
                [Function],
                ";
  bottom: ",
                [Function],
                ";
  left: ",
                [Function],
                ";
  right: ",
                [Function],
                ";
  z-index: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "Styled(Styled(styled.div))",
            "foldedComponentIds": Array [
              "sc-kpOJdX",
              "sc-dxgOiQ",
            ],
            "render": [Function],
            "styledComponentId": "sc-fYiAbW",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        false,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-cbkKFq",
          "isStatic": false,
          "rules": Array [
            "
  text-align: ",
            [Function],
            ";
  color: ",
            "#323232",
            ";
  font-weight: 500;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-cbkKFq",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
