// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PeriodicInventoryChart /> should render correctly 1`] = `
<styled.div>
  <ResponsiveContainer
    debounce={0}
    height={400}
    width="100%"
  >
    <BarChart
      barCategoryGap="10%"
      barGap={4}
      data={
        Array [
          Object {
            "eventId": 1,
            "id": 1,
            "inventory": 100,
            "isProjected": false,
            "periodicInventory": 100,
            "periodicRevenue": 100,
            "revenue": 100,
            "timestamp": 1529336865706,
          },
        ]
      }
      layout="horizontal"
      margin={
        Object {
          "bottom": 5,
          "left": 5,
          "right": 5,
          "top": 5,
        }
      }
      reverseStackOrder={false}
      stackOffset="none"
    >
      <CartesianGrid
        fill="none"
        horizontal={true}
        horizontalFill={Array []}
        horizontalPoints={Array []}
        stroke="#ccc"
        vertical={false}
        verticalFill={Array []}
        verticalPoints={Array []}
      />
      <ReferenceLine
        fill="none"
        fillOpacity={1}
        ifOverflow="discard"
        isFront={false}
        position="middle"
        stroke="#007"
        strokeWidth={1}
        xAxisId={0}
        y={0}
        yAxisId={0}
      />
      <XAxis
        allowDataOverflow={false}
        allowDecimals={true}
        allowDuplicatedCategory={true}
        axisLine={false}
        dataKey="timestamp"
        domain={
          Array [
            0,
            "auto",
          ]
        }
        height={30}
        hide={false}
        interval={0}
        mirror={false}
        orientation="bottom"
        padding={
          Object {
            "left": 0,
            "right": 0,
          }
        }
        reversed={false}
        scale="auto"
        tickCount={5}
        tickLine={false}
        type="category"
        width={0}
        xAxisId={0}
      />
      <YAxis
        allowDataOverflow={false}
        allowDecimals={true}
        allowDuplicatedCategory={true}
        axisLine={false}
        domain={
          Array [
            "auto",
            "auto",
          ]
        }
        height={0}
        hide={false}
        mirror={false}
        orientation="left"
        padding={
          Object {
            "bottom": 0,
            "top": 0,
          }
        }
        reversed={false}
        scale="auto"
        tick={
          Object {
            "fontSize": 10,
          }
        }
        tickCount={10}
        tickFormatter={[Function]}
        tickLine={false}
        type="number"
        width={60}
        yAxisId={0}
      >
        <Label
          angle={-90}
          offset={5}
          position="insideLeft"
          style={
            Object {
              "color": "#667",
              "fontSize": 12,
            }
          }
          value="Inventory"
        />
      </YAxis>
      <Bar
        animationBegin={0}
        animationDuration={400}
        animationEasing="ease"
        data={Array []}
        dataKey="periodicInventory"
        fill="#007"
        hide={false}
        isAnimationActive={true}
        layout="vertical"
        legendType="rect"
        minPointSize={0}
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        stackId="a"
        xAxisId={0}
        yAxisId={0}
      />
      <Bar
        animationBegin={0}
        animationDuration={400}
        animationEasing="ease"
        data={Array []}
        dataKey="projectedPeriodicInventory"
        fill="#3af"
        hide={false}
        isAnimationActive={true}
        layout="vertical"
        legendType="rect"
        minPointSize={0}
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        stackId="a"
        xAxisId={0}
        yAxisId={0}
      />
      <Tooltip
        active={false}
        allowEscapeViewBox={
          Object {
            "x": false,
            "y": false,
          }
        }
        animationDuration={500}
        animationEasing="ease"
        content={<PeriodicInventoryTooltip />}
        contentStyle={Object {}}
        coordinate={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        cursor={
          Object {
            "fill": "#007",
            "opacity": 0.4,
          }
        }
        cursorStyle={Object {}}
        filterNull={true}
        isAnimationActive={true}
        itemStyle={Object {}}
        labelStyle={Object {}}
        offset={10}
        separator=" : "
        useTranslate3d={false}
        viewBox={
          Object {
            "x1": 0,
            "x2": 0,
            "y1": 0,
            "y2": 0,
          }
        }
        wrapperStyle={Object {}}
      />
    </BarChart>
  </ResponsiveContainer>
</styled.div>
`;

exports[`<PeriodicInventoryChart /> should render correctly with a different height 1`] = `
<styled.div>
  <ResponsiveContainer
    debounce={0}
    height={300}
    width="100%"
  >
    <BarChart
      barCategoryGap="10%"
      barGap={4}
      data={
        Array [
          Object {
            "eventId": 1,
            "id": 1,
            "inventory": 100,
            "isProjected": false,
            "periodicInventory": 100,
            "periodicRevenue": 100,
            "revenue": 100,
            "timestamp": 1529336865706,
          },
        ]
      }
      layout="horizontal"
      margin={
        Object {
          "bottom": 5,
          "left": 5,
          "right": 5,
          "top": 5,
        }
      }
      reverseStackOrder={false}
      stackOffset="none"
    >
      <CartesianGrid
        fill="none"
        horizontal={true}
        horizontalFill={Array []}
        horizontalPoints={Array []}
        stroke="#ccc"
        vertical={false}
        verticalFill={Array []}
        verticalPoints={Array []}
      />
      <ReferenceLine
        fill="none"
        fillOpacity={1}
        ifOverflow="discard"
        isFront={false}
        position="middle"
        stroke="#007"
        strokeWidth={1}
        xAxisId={0}
        y={0}
        yAxisId={0}
      />
      <XAxis
        allowDataOverflow={false}
        allowDecimals={true}
        allowDuplicatedCategory={true}
        axisLine={false}
        dataKey="timestamp"
        domain={
          Array [
            0,
            "auto",
          ]
        }
        height={30}
        hide={false}
        interval={0}
        mirror={false}
        orientation="bottom"
        padding={
          Object {
            "left": 0,
            "right": 0,
          }
        }
        reversed={false}
        scale="auto"
        tickCount={5}
        tickLine={false}
        type="category"
        width={0}
        xAxisId={0}
      />
      <YAxis
        allowDataOverflow={false}
        allowDecimals={true}
        allowDuplicatedCategory={true}
        axisLine={false}
        domain={
          Array [
            "auto",
            "auto",
          ]
        }
        height={0}
        hide={false}
        mirror={false}
        orientation="left"
        padding={
          Object {
            "bottom": 0,
            "top": 0,
          }
        }
        reversed={false}
        scale="auto"
        tick={
          Object {
            "fontSize": 10,
          }
        }
        tickCount={10}
        tickFormatter={[Function]}
        tickLine={false}
        type="number"
        width={60}
        yAxisId={0}
      >
        <Label
          angle={-90}
          offset={5}
          position="insideLeft"
          style={
            Object {
              "color": "#667",
              "fontSize": 12,
            }
          }
          value="Inventory"
        />
      </YAxis>
      <Bar
        animationBegin={0}
        animationDuration={400}
        animationEasing="ease"
        data={Array []}
        dataKey="periodicInventory"
        fill="#007"
        hide={false}
        isAnimationActive={true}
        layout="vertical"
        legendType="rect"
        minPointSize={0}
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        stackId="a"
        xAxisId={0}
        yAxisId={0}
      />
      <Bar
        animationBegin={0}
        animationDuration={400}
        animationEasing="ease"
        data={Array []}
        dataKey="projectedPeriodicInventory"
        fill="#3af"
        hide={false}
        isAnimationActive={true}
        layout="vertical"
        legendType="rect"
        minPointSize={0}
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        stackId="a"
        xAxisId={0}
        yAxisId={0}
      />
      <Tooltip
        active={false}
        allowEscapeViewBox={
          Object {
            "x": false,
            "y": false,
          }
        }
        animationDuration={500}
        animationEasing="ease"
        content={<PeriodicInventoryTooltip />}
        contentStyle={Object {}}
        coordinate={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        cursor={
          Object {
            "fill": "#007",
            "opacity": 0.4,
          }
        }
        cursorStyle={Object {}}
        filterNull={true}
        isAnimationActive={true}
        itemStyle={Object {}}
        labelStyle={Object {}}
        offset={10}
        separator=" : "
        useTranslate3d={false}
        viewBox={
          Object {
            "x1": 0,
            "x2": 0,
            "y1": 0,
            "y2": 0,
          }
        }
        wrapperStyle={Object {}}
      />
    </BarChart>
  </ResponsiveContainer>
</styled.div>
`;

exports[`<PeriodicInventoryChart /> should render correctly with no date 1`] = `<div />`;
