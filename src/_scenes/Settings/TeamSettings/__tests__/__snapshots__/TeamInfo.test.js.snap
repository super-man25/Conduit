// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TeamInfo /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TeamInfo
    id={1}
    name="New York Mets"
    pricingInterval={15}
    resetDirtyPricingInterval={[MockFunction]}
    setPricingInterval={[MockFunction]}
    update={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          type="secondary"
        >
          Basic Settings
        </ForwardRef>,
        <ForwardRef
          cols={3}
        >
          <ForwardRef
            margin="1rem 0"
            size="large"
          >
            Team
          </ForwardRef>
          <ForwardRef
            margin="1rem 0"
            size="large"
          >
            New York Mets
          </ForwardRef>
          <ForwardRef
            margin="1rem 0"
            size="large"
          />
        </ForwardRef>,
        <withClickAway(Styled(styled.div))
          cols={3}
          onClickAway={[Function]}
        >
          <ForwardRef
            margin="1rem 0"
            size="large"
          >
            Generate pricing updates every
          </ForwardRef>
          <React.Fragment>
            <ForwardRef
              margin="1rem 0"
              size="large"
            >
              15 Minutes
            </ForwardRef>
          </React.Fragment>
        </withClickAway(Styled(styled.div))>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Basic Settings",
          "type": "secondary",
        },
        "ref": null,
        "rendered": "Basic Settings",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-cSHVUG",
            "isStatic": false,
            "rules": Array [
              "
  color: ",
              [Function],
              ";
  font-size: ",
              [Function],
              ";
  font-weight: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.h5",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-cSHVUG",
          "target": "h5",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              margin="1rem 0"
              size="large"
            >
              Team
            </ForwardRef>,
            <ForwardRef
              margin="1rem 0"
              size="large"
            >
              New York Mets
            </ForwardRef>,
            <ForwardRef
              margin="1rem 0"
              size="large"
            />,
          ],
          "cols": 3,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Team",
              "margin": "1rem 0",
              "size": "large",
            },
            "ref": null,
            "rendered": "Team",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bsbRJL",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-weight: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-iQNlJl",
              ],
              "render": [Function],
              "styledComponentId": "sc-bsbRJL",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "New York Mets",
              "margin": "1rem 0",
              "size": "large",
            },
            "ref": null,
            "rendered": "New York Mets",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bsbRJL",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-weight: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-iQNlJl",
              ],
              "render": [Function],
              "styledComponentId": "sc-bsbRJL",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "margin": "1rem 0",
              "size": "large",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bsbRJL",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-weight: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-iQNlJl",
              ],
              "render": [Function],
              "styledComponentId": "sc-bsbRJL",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bRBYWo",
            "isStatic": false,
            "rules": Array [
              "
  display: grid;
  grid-template-columns: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
  margin: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bRBYWo",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <ForwardRef
              margin="1rem 0"
              size="large"
            >
              Generate pricing updates every
            </ForwardRef>,
            <React.Fragment>
              <ForwardRef
                margin="1rem 0"
                size="large"
              >
                15 Minutes
              </ForwardRef>
            </React.Fragment>,
          ],
          "cols": 3,
          "onClickAway": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Generate pricing updates every",
              "margin": "1rem 0",
              "size": "large",
            },
            "ref": null,
            "rendered": "Generate pricing updates every",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bsbRJL",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-weight: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-iQNlJl",
              ],
              "render": [Function],
              "styledComponentId": "sc-bsbRJL",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                margin="1rem 0"
                size="large"
              >
                15 Minutes
              </ForwardRef>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "15 Minutes",
                "margin": "1rem 0",
                "size": "large",
              },
              "ref": null,
              "rendered": "15 Minutes",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bsbRJL",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-iQNlJl",
                ],
                "render": [Function],
                "styledComponentId": "sc-bsbRJL",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Symbol(react.fragment),
          },
        ],
        "type": [Function],
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-lkqHmb",
        "isStatic": false,
        "rules": Array [
          "
  display: ",
          [Function],
          ";
  flex: ",
          [Function],
          ";
  flex-direction: ",
          [Function],
          "
  flex-grow: ",
          [Function],
          ";
  flex-shrink: ",
          [Function],
          ";
  flex-basis: ",
          [Function],
          ";
  flex-wrap: ",
          [Function],
          ";
  order: ",
          [Function],
          ";
  justify-content: ",
          [Function],
          ";
  align-items: ",
          [Function],
          ";
  align-content: ",
          [Function],
          ";
  align-self: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  width: ",
          [Function],
          ";
",
          "
    margin: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
    margin-left: ",
          [Function],
          ";
    margin-right: ",
          [Function],
          ";

    padding: ",
          [Function],
          ";
    padding-top: ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    padding-left: ",
          [Function],
          ";
    padding-right: ",
          [Function],
          ";

    border: ",
          [Function],
          ";
    border-top: ",
          [Function],
          ";
    border-bottom: ",
          [Function],
          ";
    border-left: ",
          [Function],
          ";
    border-right: ",
          [Function],
          ";
  ",
          "
  flex-direction: column;
  justify-content: left;
  margin: 0;
  width: 85%;
",
        ],
      },
      "displayName": "Styled(Flex)",
      "foldedComponentIds": Array [
        "sc-eNQAEJ",
        "sc-hMqMXs",
      ],
      "render": [Function],
      "styledComponentId": "sc-lkqHmb",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            type="secondary"
          >
            Basic Settings
          </ForwardRef>,
          <ForwardRef
            cols={3}
          >
            <ForwardRef
              margin="1rem 0"
              size="large"
            >
              Team
            </ForwardRef>
            <ForwardRef
              margin="1rem 0"
              size="large"
            >
              New York Mets
            </ForwardRef>
            <ForwardRef
              margin="1rem 0"
              size="large"
            />
          </ForwardRef>,
          <withClickAway(Styled(styled.div))
            cols={3}
            onClickAway={[Function]}
          >
            <ForwardRef
              margin="1rem 0"
              size="large"
            >
              Generate pricing updates every
            </ForwardRef>
            <React.Fragment>
              <ForwardRef
                margin="1rem 0"
                size="large"
              >
                15 Minutes
              </ForwardRef>
            </React.Fragment>
          </withClickAway(Styled(styled.div))>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Basic Settings",
            "type": "secondary",
          },
          "ref": null,
          "rendered": "Basic Settings",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-cSHVUG",
              "isStatic": false,
              "rules": Array [
                "
  color: ",
                [Function],
                ";
  font-size: ",
                [Function],
                ";
  font-weight: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.h5",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-cSHVUG",
            "target": "h5",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                margin="1rem 0"
                size="large"
              >
                Team
              </ForwardRef>,
              <ForwardRef
                margin="1rem 0"
                size="large"
              >
                New York Mets
              </ForwardRef>,
              <ForwardRef
                margin="1rem 0"
                size="large"
              />,
            ],
            "cols": 3,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Team",
                "margin": "1rem 0",
                "size": "large",
              },
              "ref": null,
              "rendered": "Team",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bsbRJL",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-iQNlJl",
                ],
                "render": [Function],
                "styledComponentId": "sc-bsbRJL",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "New York Mets",
                "margin": "1rem 0",
                "size": "large",
              },
              "ref": null,
              "rendered": "New York Mets",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bsbRJL",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-iQNlJl",
                ],
                "render": [Function],
                "styledComponentId": "sc-bsbRJL",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "margin": "1rem 0",
                "size": "large",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bsbRJL",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-iQNlJl",
                ],
                "render": [Function],
                "styledComponentId": "sc-bsbRJL",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bRBYWo",
              "isStatic": false,
              "rules": Array [
                "
  display: grid;
  grid-template-columns: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
  margin: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bRBYWo",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <ForwardRef
                margin="1rem 0"
                size="large"
              >
                Generate pricing updates every
              </ForwardRef>,
              <React.Fragment>
                <ForwardRef
                  margin="1rem 0"
                  size="large"
                >
                  15 Minutes
                </ForwardRef>
              </React.Fragment>,
            ],
            "cols": 3,
            "onClickAway": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Generate pricing updates every",
                "margin": "1rem 0",
                "size": "large",
              },
              "ref": null,
              "rendered": "Generate pricing updates every",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bsbRJL",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-iQNlJl",
                ],
                "render": [Function],
                "styledComponentId": "sc-bsbRJL",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  margin="1rem 0"
                  size="large"
                >
                  15 Minutes
                </ForwardRef>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "15 Minutes",
                  "margin": "1rem 0",
                  "size": "large",
                },
                "ref": null,
                "rendered": "15 Minutes",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bsbRJL",
                    "isStatic": false,
                    "rules": Array [
                      "
  font-size: ",
                      [Function],
                      ";
  color: ",
                      [Function],
                      ";
  font-weight: ",
                      [Function],
                      ";
  margin: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-iQNlJl",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-bsbRJL",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Symbol(react.fragment),
            },
          ],
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-lkqHmb",
          "isStatic": false,
          "rules": Array [
            "
  display: ",
            [Function],
            ";
  flex: ",
            [Function],
            ";
  flex-direction: ",
            [Function],
            "
  flex-grow: ",
            [Function],
            ";
  flex-shrink: ",
            [Function],
            ";
  flex-basis: ",
            [Function],
            ";
  flex-wrap: ",
            [Function],
            ";
  order: ",
            [Function],
            ";
  justify-content: ",
            [Function],
            ";
  align-items: ",
            [Function],
            ";
  align-content: ",
            [Function],
            ";
  align-self: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
",
            "
    margin: ",
            [Function],
            ";
    margin-top: ",
            [Function],
            ";
    margin-bottom: ",
            [Function],
            ";
    margin-left: ",
            [Function],
            ";
    margin-right: ",
            [Function],
            ";

    padding: ",
            [Function],
            ";
    padding-top: ",
            [Function],
            ";
    padding-bottom: ",
            [Function],
            ";
    padding-left: ",
            [Function],
            ";
    padding-right: ",
            [Function],
            ";

    border: ",
            [Function],
            ";
    border-top: ",
            [Function],
            ";
    border-bottom: ",
            [Function],
            ";
    border-left: ",
            [Function],
            ";
    border-right: ",
            [Function],
            ";
  ",
            "
  flex-direction: column;
  justify-content: left;
  margin: 0;
  width: 85%;
",
          ],
        },
        "displayName": "Styled(Flex)",
        "foldedComponentIds": Array [
          "sc-eNQAEJ",
          "sc-hMqMXs",
        ],
        "render": [Function],
        "styledComponentId": "sc-lkqHmb",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`<TeamInfo /> renders correctly when isEditing is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TeamInfo
    id={1}
    name="New York Mets"
    pricingInterval={15}
    resetDirtyPricingInterval={[MockFunction]}
    setPricingInterval={[MockFunction]}
    update={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          type="secondary"
        >
          Basic Settings
        </ForwardRef>,
        <ForwardRef
          cols={3}
        >
          <ForwardRef
            margin="1rem 0"
            size="large"
          >
            Team
          </ForwardRef>
          <ForwardRef
            margin="1rem 0"
            size="large"
          >
            New York Mets
          </ForwardRef>
          <ForwardRef
            margin="1rem 0"
            size="large"
          />
        </ForwardRef>,
        <withClickAway(Styled(styled.div))
          cols={3}
          onClickAway={[Function]}
        >
          <ForwardRef
            margin="1rem 0"
            size="large"
          >
            Generate pricing updates every
          </ForwardRef>
          <React.Fragment>
            <ForwardRef
              noBg={true}
              onChange={[Function]}
              size="large"
            >
              <option
                value={15}
              >
                15 minutes
              </option>
              <option
                value={30}
              >
                30 minutes
              </option>
              <option
                value={60}
              >
                1 hour
              </option>
              <option
                value={360}
              >
                6 hours
              </option>
              <option
                value={1440}
              >
                Daily
              </option>
            </ForwardRef>
            <ForwardRef>
              <ForwardRef
                onClick={[Function]}
              >
                Save
              </ForwardRef>
            </ForwardRef>
          </React.Fragment>
        </withClickAway(Styled(styled.div))>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Basic Settings",
          "type": "secondary",
        },
        "ref": null,
        "rendered": "Basic Settings",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-cSHVUG",
            "isStatic": false,
            "rules": Array [
              "
  color: ",
              [Function],
              ";
  font-size: ",
              [Function],
              ";
  font-weight: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.h5",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-cSHVUG",
          "target": "h5",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              margin="1rem 0"
              size="large"
            >
              Team
            </ForwardRef>,
            <ForwardRef
              margin="1rem 0"
              size="large"
            >
              New York Mets
            </ForwardRef>,
            <ForwardRef
              margin="1rem 0"
              size="large"
            />,
          ],
          "cols": 3,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Team",
              "margin": "1rem 0",
              "size": "large",
            },
            "ref": null,
            "rendered": "Team",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bsbRJL",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-weight: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-iQNlJl",
              ],
              "render": [Function],
              "styledComponentId": "sc-bsbRJL",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "New York Mets",
              "margin": "1rem 0",
              "size": "large",
            },
            "ref": null,
            "rendered": "New York Mets",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bsbRJL",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-weight: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-iQNlJl",
              ],
              "render": [Function],
              "styledComponentId": "sc-bsbRJL",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "margin": "1rem 0",
              "size": "large",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bsbRJL",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-weight: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-iQNlJl",
              ],
              "render": [Function],
              "styledComponentId": "sc-bsbRJL",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bRBYWo",
            "isStatic": false,
            "rules": Array [
              "
  display: grid;
  grid-template-columns: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
  margin: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bRBYWo",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <ForwardRef
              margin="1rem 0"
              size="large"
            >
              Generate pricing updates every
            </ForwardRef>,
            <React.Fragment>
              <ForwardRef
                noBg={true}
                onChange={[Function]}
                size="large"
              >
                <option
                  value={15}
                >
                  15 minutes
                </option>
                <option
                  value={30}
                >
                  30 minutes
                </option>
                <option
                  value={60}
                >
                  1 hour
                </option>
                <option
                  value={360}
                >
                  6 hours
                </option>
                <option
                  value={1440}
                >
                  Daily
                </option>
              </ForwardRef>
              <ForwardRef>
                <ForwardRef
                  onClick={[Function]}
                >
                  Save
                </ForwardRef>
              </ForwardRef>
            </React.Fragment>,
          ],
          "cols": 3,
          "onClickAway": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Generate pricing updates every",
              "margin": "1rem 0",
              "size": "large",
            },
            "ref": null,
            "rendered": "Generate pricing updates every",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bsbRJL",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-weight: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                ],
              },
              "displayName": "Styled(styled.div)",
              "foldedComponentIds": Array [
                "sc-iQNlJl",
              ],
              "render": [Function],
              "styledComponentId": "sc-bsbRJL",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef
                  noBg={true}
                  onChange={[Function]}
                  size="large"
                >
                  <option
                    value={15}
                  >
                    15 minutes
                  </option>
                  <option
                    value={30}
                  >
                    30 minutes
                  </option>
                  <option
                    value={60}
                  >
                    1 hour
                  </option>
                  <option
                    value={360}
                  >
                    6 hours
                  </option>
                  <option
                    value={1440}
                  >
                    Daily
                  </option>
                </ForwardRef>,
                <ForwardRef>
                  <ForwardRef
                    onClick={[Function]}
                  >
                    Save
                  </ForwardRef>
                </ForwardRef>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <option
                      value={15}
                    >
                      15 minutes
                    </option>,
                    <option
                      value={30}
                    >
                      30 minutes
                    </option>,
                    <option
                      value={60}
                    >
                      1 hour
                    </option>,
                    <option
                      value={360}
                    >
                      6 hours
                    </option>,
                    <option
                      value={1440}
                    >
                      Daily
                    </option>,
                  ],
                  "noBg": true,
                  "onChange": [Function],
                  "size": "large",
                  "value": undefined,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "host",
                    "props": Object {
                      "children": "15 minutes",
                      "value": 15,
                    },
                    "ref": null,
                    "rendered": "15 minutes",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "host",
                    "props": Object {
                      "children": "30 minutes",
                      "value": 30,
                    },
                    "ref": null,
                    "rendered": "30 minutes",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "2",
                    "nodeType": "host",
                    "props": Object {
                      "children": "1 hour",
                      "value": 60,
                    },
                    "ref": null,
                    "rendered": "1 hour",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "3",
                    "nodeType": "host",
                    "props": Object {
                      "children": "6 hours",
                      "value": 360,
                    },
                    "ref": null,
                    "rendered": "6 hours",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "4",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Daily",
                      "value": 1440,
                    },
                    "ref": null,
                    "rendered": "Daily",
                    "type": "option",
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-Rmtcm",
                    "isStatic": false,
                    "rules": Array [
                      "
  position: relative;
  height: 3rem;
  width: 45%;
  border: ",
                      [Function],
                      ";
  border-radius: 4px;
  color: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  margin: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
  background: ",
                      [Function],
                      ";

  &:focus {
    outline: ",
                      [Function],
                      ";
  }
",
                    ],
                  },
                  "displayName": "styled.select",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-Rmtcm",
                  "target": "select",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    onClick={[Function]}
                  >
                    Save
                  </ForwardRef>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Save",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Save",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-dVhcbM",
                      "isStatic": false,
                      "rules": Array [
                        "
  text-transform: uppercase;
  width: 5.5rem;
  height: 2.875rem;
  border: 2px solid ",
                        "#7CBCDD",
                        ";
  border-radius: 3px;
  color: ",
                        [Function],
                        ";
  border-color: ",
                        [Function],
                        ";
  font-size: 1rem;
  text-align: center;
  margin: 0;
  padding: 0;
  background: ",
                        "#FFFFFF",
                        ";
  cursor: pointer;
  &:hover {
    cursor: ",
                        [Function],
                        ";
    color: ",
                        [Function],
                        ";
    border-color: ",
                        [Function],
                        ";
  }
",
                      ],
                    },
                    "displayName": "styled.button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-dVhcbM",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-eLExRp",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  justify-content: space-evenly;
  align-items: center;
",
                    ],
                  },
                  "displayName": "Styled(Flex)",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                    "sc-hMqMXs",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-eLExRp",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Symbol(react.fragment),
          },
        ],
        "type": [Function],
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-lkqHmb",
        "isStatic": false,
        "rules": Array [
          "
  display: ",
          [Function],
          ";
  flex: ",
          [Function],
          ";
  flex-direction: ",
          [Function],
          "
  flex-grow: ",
          [Function],
          ";
  flex-shrink: ",
          [Function],
          ";
  flex-basis: ",
          [Function],
          ";
  flex-wrap: ",
          [Function],
          ";
  order: ",
          [Function],
          ";
  justify-content: ",
          [Function],
          ";
  align-items: ",
          [Function],
          ";
  align-content: ",
          [Function],
          ";
  align-self: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  width: ",
          [Function],
          ";
",
          "
    margin: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
    margin-left: ",
          [Function],
          ";
    margin-right: ",
          [Function],
          ";

    padding: ",
          [Function],
          ";
    padding-top: ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    padding-left: ",
          [Function],
          ";
    padding-right: ",
          [Function],
          ";

    border: ",
          [Function],
          ";
    border-top: ",
          [Function],
          ";
    border-bottom: ",
          [Function],
          ";
    border-left: ",
          [Function],
          ";
    border-right: ",
          [Function],
          ";
  ",
          "
  flex-direction: column;
  justify-content: left;
  margin: 0;
  width: 85%;
",
        ],
      },
      "displayName": "Styled(Flex)",
      "foldedComponentIds": Array [
        "sc-eNQAEJ",
        "sc-hMqMXs",
      ],
      "render": [Function],
      "styledComponentId": "sc-lkqHmb",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            type="secondary"
          >
            Basic Settings
          </ForwardRef>,
          <ForwardRef
            cols={3}
          >
            <ForwardRef
              margin="1rem 0"
              size="large"
            >
              Team
            </ForwardRef>
            <ForwardRef
              margin="1rem 0"
              size="large"
            >
              New York Mets
            </ForwardRef>
            <ForwardRef
              margin="1rem 0"
              size="large"
            />
          </ForwardRef>,
          <withClickAway(Styled(styled.div))
            cols={3}
            onClickAway={[Function]}
          >
            <ForwardRef
              margin="1rem 0"
              size="large"
            >
              Generate pricing updates every
            </ForwardRef>
            <React.Fragment>
              <ForwardRef
                noBg={true}
                onChange={[Function]}
                size="large"
              >
                <option
                  value={15}
                >
                  15 minutes
                </option>
                <option
                  value={30}
                >
                  30 minutes
                </option>
                <option
                  value={60}
                >
                  1 hour
                </option>
                <option
                  value={360}
                >
                  6 hours
                </option>
                <option
                  value={1440}
                >
                  Daily
                </option>
              </ForwardRef>
              <ForwardRef>
                <ForwardRef
                  onClick={[Function]}
                >
                  Save
                </ForwardRef>
              </ForwardRef>
            </React.Fragment>
          </withClickAway(Styled(styled.div))>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Basic Settings",
            "type": "secondary",
          },
          "ref": null,
          "rendered": "Basic Settings",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-cSHVUG",
              "isStatic": false,
              "rules": Array [
                "
  color: ",
                [Function],
                ";
  font-size: ",
                [Function],
                ";
  font-weight: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.h5",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-cSHVUG",
            "target": "h5",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                margin="1rem 0"
                size="large"
              >
                Team
              </ForwardRef>,
              <ForwardRef
                margin="1rem 0"
                size="large"
              >
                New York Mets
              </ForwardRef>,
              <ForwardRef
                margin="1rem 0"
                size="large"
              />,
            ],
            "cols": 3,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Team",
                "margin": "1rem 0",
                "size": "large",
              },
              "ref": null,
              "rendered": "Team",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bsbRJL",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-iQNlJl",
                ],
                "render": [Function],
                "styledComponentId": "sc-bsbRJL",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "New York Mets",
                "margin": "1rem 0",
                "size": "large",
              },
              "ref": null,
              "rendered": "New York Mets",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bsbRJL",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-iQNlJl",
                ],
                "render": [Function],
                "styledComponentId": "sc-bsbRJL",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "margin": "1rem 0",
                "size": "large",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bsbRJL",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-iQNlJl",
                ],
                "render": [Function],
                "styledComponentId": "sc-bsbRJL",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bRBYWo",
              "isStatic": false,
              "rules": Array [
                "
  display: grid;
  grid-template-columns: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
  margin: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bRBYWo",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <ForwardRef
                margin="1rem 0"
                size="large"
              >
                Generate pricing updates every
              </ForwardRef>,
              <React.Fragment>
                <ForwardRef
                  noBg={true}
                  onChange={[Function]}
                  size="large"
                >
                  <option
                    value={15}
                  >
                    15 minutes
                  </option>
                  <option
                    value={30}
                  >
                    30 minutes
                  </option>
                  <option
                    value={60}
                  >
                    1 hour
                  </option>
                  <option
                    value={360}
                  >
                    6 hours
                  </option>
                  <option
                    value={1440}
                  >
                    Daily
                  </option>
                </ForwardRef>
                <ForwardRef>
                  <ForwardRef
                    onClick={[Function]}
                  >
                    Save
                  </ForwardRef>
                </ForwardRef>
              </React.Fragment>,
            ],
            "cols": 3,
            "onClickAway": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Generate pricing updates every",
                "margin": "1rem 0",
                "size": "large",
              },
              "ref": null,
              "rendered": "Generate pricing updates every",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bsbRJL",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                  ],
                },
                "displayName": "Styled(styled.div)",
                "foldedComponentIds": Array [
                  "sc-iQNlJl",
                ],
                "render": [Function],
                "styledComponentId": "sc-bsbRJL",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    noBg={true}
                    onChange={[Function]}
                    size="large"
                  >
                    <option
                      value={15}
                    >
                      15 minutes
                    </option>
                    <option
                      value={30}
                    >
                      30 minutes
                    </option>
                    <option
                      value={60}
                    >
                      1 hour
                    </option>
                    <option
                      value={360}
                    >
                      6 hours
                    </option>
                    <option
                      value={1440}
                    >
                      Daily
                    </option>
                  </ForwardRef>,
                  <ForwardRef>
                    <ForwardRef
                      onClick={[Function]}
                    >
                      Save
                    </ForwardRef>
                  </ForwardRef>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <option
                        value={15}
                      >
                        15 minutes
                      </option>,
                      <option
                        value={30}
                      >
                        30 minutes
                      </option>,
                      <option
                        value={60}
                      >
                        1 hour
                      </option>,
                      <option
                        value={360}
                      >
                        6 hours
                      </option>,
                      <option
                        value={1440}
                      >
                        Daily
                      </option>,
                    ],
                    "noBg": true,
                    "onChange": [Function],
                    "size": "large",
                    "value": undefined,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "0",
                      "nodeType": "host",
                      "props": Object {
                        "children": "15 minutes",
                        "value": 15,
                      },
                      "ref": null,
                      "rendered": "15 minutes",
                      "type": "option",
                    },
                    Object {
                      "instance": null,
                      "key": "1",
                      "nodeType": "host",
                      "props": Object {
                        "children": "30 minutes",
                        "value": 30,
                      },
                      "ref": null,
                      "rendered": "30 minutes",
                      "type": "option",
                    },
                    Object {
                      "instance": null,
                      "key": "2",
                      "nodeType": "host",
                      "props": Object {
                        "children": "1 hour",
                        "value": 60,
                      },
                      "ref": null,
                      "rendered": "1 hour",
                      "type": "option",
                    },
                    Object {
                      "instance": null,
                      "key": "3",
                      "nodeType": "host",
                      "props": Object {
                        "children": "6 hours",
                        "value": 360,
                      },
                      "ref": null,
                      "rendered": "6 hours",
                      "type": "option",
                    },
                    Object {
                      "instance": null,
                      "key": "4",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Daily",
                        "value": 1440,
                      },
                      "ref": null,
                      "rendered": "Daily",
                      "type": "option",
                    },
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-Rmtcm",
                      "isStatic": false,
                      "rules": Array [
                        "
  position: relative;
  height: 3rem;
  width: 45%;
  border: ",
                        [Function],
                        ";
  border-radius: 4px;
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  margin: ",
                        [Function],
                        ";
  padding: ",
                        [Function],
                        ";
  background: ",
                        [Function],
                        ";

  &:focus {
    outline: ",
                        [Function],
                        ";
  }
",
                      ],
                    },
                    "displayName": "styled.select",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-Rmtcm",
                    "target": "select",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef
                      onClick={[Function]}
                    >
                      Save
                    </ForwardRef>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Save",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Save",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        [Function],
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dVhcbM",
                        "isStatic": false,
                        "rules": Array [
                          "
  text-transform: uppercase;
  width: 5.5rem;
  height: 2.875rem;
  border: 2px solid ",
                          "#7CBCDD",
                          ";
  border-radius: 3px;
  color: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
  font-size: 1rem;
  text-align: center;
  margin: 0;
  padding: 0;
  background: ",
                          "#FFFFFF",
                          ";
  cursor: pointer;
  &:hover {
    cursor: ",
                          [Function],
                          ";
    color: ",
                          [Function],
                          ";
    border-color: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "displayName": "styled.button",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dVhcbM",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-eLExRp",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: ",
                        [Function],
                        ";
  flex: ",
                        [Function],
                        ";
  flex-direction: ",
                        [Function],
                        "
  flex-grow: ",
                        [Function],
                        ";
  flex-shrink: ",
                        [Function],
                        ";
  flex-basis: ",
                        [Function],
                        ";
  flex-wrap: ",
                        [Function],
                        ";
  order: ",
                        [Function],
                        ";
  justify-content: ",
                        [Function],
                        ";
  align-items: ",
                        [Function],
                        ";
  align-content: ",
                        [Function],
                        ";
  align-self: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  width: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  justify-content: space-evenly;
  align-items: center;
",
                      ],
                    },
                    "displayName": "Styled(Flex)",
                    "foldedComponentIds": Array [
                      "sc-eNQAEJ",
                      "sc-hMqMXs",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-eLExRp",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Symbol(react.fragment),
            },
          ],
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-lkqHmb",
          "isStatic": false,
          "rules": Array [
            "
  display: ",
            [Function],
            ";
  flex: ",
            [Function],
            ";
  flex-direction: ",
            [Function],
            "
  flex-grow: ",
            [Function],
            ";
  flex-shrink: ",
            [Function],
            ";
  flex-basis: ",
            [Function],
            ";
  flex-wrap: ",
            [Function],
            ";
  order: ",
            [Function],
            ";
  justify-content: ",
            [Function],
            ";
  align-items: ",
            [Function],
            ";
  align-content: ",
            [Function],
            ";
  align-self: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
",
            "
    margin: ",
            [Function],
            ";
    margin-top: ",
            [Function],
            ";
    margin-bottom: ",
            [Function],
            ";
    margin-left: ",
            [Function],
            ";
    margin-right: ",
            [Function],
            ";

    padding: ",
            [Function],
            ";
    padding-top: ",
            [Function],
            ";
    padding-bottom: ",
            [Function],
            ";
    padding-left: ",
            [Function],
            ";
    padding-right: ",
            [Function],
            ";

    border: ",
            [Function],
            ";
    border-top: ",
            [Function],
            ";
    border-bottom: ",
            [Function],
            ";
    border-left: ",
            [Function],
            ";
    border-right: ",
            [Function],
            ";
  ",
            "
  flex-direction: column;
  justify-content: left;
  margin: 0;
  width: 85%;
",
          ],
        },
        "displayName": "Styled(Flex)",
        "foldedComponentIds": Array [
          "sc-eNQAEJ",
          "sc-hMqMXs",
        ],
        "render": [Function],
        "styledComponentId": "sc-lkqHmb",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
