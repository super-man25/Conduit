// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SecondaryPricingRulePresenter /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SecondaryPricingRulePresenter
    constant={null}
    id={1}
    percent={10}
    updateSecondaryPricingRule={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <ForwardRef
        onClick={[Function]}
      />,
      "onClickAway": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "onClick": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-jhAzac",
          "isStatic": false,
          "rules": Array [
            "
  display: flex;
  align-self: center;
  position: relative;
  margin: ",
            [Function],
            ";
  padding: ",
            [Function],
            ";
  font-size: 1rem;
  text-align: center;
  font-size: 1rem;
  cursor: pointer;
",
            "
  color: ",
            "#38A9DB",
            ";
  ::before {
    content: 'EDIT';
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "foldedComponentIds": Array [
          "sc-hzDkRC",
        ],
        "render": [Function],
        "styledComponentId": "sc-jhAzac",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ForwardRef
          onClick={[Function]}
        />,
        "onClickAway": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-jhAzac",
            "isStatic": false,
            "rules": Array [
              "
  display: flex;
  align-self: center;
  position: relative;
  margin: ",
              [Function],
              ";
  padding: ",
              [Function],
              ";
  font-size: 1rem;
  text-align: center;
  font-size: 1rem;
  cursor: pointer;
",
              "
  color: ",
              "#38A9DB",
              ";
  ::before {
    content: 'EDIT';
  }
",
            ],
          },
          "displayName": "Styled(styled.div)",
          "foldedComponentIds": Array [
            "sc-hzDkRC",
          ],
          "render": [Function],
          "styledComponentId": "sc-jhAzac",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
