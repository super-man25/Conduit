// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TeamSettings /> renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TeamSettings
    clientActions={
        Object {
            "fetch": [Function],
            "update": [Function],
          }
    }
    clientState={
        Object {
            "id": 1,
            "name": "New York Mets",
            "pricingInterval": 15,
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.div
        padding="2rem"
>
        <styled.div>
                <styled.div
                        margin="2rem 0"
                >
                        <Breadcrumbs
                                crumbs={
                                        Array [
                                                Object {
                                                  "path": "/dashboard",
                                                  "title": "Dashboard",
                                                },
                                                Object {
                                                  "path": "/settings",
                                                  "title": "Team Settings",
                                                },
                                              ]
                                }
                        />
                </styled.div>
                <styled.h3
                        type="secondary"
                >
                        Team Settings
                </styled.h3>
                <styled.span
                        weight="300"
                >
                        <i>
                                Team Information and settings
                        </i>
                </styled.span>
                <TeamInfo
                        fetch={[Function]}
                        id={1}
                        name="New York Mets"
                        pricingInterval={15}
                        update={[Function]}
                />
                <Connect(TeamIntegrationsContainer) />
        </styled.div>
</styled.div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <styled.div
                    margin="2rem 0"
          >
                    <Breadcrumbs
                              crumbs={
                                        Array [
                                                  Object {
                                                    "path": "/dashboard",
                                                    "title": "Dashboard",
                                                  },
                                                  Object {
                                                    "path": "/settings",
                                                    "title": "Team Settings",
                                                  },
                                                ]
                              }
                    />
          </styled.div>
          <styled.h3
                    type="secondary"
          >
                    Team Settings
          </styled.h3>
          <styled.span
                    weight="300"
          >
                    <i>
                              Team Information and settings
                    </i>
          </styled.span>
          <TeamInfo
                    fetch={[Function]}
                    id={1}
                    name="New York Mets"
                    pricingInterval={15}
                    update={[Function]}
          />
          <Connect(TeamIntegrationsContainer) />
</styled.div>,
        "padding": "2rem",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div
              margin="2rem 0"
>
              <Breadcrumbs
                            crumbs={
                                          Array [
                                                        Object {
                                                          "path": "/dashboard",
                                                          "title": "Dashboard",
                                                        },
                                                        Object {
                                                          "path": "/settings",
                                                          "title": "Team Settings",
                                                        },
                                                      ]
                            }
              />
</styled.div>,
            <styled.h3
              type="secondary"
>
              Team Settings
</styled.h3>,
            <styled.span
              weight="300"
>
              <i>
                            Team Information and settings
              </i>
</styled.span>,
            <TeamInfo
              fetch={[Function]}
              id={1}
              name="New York Mets"
              pricingInterval={15}
              update={[Function]}
/>,
            <Connect(TeamIntegrationsContainer) />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Breadcrumbs
                crumbs={
                                Array [
                                                Object {
                                                  "path": "/dashboard",
                                                  "title": "Dashboard",
                                                },
                                                Object {
                                                  "path": "/settings",
                                                  "title": "Team Settings",
                                                },
                                              ]
                }
/>,
              "margin": "2rem 0",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "crumbs": Array [
                  Object {
                    "path": "/dashboard",
                    "title": "Dashboard",
                  },
                  Object {
                    "path": "/settings",
                    "title": "Team Settings",
                  },
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Team Settings",
              "type": "secondary",
            },
            "ref": null,
            "rendered": "Team Settings",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <i>
                Team Information and settings
</i>,
              "weight": "300",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Team Information and settings",
              },
              "ref": null,
              "rendered": "Team Information and settings",
              "type": "i",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "fetch": [Function],
              "id": 1,
              "name": "New York Mets",
              "pricingInterval": 15,
              "update": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div
          padding="2rem"
>
          <styled.div>
                    <styled.div
                              margin="2rem 0"
                    >
                              <Breadcrumbs
                                        crumbs={
                                                  Array [
                                                            Object {
                                                              "path": "/dashboard",
                                                              "title": "Dashboard",
                                                            },
                                                            Object {
                                                              "path": "/settings",
                                                              "title": "Team Settings",
                                                            },
                                                          ]
                                        }
                              />
                    </styled.div>
                    <styled.h3
                              type="secondary"
                    >
                              Team Settings
                    </styled.h3>
                    <styled.span
                              weight="300"
                    >
                              <i>
                                        Team Information and settings
                              </i>
                    </styled.span>
                    <TeamInfo
                              fetch={[Function]}
                              id={1}
                              name="New York Mets"
                              pricingInterval={15}
                              update={[Function]}
                    />
                    <Connect(TeamIntegrationsContainer) />
          </styled.div>
</styled.div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div>
            <styled.div
                        margin="2rem 0"
            >
                        <Breadcrumbs
                                    crumbs={
                                                Array [
                                                            Object {
                                                              "path": "/dashboard",
                                                              "title": "Dashboard",
                                                            },
                                                            Object {
                                                              "path": "/settings",
                                                              "title": "Team Settings",
                                                            },
                                                          ]
                                    }
                        />
            </styled.div>
            <styled.h3
                        type="secondary"
            >
                        Team Settings
            </styled.h3>
            <styled.span
                        weight="300"
            >
                        <i>
                                    Team Information and settings
                        </i>
            </styled.span>
            <TeamInfo
                        fetch={[Function]}
                        id={1}
                        name="New York Mets"
                        pricingInterval={15}
                        update={[Function]}
            />
            <Connect(TeamIntegrationsContainer) />
</styled.div>,
          "padding": "2rem",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div
                margin="2rem 0"
>
                <Breadcrumbs
                                crumbs={
                                                Array [
                                                                Object {
                                                                  "path": "/dashboard",
                                                                  "title": "Dashboard",
                                                                },
                                                                Object {
                                                                  "path": "/settings",
                                                                  "title": "Team Settings",
                                                                },
                                                              ]
                                }
                />
</styled.div>,
              <styled.h3
                type="secondary"
>
                Team Settings
</styled.h3>,
              <styled.span
                weight="300"
>
                <i>
                                Team Information and settings
                </i>
</styled.span>,
              <TeamInfo
                fetch={[Function]}
                id={1}
                name="New York Mets"
                pricingInterval={15}
                update={[Function]}
/>,
              <Connect(TeamIntegrationsContainer) />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Breadcrumbs
                  crumbs={
                                    Array [
                                                      Object {
                                                        "path": "/dashboard",
                                                        "title": "Dashboard",
                                                      },
                                                      Object {
                                                        "path": "/settings",
                                                        "title": "Team Settings",
                                                      },
                                                    ]
                  }
/>,
                "margin": "2rem 0",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "crumbs": Array [
                    Object {
                      "path": "/dashboard",
                      "title": "Dashboard",
                    },
                    Object {
                      "path": "/settings",
                      "title": "Team Settings",
                    },
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Team Settings",
                "type": "secondary",
              },
              "ref": null,
              "rendered": "Team Settings",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <i>
                  Team Information and settings
</i>,
                "weight": "300",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Team Information and settings",
                },
                "ref": null,
                "rendered": "Team Information and settings",
                "type": "i",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fetch": [Function],
                "id": 1,
                "name": "New York Mets",
                "pricingInterval": 15,
                "update": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
