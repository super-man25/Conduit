// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TeamIntegrations /> render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TeamIntegrations
    handleIntegrationToggle={[MockFunction]}
    handleSecondaryPriceRuleUpdate={[MockFunction]}
    primary={
      Array [
        Object {
          "isActive": true,
          "isPrimary": true,
          "name": "tickets.com",
        },
      ]
    }
    secondary={
      Array [
        Object {
          "isActive": true,
          "isPrimary": false,
          "name": "seatgeek.com",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          <ForwardRef
            type="secondary"
          >
            Integrations
          </ForwardRef>
          <React.Fragment>
            <ForwardRef
              weight="300"
            >
              <i>
                Primary Integration
              </i>
            </ForwardRef>
            <ForwardRef />
            <ForwardRef>
              <Integration
                isActive={true}
                isPrimary={true}
                name="tickets.com"
                onChange={[Function]}
              />
            </ForwardRef>
          </React.Fragment>
        </ForwardRef>,
        <ForwardRef
          marginTop="4rem"
        >
          <React.Fragment>
            <ForwardRef
              weight="300"
            >
              <i>
                Secondary Integrations
              </i>
            </ForwardRef>
            <ForwardRef />
            <ForwardRef>
              <Integration
                isActive={true}
                isPrimary={false}
                name="seatgeek.com"
                onChange={[Function]}
              />
            </ForwardRef>
          </React.Fragment>
        </ForwardRef>,
        null,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              type="secondary"
            >
              Integrations
            </ForwardRef>,
            <React.Fragment>
              <ForwardRef
                weight="300"
              >
                <i>
                  Primary Integration
                </i>
              </ForwardRef>
              <ForwardRef />
              <ForwardRef>
                <Integration
                  isActive={true}
                  isPrimary={true}
                  name="tickets.com"
                  onChange={[Function]}
                />
              </ForwardRef>
            </React.Fragment>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Integrations",
              "type": "secondary",
            },
            "ref": null,
            "rendered": "Integrations",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [
                [Function],
              ],
              "componentStyle": ComponentStyle {
                "componentId": "sc-cSHVUG",
                "isStatic": false,
                "rules": Array [
                  "
  color: ",
                  [Function],
                  ";
  font-size: ",
                  [Function],
                  ";
  font-weight: ",
                  [Function],
                  ";
",
                ],
              },
              "displayName": "styled.h5",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-cSHVUG",
              "target": "h5",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef
                  weight="300"
                >
                  <i>
                    Primary Integration
                  </i>
                </ForwardRef>,
                <ForwardRef />,
                <ForwardRef>
                  <Integration
                    isActive={true}
                    isPrimary={true}
                    name="tickets.com"
                    onChange={[Function]}
                  />
                </ForwardRef>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <i>
                    Primary Integration
                  </i>,
                  "weight": "300",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Primary Integration",
                  },
                  "ref": null,
                  "rendered": "Primary Integration",
                  "type": "i",
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-chPdSV",
                    "isStatic": false,
                    "rules": Array [
                      "
  color: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  font-weight: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-chPdSV",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-kGXeez",
                    "isStatic": false,
                    "rules": Array [
                      "
  width: 100%;
  opacity: 0.5;
  margin: ",
                      [Function],
                      ";
  color: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.hr",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-kGXeez",
                  "target": "hr",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Integration
                      isActive={true}
                      isPrimary={true}
                      name="tickets.com"
                      onChange={[Function]}
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "function",
                    "props": Object {
                      "isActive": true,
                      "isPrimary": true,
                      "name": "tickets.com",
                      "onChange": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-dUjcNx",
                    "isStatic": true,
                    "rules": Array [
                      "
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 3rem 2rem;
  width: 70%;
  margin: 0.5rem 0;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-dUjcNx",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Symbol(react.fragment),
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-dxgOiQ",
            "isStatic": false,
            "rules": Array [
              "
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
            ],
          },
          "displayName": "Styled(styled.div)",
          "foldedComponentIds": Array [
            "sc-kpOJdX",
          ],
          "render": [Function],
          "styledComponentId": "sc-dxgOiQ",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <React.Fragment>
            <ForwardRef
              weight="300"
            >
              <i>
                Secondary Integrations
              </i>
            </ForwardRef>
            <ForwardRef />
            <ForwardRef>
              <Integration
                isActive={true}
                isPrimary={false}
                name="seatgeek.com"
                onChange={[Function]}
              />
            </ForwardRef>
          </React.Fragment>,
          "marginTop": "4rem",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                weight="300"
              >
                <i>
                  Secondary Integrations
                </i>
              </ForwardRef>,
              <ForwardRef />,
              <ForwardRef>
                <Integration
                  isActive={true}
                  isPrimary={false}
                  name="seatgeek.com"
                  onChange={[Function]}
                />
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <i>
                  Secondary Integrations
                </i>,
                "weight": "300",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Secondary Integrations",
                },
                "ref": null,
                "rendered": "Secondary Integrations",
                "type": "i",
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-chPdSV",
                  "isStatic": false,
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  font-size: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-chPdSV",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kGXeez",
                  "isStatic": false,
                  "rules": Array [
                    "
  width: 100%;
  opacity: 0.5;
  margin: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
",
                  ],
                },
                "displayName": "styled.hr",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-kGXeez",
                "target": "hr",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Integration
                    isActive={true}
                    isPrimary={false}
                    name="seatgeek.com"
                    onChange={[Function]}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "function",
                  "props": Object {
                    "isActive": true,
                    "isPrimary": false,
                    "name": "seatgeek.com",
                    "onChange": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dUjcNx",
                  "isStatic": true,
                  "rules": Array [
                    "
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 3rem 2rem;
  width: 70%;
  margin: 0.5rem 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-dUjcNx",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Symbol(react.fragment),
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-dxgOiQ",
            "isStatic": false,
            "rules": Array [
              "
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
",
              "
    margin: ",
              [Function],
              ";
    margin-top: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    margin-left: ",
              [Function],
              ";
    margin-right: ",
              [Function],
              ";

    padding: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    padding-left: ",
              [Function],
              ";
    padding-right: ",
              [Function],
              ";

    border: ",
              [Function],
              ";
    border-top: ",
              [Function],
              ";
    border-bottom: ",
              [Function],
              ";
    border-left: ",
              [Function],
              ";
    border-right: ",
              [Function],
              ";
  ",
            ],
          },
          "displayName": "Styled(styled.div)",
          "foldedComponentIds": Array [
            "sc-kpOJdX",
          ],
          "render": [Function],
          "styledComponentId": "sc-dxgOiQ",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      null,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-fOKMvo",
        "isStatic": false,
        "rules": Array [
          "
  display: ",
          [Function],
          ";
  flex: ",
          [Function],
          ";
  flex-direction: ",
          [Function],
          "
  flex-grow: ",
          [Function],
          ";
  flex-shrink: ",
          [Function],
          ";
  flex-basis: ",
          [Function],
          ";
  flex-wrap: ",
          [Function],
          ";
  order: ",
          [Function],
          ";
  justify-content: ",
          [Function],
          ";
  align-items: ",
          [Function],
          ";
  align-content: ",
          [Function],
          ";
  align-self: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  width: ",
          [Function],
          ";
",
          "
    margin: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
    margin-left: ",
          [Function],
          ";
    margin-right: ",
          [Function],
          ";

    padding: ",
          [Function],
          ";
    padding-top: ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    padding-left: ",
          [Function],
          ";
    padding-right: ",
          [Function],
          ";

    border: ",
          [Function],
          ";
    border-top: ",
          [Function],
          ";
    border-bottom: ",
          [Function],
          ";
    border-left: ",
          [Function],
          ";
    border-right: ",
          [Function],
          ";
  ",
          "
  flex-direction: column;
  justify-content: space-between;
",
        ],
      },
      "displayName": "Styled(Flex)",
      "foldedComponentIds": Array [
        "sc-eNQAEJ",
        "sc-hMqMXs",
      ],
      "render": [Function],
      "styledComponentId": "sc-fOKMvo",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            <ForwardRef
              type="secondary"
            >
              Integrations
            </ForwardRef>
            <React.Fragment>
              <ForwardRef
                weight="300"
              >
                <i>
                  Primary Integration
                </i>
              </ForwardRef>
              <ForwardRef />
              <ForwardRef>
                <Integration
                  isActive={true}
                  isPrimary={true}
                  name="tickets.com"
                  onChange={[Function]}
                />
              </ForwardRef>
            </React.Fragment>
          </ForwardRef>,
          <ForwardRef
            marginTop="4rem"
          >
            <React.Fragment>
              <ForwardRef
                weight="300"
              >
                <i>
                  Secondary Integrations
                </i>
              </ForwardRef>
              <ForwardRef />
              <ForwardRef>
                <Integration
                  isActive={true}
                  isPrimary={false}
                  name="seatgeek.com"
                  onChange={[Function]}
                />
              </ForwardRef>
            </React.Fragment>
          </ForwardRef>,
          null,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                type="secondary"
              >
                Integrations
              </ForwardRef>,
              <React.Fragment>
                <ForwardRef
                  weight="300"
                >
                  <i>
                    Primary Integration
                  </i>
                </ForwardRef>
                <ForwardRef />
                <ForwardRef>
                  <Integration
                    isActive={true}
                    isPrimary={true}
                    name="tickets.com"
                    onChange={[Function]}
                  />
                </ForwardRef>
              </React.Fragment>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Integrations",
                "type": "secondary",
              },
              "ref": null,
              "rendered": "Integrations",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-cSHVUG",
                  "isStatic": false,
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  font-size: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
",
                  ],
                },
                "displayName": "styled.h5",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-cSHVUG",
                "target": "h5",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    weight="300"
                  >
                    <i>
                      Primary Integration
                    </i>
                  </ForwardRef>,
                  <ForwardRef />,
                  <ForwardRef>
                    <Integration
                      isActive={true}
                      isPrimary={true}
                      name="tickets.com"
                      onChange={[Function]}
                    />
                  </ForwardRef>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <i>
                      Primary Integration
                    </i>,
                    "weight": "300",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Primary Integration",
                    },
                    "ref": null,
                    "rendered": "Primary Integration",
                    "type": "i",
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-chPdSV",
                      "isStatic": false,
                      "rules": Array [
                        "
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
",
                      ],
                    },
                    "displayName": "styled.span",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-chPdSV",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-kGXeez",
                      "isStatic": false,
                      "rules": Array [
                        "
  width: 100%;
  opacity: 0.5;
  margin: ",
                        [Function],
                        ";
  color: ",
                        [Function],
                        ";
",
                      ],
                    },
                    "displayName": "styled.hr",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-kGXeez",
                    "target": "hr",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <Integration
                        isActive={true}
                        isPrimary={true}
                        name="tickets.com"
                        onChange={[Function]}
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "0",
                      "nodeType": "function",
                      "props": Object {
                        "isActive": true,
                        "isPrimary": true,
                        "name": "tickets.com",
                        "onChange": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-dUjcNx",
                      "isStatic": true,
                      "rules": Array [
                        "
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 3rem 2rem;
  width: 70%;
  margin: 0.5rem 0;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-dUjcNx",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Symbol(react.fragment),
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-dxgOiQ",
              "isStatic": false,
              "rules": Array [
                "
  width: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Styled(styled.div)",
            "foldedComponentIds": Array [
              "sc-kpOJdX",
            ],
            "render": [Function],
            "styledComponentId": "sc-dxgOiQ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <React.Fragment>
              <ForwardRef
                weight="300"
              >
                <i>
                  Secondary Integrations
                </i>
              </ForwardRef>
              <ForwardRef />
              <ForwardRef>
                <Integration
                  isActive={true}
                  isPrimary={false}
                  name="seatgeek.com"
                  onChange={[Function]}
                />
              </ForwardRef>
            </React.Fragment>,
            "marginTop": "4rem",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef
                  weight="300"
                >
                  <i>
                    Secondary Integrations
                  </i>
                </ForwardRef>,
                <ForwardRef />,
                <ForwardRef>
                  <Integration
                    isActive={true}
                    isPrimary={false}
                    name="seatgeek.com"
                    onChange={[Function]}
                  />
                </ForwardRef>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <i>
                    Secondary Integrations
                  </i>,
                  "weight": "300",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Secondary Integrations",
                  },
                  "ref": null,
                  "rendered": "Secondary Integrations",
                  "type": "i",
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-chPdSV",
                    "isStatic": false,
                    "rules": Array [
                      "
  color: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  font-weight: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-chPdSV",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-kGXeez",
                    "isStatic": false,
                    "rules": Array [
                      "
  width: 100%;
  opacity: 0.5;
  margin: ",
                      [Function],
                      ";
  color: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.hr",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-kGXeez",
                  "target": "hr",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Integration
                      isActive={true}
                      isPrimary={false}
                      name="seatgeek.com"
                      onChange={[Function]}
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "function",
                    "props": Object {
                      "isActive": true,
                      "isPrimary": false,
                      "name": "seatgeek.com",
                      "onChange": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-dUjcNx",
                    "isStatic": true,
                    "rules": Array [
                      "
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 3rem 2rem;
  width: 70%;
  margin: 0.5rem 0;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-dUjcNx",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Symbol(react.fragment),
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-dxgOiQ",
              "isStatic": false,
              "rules": Array [
                "
  width: ",
                [Function],
                ";
  height: ",
                [Function],
                ";
",
                "
    margin: ",
                [Function],
                ";
    margin-top: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    margin-left: ",
                [Function],
                ";
    margin-right: ",
                [Function],
                ";

    padding: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    padding-left: ",
                [Function],
                ";
    padding-right: ",
                [Function],
                ";

    border: ",
                [Function],
                ";
    border-top: ",
                [Function],
                ";
    border-bottom: ",
                [Function],
                ";
    border-left: ",
                [Function],
                ";
    border-right: ",
                [Function],
                ";
  ",
              ],
            },
            "displayName": "Styled(styled.div)",
            "foldedComponentIds": Array [
              "sc-kpOJdX",
            ],
            "render": [Function],
            "styledComponentId": "sc-dxgOiQ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        null,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-fOKMvo",
          "isStatic": false,
          "rules": Array [
            "
  display: ",
            [Function],
            ";
  flex: ",
            [Function],
            ";
  flex-direction: ",
            [Function],
            "
  flex-grow: ",
            [Function],
            ";
  flex-shrink: ",
            [Function],
            ";
  flex-basis: ",
            [Function],
            ";
  flex-wrap: ",
            [Function],
            ";
  order: ",
            [Function],
            ";
  justify-content: ",
            [Function],
            ";
  align-items: ",
            [Function],
            ";
  align-content: ",
            [Function],
            ";
  align-self: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
",
            "
    margin: ",
            [Function],
            ";
    margin-top: ",
            [Function],
            ";
    margin-bottom: ",
            [Function],
            ";
    margin-left: ",
            [Function],
            ";
    margin-right: ",
            [Function],
            ";

    padding: ",
            [Function],
            ";
    padding-top: ",
            [Function],
            ";
    padding-bottom: ",
            [Function],
            ";
    padding-left: ",
            [Function],
            ";
    padding-right: ",
            [Function],
            ";

    border: ",
            [Function],
            ";
    border-top: ",
            [Function],
            ";
    border-bottom: ",
            [Function],
            ";
    border-left: ",
            [Function],
            ";
    border-right: ",
            [Function],
            ";
  ",
            "
  flex-direction: column;
  justify-content: space-between;
",
          ],
        },
        "displayName": "Styled(Flex)",
        "foldedComponentIds": Array [
          "sc-eNQAEJ",
          "sc-hMqMXs",
        ],
        "render": [Function],
        "styledComponentId": "sc-fOKMvo",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
