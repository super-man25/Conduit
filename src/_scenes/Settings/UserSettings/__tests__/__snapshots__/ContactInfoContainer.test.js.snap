// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ContactInfo /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ContactInfo
    authState={
      Object {
        "model": Object {
          "clientId": 1,
          "createdAt": null,
          "email": "test@eventdynamic.com",
          "firstName": "First",
          "id": 1,
          "lastName": "Last",
          "modifiedAt": null,
          "phoneNumber": "",
        },
      }
    }
    userActions={
      Object {
        "changePassword": [MockFunction],
        "update": [MockFunction],
        "updateEmail": [MockFunction],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <ForwardRef
          type="secondary"
        >
          Basic Settings
        </ForwardRef>,
        <br />,
        <ForwardRef
          cols={3}
          id="editName"
        >
          <ForwardRef>
            Name
          </ForwardRef>
          <React.Fragment>
            <ForwardRef>
              <ForwardRef
                data-test-id="full-name-text"
              >
                First Last
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              data-test-id="edit-name-button"
              onClick={[Function]}
            />
          </React.Fragment>
        </ForwardRef>,
        <ForwardRef
          margin="1rem 0"
        />,
        <ForwardRef
          cols={3}
          id="editEmail"
        >
          <ForwardRef>
            Contact Email
          </ForwardRef>
          <React.Fragment>
            <ForwardRef>
              test@eventdynamic.com
            </ForwardRef>
            <ForwardRef
              onClick={[Function]}
            />
          </React.Fragment>
        </ForwardRef>,
        <ForwardRef
          margin="1rem 0"
        />,
        <ForwardRef
          cols={3}
          id="editPhoneNumber"
        >
          <ForwardRef
            data-test-id="phone-number-text"
          >
            Phone Number
          </ForwardRef>
          <React.Fragment>
            <ForwardRef>
              <ForwardRef>
                
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              data-test-id="edit-phone-number-button"
              onClick={[Function]}
            />
          </React.Fragment>
        </ForwardRef>,
        <ForwardRef
          margin="1rem 0"
        />,
        <ForwardRef
          cols={3}
          id="editPassword"
        >
          <ForwardRef>
            Change Password
          </ForwardRef>
          <React.Fragment>
            <ForwardRef>
              <ForwardRef>
                xxxxxxxxxx
              </ForwardRef>
            </ForwardRef>
            <ForwardRef
              onClick={[Function]}
            />
          </React.Fragment>
        </ForwardRef>,
      ],
      "onClickAway": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Basic Settings",
          "type": "secondary",
        },
        "ref": null,
        "rendered": "Basic Settings",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-cSHVUG",
            "isStatic": false,
            "rules": Array [
              "
  color: ",
              [Function],
              ";
  font-size: ",
              [Function],
              ";
  font-weight: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.h5",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-cSHVUG",
          "target": "h5",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef>
              Name
            </ForwardRef>,
            <React.Fragment>
              <ForwardRef>
                <ForwardRef
                  data-test-id="full-name-text"
                >
                  First Last
                </ForwardRef>
              </ForwardRef>
              <ForwardRef
                data-test-id="edit-name-button"
                onClick={[Function]}
              />
            </React.Fragment>,
          ],
          "cols": 3,
          "id": "editName",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Name",
            },
            "ref": null,
            "rendered": "Name",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-krvtoX",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-weight: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                  "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                ],
              },
              "displayName": "Styled(Styled(styled.div))",
              "foldedComponentIds": Array [
                "sc-iQNlJl",
                "sc-bsbRJL",
              ],
              "render": [Function],
              "styledComponentId": "sc-krvtoX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  <ForwardRef
                    data-test-id="full-name-text"
                  >
                    First Last
                  </ForwardRef>
                </ForwardRef>,
                <ForwardRef
                  data-test-id="edit-name-button"
                  onClick={[Function]}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    data-test-id="full-name-text"
                  >
                    First Last
                  </ForwardRef>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "First Last",
                    "data-test-id": "full-name-text",
                  },
                  "ref": null,
                  "rendered": "First Last",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-krvtoX",
                      "isStatic": false,
                      "rules": Array [
                        "
  font-size: ",
                        [Function],
                        ";
  color: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
  margin: ",
                        [Function],
                        ";
  padding: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                      ],
                    },
                    "displayName": "Styled(Styled(styled.div))",
                    "foldedComponentIds": Array [
                      "sc-iQNlJl",
                      "sc-bsbRJL",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-krvtoX",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-cbkKFq",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  align-items: start;
  flex-direction: column;
",
                    ],
                  },
                  "displayName": "Styled(Flex)",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                    "sc-hMqMXs",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-cbkKFq",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "data-test-id": "edit-name-button",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jhAzac",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: flex;
  align-self: center;
  position: relative;
  margin: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
  font-size: 1rem;
  text-align: center;
  font-size: 1rem;
  cursor: pointer;
",
                      "
  color: ",
                      "#38A9DB",
                      ";
  ::before {
    content: 'EDIT';
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-hzDkRC",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-jhAzac",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Symbol(react.fragment),
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bRBYWo",
            "isStatic": false,
            "rules": Array [
              "
  display: grid;
  grid-template-columns: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
  margin: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bRBYWo",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "margin": "1rem 0",
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-ksYbfQ",
            "isStatic": false,
            "rules": Array [
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-ksYbfQ",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef>
              Contact Email
            </ForwardRef>,
            <React.Fragment>
              <ForwardRef>
                test@eventdynamic.com
              </ForwardRef>
              <ForwardRef
                onClick={[Function]}
              />
            </React.Fragment>,
          ],
          "cols": 3,
          "id": "editEmail",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Contact Email",
            },
            "ref": null,
            "rendered": "Contact Email",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-krvtoX",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-weight: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                  "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                ],
              },
              "displayName": "Styled(Styled(styled.div))",
              "foldedComponentIds": Array [
                "sc-iQNlJl",
                "sc-bsbRJL",
              ],
              "render": [Function],
              "styledComponentId": "sc-krvtoX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  test@eventdynamic.com
                </ForwardRef>,
                <ForwardRef
                  onClick={[Function]}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "test@eventdynamic.com",
                },
                "ref": null,
                "rendered": "test@eventdynamic.com",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-krvtoX",
                    "isStatic": false,
                    "rules": Array [
                      "
  font-size: ",
                      [Function],
                      ";
  color: ",
                      [Function],
                      ";
  font-weight: ",
                      [Function],
                      ";
  margin: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                    ],
                  },
                  "displayName": "Styled(Styled(styled.div))",
                  "foldedComponentIds": Array [
                    "sc-iQNlJl",
                    "sc-bsbRJL",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-krvtoX",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jhAzac",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: flex;
  align-self: center;
  position: relative;
  margin: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
  font-size: 1rem;
  text-align: center;
  font-size: 1rem;
  cursor: pointer;
",
                      "
  color: ",
                      "#38A9DB",
                      ";
  ::before {
    content: 'EDIT';
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-hzDkRC",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-jhAzac",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Symbol(react.fragment),
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bRBYWo",
            "isStatic": false,
            "rules": Array [
              "
  display: grid;
  grid-template-columns: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
  margin: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bRBYWo",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "margin": "1rem 0",
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-ksYbfQ",
            "isStatic": false,
            "rules": Array [
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-ksYbfQ",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              data-test-id="phone-number-text"
            >
              Phone Number
            </ForwardRef>,
            <React.Fragment>
              <ForwardRef>
                <ForwardRef>
                  
                </ForwardRef>
              </ForwardRef>
              <ForwardRef
                data-test-id="edit-phone-number-button"
                onClick={[Function]}
              />
            </React.Fragment>,
          ],
          "cols": 3,
          "id": "editPhoneNumber",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Phone Number",
              "data-test-id": "phone-number-text",
            },
            "ref": null,
            "rendered": "Phone Number",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-krvtoX",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-weight: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                  "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                ],
              },
              "displayName": "Styled(Styled(styled.div))",
              "foldedComponentIds": Array [
                "sc-iQNlJl",
                "sc-bsbRJL",
              ],
              "render": [Function],
              "styledComponentId": "sc-krvtoX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  <ForwardRef>
                    
                  </ForwardRef>
                </ForwardRef>,
                <ForwardRef
                  data-test-id="edit-phone-number-button"
                  onClick={[Function]}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef>
                    
                  </ForwardRef>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "",
                  },
                  "ref": null,
                  "rendered": "",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-krvtoX",
                      "isStatic": false,
                      "rules": Array [
                        "
  font-size: ",
                        [Function],
                        ";
  color: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
  margin: ",
                        [Function],
                        ";
  padding: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                      ],
                    },
                    "displayName": "Styled(Styled(styled.div))",
                    "foldedComponentIds": Array [
                      "sc-iQNlJl",
                      "sc-bsbRJL",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-krvtoX",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-cbkKFq",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  align-items: start;
  flex-direction: column;
",
                    ],
                  },
                  "displayName": "Styled(Flex)",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                    "sc-hMqMXs",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-cbkKFq",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "data-test-id": "edit-phone-number-button",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jhAzac",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: flex;
  align-self: center;
  position: relative;
  margin: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
  font-size: 1rem;
  text-align: center;
  font-size: 1rem;
  cursor: pointer;
",
                      "
  color: ",
                      "#38A9DB",
                      ";
  ::before {
    content: 'EDIT';
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-hzDkRC",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-jhAzac",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Symbol(react.fragment),
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bRBYWo",
            "isStatic": false,
            "rules": Array [
              "
  display: grid;
  grid-template-columns: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
  margin: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bRBYWo",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "margin": "1rem 0",
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-ksYbfQ",
            "isStatic": false,
            "rules": Array [
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
  ",
              [Function],
              "
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-ksYbfQ",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef>
              Change Password
            </ForwardRef>,
            <React.Fragment>
              <ForwardRef>
                <ForwardRef>
                  xxxxxxxxxx
                </ForwardRef>
              </ForwardRef>
              <ForwardRef
                onClick={[Function]}
              />
            </React.Fragment>,
          ],
          "cols": 3,
          "id": "editPassword",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Change Password",
            },
            "ref": null,
            "rendered": "Change Password",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-krvtoX",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  font-weight: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
",
                  "
    margin: ",
                  [Function],
                  ";
    margin-top: ",
                  [Function],
                  ";
    margin-bottom: ",
                  [Function],
                  ";
    margin-left: ",
                  [Function],
                  ";
    margin-right: ",
                  [Function],
                  ";

    padding: ",
                  [Function],
                  ";
    padding-top: ",
                  [Function],
                  ";
    padding-bottom: ",
                  [Function],
                  ";
    padding-left: ",
                  [Function],
                  ";
    padding-right: ",
                  [Function],
                  ";

    border: ",
                  [Function],
                  ";
    border-top: ",
                  [Function],
                  ";
    border-bottom: ",
                  [Function],
                  ";
    border-left: ",
                  [Function],
                  ";
    border-right: ",
                  [Function],
                  ";
  ",
                  "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                ],
              },
              "displayName": "Styled(Styled(styled.div))",
              "foldedComponentIds": Array [
                "sc-iQNlJl",
                "sc-bsbRJL",
              ],
              "render": [Function],
              "styledComponentId": "sc-krvtoX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef>
                  <ForwardRef>
                    xxxxxxxxxx
                  </ForwardRef>
                </ForwardRef>,
                <ForwardRef
                  onClick={[Function]}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef>
                    xxxxxxxxxx
                  </ForwardRef>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "xxxxxxxxxx",
                  },
                  "ref": null,
                  "rendered": "xxxxxxxxxx",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-krvtoX",
                      "isStatic": false,
                      "rules": Array [
                        "
  font-size: ",
                        [Function],
                        ";
  color: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
  margin: ",
                        [Function],
                        ";
  padding: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                      ],
                    },
                    "displayName": "Styled(Styled(styled.div))",
                    "foldedComponentIds": Array [
                      "sc-iQNlJl",
                      "sc-bsbRJL",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-krvtoX",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-cbkKFq",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                      "
  align-items: start;
  flex-direction: column;
",
                    ],
                  },
                  "displayName": "Styled(Flex)",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                    "sc-hMqMXs",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-cbkKFq",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jhAzac",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: flex;
  align-self: center;
  position: relative;
  margin: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
  font-size: 1rem;
  text-align: center;
  font-size: 1rem;
  cursor: pointer;
",
                      "
  color: ",
                      "#38A9DB",
                      ";
  ::before {
    content: 'EDIT';
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-hzDkRC",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-jhAzac",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Symbol(react.fragment),
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bRBYWo",
            "isStatic": false,
            "rules": Array [
              "
  display: grid;
  grid-template-columns: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
  margin: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bRBYWo",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <ForwardRef
            type="secondary"
          >
            Basic Settings
          </ForwardRef>,
          <br />,
          <ForwardRef
            cols={3}
            id="editName"
          >
            <ForwardRef>
              Name
            </ForwardRef>
            <React.Fragment>
              <ForwardRef>
                <ForwardRef
                  data-test-id="full-name-text"
                >
                  First Last
                </ForwardRef>
              </ForwardRef>
              <ForwardRef
                data-test-id="edit-name-button"
                onClick={[Function]}
              />
            </React.Fragment>
          </ForwardRef>,
          <ForwardRef
            margin="1rem 0"
          />,
          <ForwardRef
            cols={3}
            id="editEmail"
          >
            <ForwardRef>
              Contact Email
            </ForwardRef>
            <React.Fragment>
              <ForwardRef>
                test@eventdynamic.com
              </ForwardRef>
              <ForwardRef
                onClick={[Function]}
              />
            </React.Fragment>
          </ForwardRef>,
          <ForwardRef
            margin="1rem 0"
          />,
          <ForwardRef
            cols={3}
            id="editPhoneNumber"
          >
            <ForwardRef
              data-test-id="phone-number-text"
            >
              Phone Number
            </ForwardRef>
            <React.Fragment>
              <ForwardRef>
                <ForwardRef>
                  
                </ForwardRef>
              </ForwardRef>
              <ForwardRef
                data-test-id="edit-phone-number-button"
                onClick={[Function]}
              />
            </React.Fragment>
          </ForwardRef>,
          <ForwardRef
            margin="1rem 0"
          />,
          <ForwardRef
            cols={3}
            id="editPassword"
          >
            <ForwardRef>
              Change Password
            </ForwardRef>
            <React.Fragment>
              <ForwardRef>
                <ForwardRef>
                  xxxxxxxxxx
                </ForwardRef>
              </ForwardRef>
              <ForwardRef
                onClick={[Function]}
              />
            </React.Fragment>
          </ForwardRef>,
        ],
        "onClickAway": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Basic Settings",
            "type": "secondary",
          },
          "ref": null,
          "rendered": "Basic Settings",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-cSHVUG",
              "isStatic": false,
              "rules": Array [
                "
  color: ",
                [Function],
                ";
  font-size: ",
                [Function],
                ";
  font-weight: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.h5",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-cSHVUG",
            "target": "h5",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                Name
              </ForwardRef>,
              <React.Fragment>
                <ForwardRef>
                  <ForwardRef
                    data-test-id="full-name-text"
                  >
                    First Last
                  </ForwardRef>
                </ForwardRef>
                <ForwardRef
                  data-test-id="edit-name-button"
                  onClick={[Function]}
                />
              </React.Fragment>,
            ],
            "cols": 3,
            "id": "editName",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Name",
              },
              "ref": null,
              "rendered": "Name",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-krvtoX",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                    "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                  ],
                },
                "displayName": "Styled(Styled(styled.div))",
                "foldedComponentIds": Array [
                  "sc-iQNlJl",
                  "sc-bsbRJL",
                ],
                "render": [Function],
                "styledComponentId": "sc-krvtoX",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef>
                    <ForwardRef
                      data-test-id="full-name-text"
                    >
                      First Last
                    </ForwardRef>
                  </ForwardRef>,
                  <ForwardRef
                    data-test-id="edit-name-button"
                    onClick={[Function]}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef
                      data-test-id="full-name-text"
                    >
                      First Last
                    </ForwardRef>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "First Last",
                      "data-test-id": "full-name-text",
                    },
                    "ref": null,
                    "rendered": "First Last",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-krvtoX",
                        "isStatic": false,
                        "rules": Array [
                          "
  font-size: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  font-weight: ",
                          [Function],
                          ";
  margin: ",
                          [Function],
                          ";
  padding: ",
                          [Function],
                          ";
",
                          "
    margin: ",
                          [Function],
                          ";
    margin-top: ",
                          [Function],
                          ";
    margin-bottom: ",
                          [Function],
                          ";
    margin-left: ",
                          [Function],
                          ";
    margin-right: ",
                          [Function],
                          ";

    padding: ",
                          [Function],
                          ";
    padding-top: ",
                          [Function],
                          ";
    padding-bottom: ",
                          [Function],
                          ";
    padding-left: ",
                          [Function],
                          ";
    padding-right: ",
                          [Function],
                          ";

    border: ",
                          [Function],
                          ";
    border-top: ",
                          [Function],
                          ";
    border-bottom: ",
                          [Function],
                          ";
    border-left: ",
                          [Function],
                          ";
    border-right: ",
                          [Function],
                          ";
  ",
                          "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-iQNlJl",
                        "sc-bsbRJL",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-krvtoX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-cbkKFq",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: ",
                        [Function],
                        ";
  flex: ",
                        [Function],
                        ";
  flex-direction: ",
                        [Function],
                        "
  flex-grow: ",
                        [Function],
                        ";
  flex-shrink: ",
                        [Function],
                        ";
  flex-basis: ",
                        [Function],
                        ";
  flex-wrap: ",
                        [Function],
                        ";
  order: ",
                        [Function],
                        ";
  justify-content: ",
                        [Function],
                        ";
  align-items: ",
                        [Function],
                        ";
  align-content: ",
                        [Function],
                        ";
  align-self: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  width: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  align-items: start;
  flex-direction: column;
",
                      ],
                    },
                    "displayName": "Styled(Flex)",
                    "foldedComponentIds": Array [
                      "sc-eNQAEJ",
                      "sc-hMqMXs",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-cbkKFq",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "data-test-id": "edit-name-button",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-jhAzac",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: flex;
  align-self: center;
  position: relative;
  margin: ",
                        [Function],
                        ";
  padding: ",
                        [Function],
                        ";
  font-size: 1rem;
  text-align: center;
  font-size: 1rem;
  cursor: pointer;
",
                        "
  color: ",
                        "#38A9DB",
                        ";
  ::before {
    content: 'EDIT';
  }
",
                      ],
                    },
                    "displayName": "Styled(styled.div)",
                    "foldedComponentIds": Array [
                      "sc-hzDkRC",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-jhAzac",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Symbol(react.fragment),
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bRBYWo",
              "isStatic": false,
              "rules": Array [
                "
  display: grid;
  grid-template-columns: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
  margin: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bRBYWo",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "margin": "1rem 0",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ksYbfQ",
              "isStatic": false,
              "rules": Array [
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ksYbfQ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                Contact Email
              </ForwardRef>,
              <React.Fragment>
                <ForwardRef>
                  test@eventdynamic.com
                </ForwardRef>
                <ForwardRef
                  onClick={[Function]}
                />
              </React.Fragment>,
            ],
            "cols": 3,
            "id": "editEmail",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Contact Email",
              },
              "ref": null,
              "rendered": "Contact Email",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-krvtoX",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                    "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                  ],
                },
                "displayName": "Styled(Styled(styled.div))",
                "foldedComponentIds": Array [
                  "sc-iQNlJl",
                  "sc-bsbRJL",
                ],
                "render": [Function],
                "styledComponentId": "sc-krvtoX",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef>
                    test@eventdynamic.com
                  </ForwardRef>,
                  <ForwardRef
                    onClick={[Function]}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "test@eventdynamic.com",
                  },
                  "ref": null,
                  "rendered": "test@eventdynamic.com",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-krvtoX",
                      "isStatic": false,
                      "rules": Array [
                        "
  font-size: ",
                        [Function],
                        ";
  color: ",
                        [Function],
                        ";
  font-weight: ",
                        [Function],
                        ";
  margin: ",
                        [Function],
                        ";
  padding: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                      ],
                    },
                    "displayName": "Styled(Styled(styled.div))",
                    "foldedComponentIds": Array [
                      "sc-iQNlJl",
                      "sc-bsbRJL",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-krvtoX",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-jhAzac",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: flex;
  align-self: center;
  position: relative;
  margin: ",
                        [Function],
                        ";
  padding: ",
                        [Function],
                        ";
  font-size: 1rem;
  text-align: center;
  font-size: 1rem;
  cursor: pointer;
",
                        "
  color: ",
                        "#38A9DB",
                        ";
  ::before {
    content: 'EDIT';
  }
",
                      ],
                    },
                    "displayName": "Styled(styled.div)",
                    "foldedComponentIds": Array [
                      "sc-hzDkRC",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-jhAzac",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Symbol(react.fragment),
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bRBYWo",
              "isStatic": false,
              "rules": Array [
                "
  display: grid;
  grid-template-columns: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
  margin: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bRBYWo",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "margin": "1rem 0",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ksYbfQ",
              "isStatic": false,
              "rules": Array [
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ksYbfQ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                data-test-id="phone-number-text"
              >
                Phone Number
              </ForwardRef>,
              <React.Fragment>
                <ForwardRef>
                  <ForwardRef>
                    
                  </ForwardRef>
                </ForwardRef>
                <ForwardRef
                  data-test-id="edit-phone-number-button"
                  onClick={[Function]}
                />
              </React.Fragment>,
            ],
            "cols": 3,
            "id": "editPhoneNumber",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Phone Number",
                "data-test-id": "phone-number-text",
              },
              "ref": null,
              "rendered": "Phone Number",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-krvtoX",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                    "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                  ],
                },
                "displayName": "Styled(Styled(styled.div))",
                "foldedComponentIds": Array [
                  "sc-iQNlJl",
                  "sc-bsbRJL",
                ],
                "render": [Function],
                "styledComponentId": "sc-krvtoX",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef>
                    <ForwardRef>
                      
                    </ForwardRef>
                  </ForwardRef>,
                  <ForwardRef
                    data-test-id="edit-phone-number-button"
                    onClick={[Function]}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef>
                      
                    </ForwardRef>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "",
                    },
                    "ref": null,
                    "rendered": "",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-krvtoX",
                        "isStatic": false,
                        "rules": Array [
                          "
  font-size: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  font-weight: ",
                          [Function],
                          ";
  margin: ",
                          [Function],
                          ";
  padding: ",
                          [Function],
                          ";
",
                          "
    margin: ",
                          [Function],
                          ";
    margin-top: ",
                          [Function],
                          ";
    margin-bottom: ",
                          [Function],
                          ";
    margin-left: ",
                          [Function],
                          ";
    margin-right: ",
                          [Function],
                          ";

    padding: ",
                          [Function],
                          ";
    padding-top: ",
                          [Function],
                          ";
    padding-bottom: ",
                          [Function],
                          ";
    padding-left: ",
                          [Function],
                          ";
    padding-right: ",
                          [Function],
                          ";

    border: ",
                          [Function],
                          ";
    border-top: ",
                          [Function],
                          ";
    border-bottom: ",
                          [Function],
                          ";
    border-left: ",
                          [Function],
                          ";
    border-right: ",
                          [Function],
                          ";
  ",
                          "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-iQNlJl",
                        "sc-bsbRJL",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-krvtoX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-cbkKFq",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: ",
                        [Function],
                        ";
  flex: ",
                        [Function],
                        ";
  flex-direction: ",
                        [Function],
                        "
  flex-grow: ",
                        [Function],
                        ";
  flex-shrink: ",
                        [Function],
                        ";
  flex-basis: ",
                        [Function],
                        ";
  flex-wrap: ",
                        [Function],
                        ";
  order: ",
                        [Function],
                        ";
  justify-content: ",
                        [Function],
                        ";
  align-items: ",
                        [Function],
                        ";
  align-content: ",
                        [Function],
                        ";
  align-self: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  width: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  align-items: start;
  flex-direction: column;
",
                      ],
                    },
                    "displayName": "Styled(Flex)",
                    "foldedComponentIds": Array [
                      "sc-eNQAEJ",
                      "sc-hMqMXs",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-cbkKFq",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "data-test-id": "edit-phone-number-button",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-jhAzac",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: flex;
  align-self: center;
  position: relative;
  margin: ",
                        [Function],
                        ";
  padding: ",
                        [Function],
                        ";
  font-size: 1rem;
  text-align: center;
  font-size: 1rem;
  cursor: pointer;
",
                        "
  color: ",
                        "#38A9DB",
                        ";
  ::before {
    content: 'EDIT';
  }
",
                      ],
                    },
                    "displayName": "Styled(styled.div)",
                    "foldedComponentIds": Array [
                      "sc-hzDkRC",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-jhAzac",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Symbol(react.fragment),
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bRBYWo",
              "isStatic": false,
              "rules": Array [
                "
  display: grid;
  grid-template-columns: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
  margin: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bRBYWo",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "margin": "1rem 0",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ksYbfQ",
              "isStatic": false,
              "rules": Array [
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ksYbfQ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                Change Password
              </ForwardRef>,
              <React.Fragment>
                <ForwardRef>
                  <ForwardRef>
                    xxxxxxxxxx
                  </ForwardRef>
                </ForwardRef>
                <ForwardRef
                  onClick={[Function]}
                />
              </React.Fragment>,
            ],
            "cols": 3,
            "id": "editPassword",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Change Password",
              },
              "ref": null,
              "rendered": "Change Password",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-krvtoX",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  font-weight: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
",
                    "
    margin: ",
                    [Function],
                    ";
    margin-top: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    margin-left: ",
                    [Function],
                    ";
    margin-right: ",
                    [Function],
                    ";

    padding: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    padding-left: ",
                    [Function],
                    ";
    padding-right: ",
                    [Function],
                    ";

    border: ",
                    [Function],
                    ";
    border-top: ",
                    [Function],
                    ";
    border-bottom: ",
                    [Function],
                    ";
    border-left: ",
                    [Function],
                    ";
    border-right: ",
                    [Function],
                    ";
  ",
                    "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                  ],
                },
                "displayName": "Styled(Styled(styled.div))",
                "foldedComponentIds": Array [
                  "sc-iQNlJl",
                  "sc-bsbRJL",
                ],
                "render": [Function],
                "styledComponentId": "sc-krvtoX",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef>
                    <ForwardRef>
                      xxxxxxxxxx
                    </ForwardRef>
                  </ForwardRef>,
                  <ForwardRef
                    onClick={[Function]}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef>
                      xxxxxxxxxx
                    </ForwardRef>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "xxxxxxxxxx",
                    },
                    "ref": null,
                    "rendered": "xxxxxxxxxx",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-krvtoX",
                        "isStatic": false,
                        "rules": Array [
                          "
  font-size: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  font-weight: ",
                          [Function],
                          ";
  margin: ",
                          [Function],
                          ";
  padding: ",
                          [Function],
                          ";
",
                          "
    margin: ",
                          [Function],
                          ";
    margin-top: ",
                          [Function],
                          ";
    margin-bottom: ",
                          [Function],
                          ";
    margin-left: ",
                          [Function],
                          ";
    margin-right: ",
                          [Function],
                          ";

    padding: ",
                          [Function],
                          ";
    padding-top: ",
                          [Function],
                          ";
    padding-bottom: ",
                          [Function],
                          ";
    padding-left: ",
                          [Function],
                          ";
    padding-right: ",
                          [Function],
                          ";

    border: ",
                          [Function],
                          ";
    border-top: ",
                          [Function],
                          ";
    border-bottom: ",
                          [Function],
                          ";
    border-left: ",
                          [Function],
                          ";
    border-right: ",
                          [Function],
                          ";
  ",
                          "
  font-size: 1.2rem;
  margin: '1rem 0';
",
                        ],
                      },
                      "displayName": "Styled(Styled(styled.div))",
                      "foldedComponentIds": Array [
                        "sc-iQNlJl",
                        "sc-bsbRJL",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-krvtoX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-cbkKFq",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: ",
                        [Function],
                        ";
  flex: ",
                        [Function],
                        ";
  flex-direction: ",
                        [Function],
                        "
  flex-grow: ",
                        [Function],
                        ";
  flex-shrink: ",
                        [Function],
                        ";
  flex-basis: ",
                        [Function],
                        ";
  flex-wrap: ",
                        [Function],
                        ";
  order: ",
                        [Function],
                        ";
  justify-content: ",
                        [Function],
                        ";
  align-items: ",
                        [Function],
                        ";
  align-content: ",
                        [Function],
                        ";
  align-self: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  width: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                        "
  align-items: start;
  flex-direction: column;
",
                      ],
                    },
                    "displayName": "Styled(Flex)",
                    "foldedComponentIds": Array [
                      "sc-eNQAEJ",
                      "sc-hMqMXs",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-cbkKFq",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-jhAzac",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: flex;
  align-self: center;
  position: relative;
  margin: ",
                        [Function],
                        ";
  padding: ",
                        [Function],
                        ";
  font-size: 1rem;
  text-align: center;
  font-size: 1rem;
  cursor: pointer;
",
                        "
  color: ",
                        "#38A9DB",
                        ";
  ::before {
    content: 'EDIT';
  }
",
                      ],
                    },
                    "displayName": "Styled(styled.div)",
                    "foldedComponentIds": Array [
                      "sc-hzDkRC",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-jhAzac",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Symbol(react.fragment),
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bRBYWo",
              "isStatic": false,
              "rules": Array [
                "
  display: grid;
  grid-template-columns: ",
                [Function],
                ";
  width: ",
                [Function],
                ";
  margin: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bRBYWo",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
