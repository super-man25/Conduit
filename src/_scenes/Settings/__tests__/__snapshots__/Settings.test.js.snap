// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Settings /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Settings
    authActions={Object {}}
    authState={
      Object {
        "model": Object {
          "firstName": "groot",
          "id": 1,
          "lastName": "groot",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Connect(SiteHeaderPresenter)
          auth={
            Object {
              "firstName": "groot",
              "id": 1,
              "lastName": "groot",
            }
          }
          authActions={Object {}}
        />,
        <styled.div>
          <Connect(ApiAlertPresenter) />
          <styled.div>
            <styled.div
              padding="2rem"
            >
              <Flex
                align-items="center"
                direction="column"
              >
                <styled.div
                  padding="2rem 0"
                >
                  <Styled(NavLink)
                    activeStyle={
                      Object {
                        "color": "#38A9DB",
                        "textShadow": "0 0 .1px #38A9DB",
                      }
                    }
                    to="/settings/team"
                    weight="light"
                  >
                    Team Settings
                  </Styled(NavLink)>
                </styled.div>
                <styled.div
                  padding="2rem 0"
                >
                  <Styled(NavLink)
                    activeStyle={
                      Object {
                        "color": "#38A9DB",
                        "textShadow": "0 0 .1px #38A9DB",
                      }
                    }
                    to="/settings/user"
                    weight="light"
                  >
                    User Settings
                  </Styled(NavLink)>
                </styled.div>
              </Flex>
            </styled.div>
          </styled.div>
          <styled.div>
            <Route
              component={[Function]}
              path="/settings/team"
            />
            <Route
              component={[Function]}
              path="/settings/user"
            />
            <Route
              component={[Function]}
              path="/settings/create-user"
            />
            <Route
              component={[Function]}
              path="/settings/demo"
            />
          </styled.div>
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "auth": Object {
            "firstName": "groot",
            "id": 1,
            "lastName": "groot",
          },
          "authActions": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Connect(ApiAlertPresenter) />,
            <styled.div>
              <styled.div
                padding="2rem"
              >
                <Flex
                  align-items="center"
                  direction="column"
                >
                  <styled.div
                    padding="2rem 0"
                  >
                    <Styled(NavLink)
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/team"
                      weight="light"
                    >
                      Team Settings
                    </Styled(NavLink)>
                  </styled.div>
                  <styled.div
                    padding="2rem 0"
                  >
                    <Styled(NavLink)
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/user"
                      weight="light"
                    >
                      User Settings
                    </Styled(NavLink)>
                  </styled.div>
                </Flex>
              </styled.div>
            </styled.div>,
            <styled.div>
              <Route
                component={[Function]}
                path="/settings/team"
              />
              <Route
                component={[Function]}
                path="/settings/user"
              />
              <Route
                component={[Function]}
                path="/settings/create-user"
              />
              <Route
                component={[Function]}
                path="/settings/demo"
              />
            </styled.div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <styled.div
                padding="2rem"
              >
                <Flex
                  align-items="center"
                  direction="column"
                >
                  <styled.div
                    padding="2rem 0"
                  >
                    <Styled(NavLink)
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/team"
                      weight="light"
                    >
                      Team Settings
                    </Styled(NavLink)>
                  </styled.div>
                  <styled.div
                    padding="2rem 0"
                  >
                    <Styled(NavLink)
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/user"
                      weight="light"
                    >
                      User Settings
                    </Styled(NavLink)>
                  </styled.div>
                </Flex>
              </styled.div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Flex
                  align-items="center"
                  direction="column"
                >
                  <styled.div
                    padding="2rem 0"
                  >
                    <Styled(NavLink)
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/team"
                      weight="light"
                    >
                      Team Settings
                    </Styled(NavLink)>
                  </styled.div>
                  <styled.div
                    padding="2rem 0"
                  >
                    <Styled(NavLink)
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/user"
                      weight="light"
                    >
                      User Settings
                    </Styled(NavLink)>
                  </styled.div>
                </Flex>,
                "padding": "2rem",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "align-items": "center",
                  "children": Array [
                    <styled.div
                      padding="2rem 0"
                    >
                      <Styled(NavLink)
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/team"
                        weight="light"
                      >
                        Team Settings
                      </Styled(NavLink)>
                    </styled.div>,
                    <styled.div
                      padding="2rem 0"
                    >
                      <Styled(NavLink)
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/user"
                        weight="light"
                      >
                        User Settings
                      </Styled(NavLink)>
                    </styled.div>,
                  ],
                  "direction": "column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "/settings/team",
                    "nodeType": "class",
                    "props": Object {
                      "children": <Styled(NavLink)
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/team"
                        weight="light"
                      >
                        Team Settings
                      </Styled(NavLink)>,
                      "padding": "2rem 0",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "activeStyle": Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        },
                        "children": "Team Settings",
                        "to": "/settings/team",
                        "weight": "light",
                      },
                      "ref": null,
                      "rendered": "Team Settings",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "/settings/user",
                    "nodeType": "class",
                    "props": Object {
                      "children": <Styled(NavLink)
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/user"
                        weight="light"
                      >
                        User Settings
                      </Styled(NavLink)>,
                      "padding": "2rem 0",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "activeStyle": Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        },
                        "children": "User Settings",
                        "to": "/settings/user",
                        "weight": "light",
                      },
                      "ref": null,
                      "rendered": "User Settings",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Route
                  component={[Function]}
                  path="/settings/team"
                />,
                <Route
                  component={[Function]}
                  path="/settings/user"
                />,
                <Route
                  component={[Function]}
                  path="/settings/create-user"
                />,
                <Route
                  component={[Function]}
                  path="/settings/demo"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/settings/team",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/settings/user",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/settings/create-user",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "3",
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/settings/demo",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Connect(SiteHeaderPresenter)
            auth={
              Object {
                "firstName": "groot",
                "id": 1,
                "lastName": "groot",
              }
            }
            authActions={Object {}}
          />,
          <styled.div>
            <Connect(ApiAlertPresenter) />
            <styled.div>
              <styled.div
                padding="2rem"
              >
                <Flex
                  align-items="center"
                  direction="column"
                >
                  <styled.div
                    padding="2rem 0"
                  >
                    <Styled(NavLink)
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/team"
                      weight="light"
                    >
                      Team Settings
                    </Styled(NavLink)>
                  </styled.div>
                  <styled.div
                    padding="2rem 0"
                  >
                    <Styled(NavLink)
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/user"
                      weight="light"
                    >
                      User Settings
                    </Styled(NavLink)>
                  </styled.div>
                </Flex>
              </styled.div>
            </styled.div>
            <styled.div>
              <Route
                component={[Function]}
                path="/settings/team"
              />
              <Route
                component={[Function]}
                path="/settings/user"
              />
              <Route
                component={[Function]}
                path="/settings/create-user"
              />
              <Route
                component={[Function]}
                path="/settings/demo"
              />
            </styled.div>
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "auth": Object {
              "firstName": "groot",
              "id": 1,
              "lastName": "groot",
            },
            "authActions": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Connect(ApiAlertPresenter) />,
              <styled.div>
                <styled.div
                  padding="2rem"
                >
                  <Flex
                    align-items="center"
                    direction="column"
                  >
                    <styled.div
                      padding="2rem 0"
                    >
                      <Styled(NavLink)
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/team"
                        weight="light"
                      >
                        Team Settings
                      </Styled(NavLink)>
                    </styled.div>
                    <styled.div
                      padding="2rem 0"
                    >
                      <Styled(NavLink)
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/user"
                        weight="light"
                      >
                        User Settings
                      </Styled(NavLink)>
                    </styled.div>
                  </Flex>
                </styled.div>
              </styled.div>,
              <styled.div>
                <Route
                  component={[Function]}
                  path="/settings/team"
                />
                <Route
                  component={[Function]}
                  path="/settings/user"
                />
                <Route
                  component={[Function]}
                  path="/settings/create-user"
                />
                <Route
                  component={[Function]}
                  path="/settings/demo"
                />
              </styled.div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <styled.div
                  padding="2rem"
                >
                  <Flex
                    align-items="center"
                    direction="column"
                  >
                    <styled.div
                      padding="2rem 0"
                    >
                      <Styled(NavLink)
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/team"
                        weight="light"
                      >
                        Team Settings
                      </Styled(NavLink)>
                    </styled.div>
                    <styled.div
                      padding="2rem 0"
                    >
                      <Styled(NavLink)
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/user"
                        weight="light"
                      >
                        User Settings
                      </Styled(NavLink)>
                    </styled.div>
                  </Flex>
                </styled.div>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Flex
                    align-items="center"
                    direction="column"
                  >
                    <styled.div
                      padding="2rem 0"
                    >
                      <Styled(NavLink)
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/team"
                        weight="light"
                      >
                        Team Settings
                      </Styled(NavLink)>
                    </styled.div>
                    <styled.div
                      padding="2rem 0"
                    >
                      <Styled(NavLink)
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/user"
                        weight="light"
                      >
                        User Settings
                      </Styled(NavLink)>
                    </styled.div>
                  </Flex>,
                  "padding": "2rem",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "align-items": "center",
                    "children": Array [
                      <styled.div
                        padding="2rem 0"
                      >
                        <Styled(NavLink)
                          activeStyle={
                            Object {
                              "color": "#38A9DB",
                              "textShadow": "0 0 .1px #38A9DB",
                            }
                          }
                          to="/settings/team"
                          weight="light"
                        >
                          Team Settings
                        </Styled(NavLink)>
                      </styled.div>,
                      <styled.div
                        padding="2rem 0"
                      >
                        <Styled(NavLink)
                          activeStyle={
                            Object {
                              "color": "#38A9DB",
                              "textShadow": "0 0 .1px #38A9DB",
                            }
                          }
                          to="/settings/user"
                          weight="light"
                        >
                          User Settings
                        </Styled(NavLink)>
                      </styled.div>,
                    ],
                    "direction": "column",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "/settings/team",
                      "nodeType": "class",
                      "props": Object {
                        "children": <Styled(NavLink)
                          activeStyle={
                            Object {
                              "color": "#38A9DB",
                              "textShadow": "0 0 .1px #38A9DB",
                            }
                          }
                          to="/settings/team"
                          weight="light"
                        >
                          Team Settings
                        </Styled(NavLink)>,
                        "padding": "2rem 0",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "activeStyle": Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          },
                          "children": "Team Settings",
                          "to": "/settings/team",
                          "weight": "light",
                        },
                        "ref": null,
                        "rendered": "Team Settings",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "/settings/user",
                      "nodeType": "class",
                      "props": Object {
                        "children": <Styled(NavLink)
                          activeStyle={
                            Object {
                              "color": "#38A9DB",
                              "textShadow": "0 0 .1px #38A9DB",
                            }
                          }
                          to="/settings/user"
                          weight="light"
                        >
                          User Settings
                        </Styled(NavLink)>,
                        "padding": "2rem 0",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "activeStyle": Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          },
                          "children": "User Settings",
                          "to": "/settings/user",
                          "weight": "light",
                        },
                        "ref": null,
                        "rendered": "User Settings",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    path="/settings/team"
                  />,
                  <Route
                    component={[Function]}
                    path="/settings/user"
                  />,
                  <Route
                    component={[Function]}
                    path="/settings/create-user"
                  />,
                  <Route
                    component={[Function]}
                    path="/settings/demo"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings/team",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings/user",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings/create-user",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "3",
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings/demo",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
