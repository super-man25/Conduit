// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Settings /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Settings
    authActions={Object {}}
    authState={
      Object {
        "model": Object {
          "firstName": "groot",
          "id": 1,
          "lastName": "groot",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Connect(SiteHeaderPresenter)
          auth={
            Object {
              "firstName": "groot",
              "id": 1,
              "lastName": "groot",
            }
          }
          authActions={Object {}}
        />,
        <ForwardRef>
          <ForwardRef>
            <ForwardRef
              padding="2rem"
            >
              <ForwardRef
                align-items="center"
                direction="column"
              >
                <ForwardRef
                  padding="2rem 0"
                >
                  <ForwardRef
                    activeStyle={
                      Object {
                        "color": "#38A9DB",
                        "textShadow": "0 0 .1px #38A9DB",
                      }
                    }
                    to="/settings/team"
                    weight="light"
                  >
                    Team Settings
                  </ForwardRef>
                </ForwardRef>
                <ForwardRef
                  padding="2rem 0"
                >
                  <ForwardRef
                    activeStyle={
                      Object {
                        "color": "#38A9DB",
                        "textShadow": "0 0 .1px #38A9DB",
                      }
                    }
                    to="/settings/user"
                    weight="light"
                  >
                    User Settings
                  </ForwardRef>
                </ForwardRef>
                <ForwardRef
                  padding="2rem 0"
                >
                  <ForwardRef
                    activeStyle={
                      Object {
                        "color": "#38A9DB",
                        "textShadow": "0 0 .1px #38A9DB",
                      }
                    }
                    to="/settings/users"
                    weight="light"
                  >
                    View Users
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
          <ForwardRef>
            <Route
              component={[Function]}
              path="/settings/team"
            />
            <Route
              component={[Function]}
              path="/settings/user"
            />
            <Route
              component={[Function]}
              path="/settings/users"
            />
            <Route
              component={[Function]}
              path="/settings/create-user"
            />
            <Route
              component={[Function]}
              path="/settings/demo"
            />
          </ForwardRef>
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "auth": Object {
            "firstName": "groot",
            "id": 1,
            "lastName": "groot",
          },
          "authActions": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef>
              <ForwardRef
                padding="2rem"
              >
                <ForwardRef
                  align-items="center"
                  direction="column"
                >
                  <ForwardRef
                    padding="2rem 0"
                  >
                    <ForwardRef
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/team"
                      weight="light"
                    >
                      Team Settings
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    padding="2rem 0"
                  >
                    <ForwardRef
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/user"
                      weight="light"
                    >
                      User Settings
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    padding="2rem 0"
                  >
                    <ForwardRef
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/users"
                      weight="light"
                    >
                      View Users
                    </ForwardRef>
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>,
            <ForwardRef>
              <Route
                component={[Function]}
                path="/settings/team"
              />
              <Route
                component={[Function]}
                path="/settings/user"
              />
              <Route
                component={[Function]}
                path="/settings/users"
              />
              <Route
                component={[Function]}
                path="/settings/create-user"
              />
              <Route
                component={[Function]}
                path="/settings/demo"
              />
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                padding="2rem"
              >
                <ForwardRef
                  align-items="center"
                  direction="column"
                >
                  <ForwardRef
                    padding="2rem 0"
                  >
                    <ForwardRef
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/team"
                      weight="light"
                    >
                      Team Settings
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    padding="2rem 0"
                  >
                    <ForwardRef
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/user"
                      weight="light"
                    >
                      User Settings
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    padding="2rem 0"
                  >
                    <ForwardRef
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/users"
                      weight="light"
                    >
                      View Users
                    </ForwardRef>
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  align-items="center"
                  direction="column"
                >
                  <ForwardRef
                    padding="2rem 0"
                  >
                    <ForwardRef
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/team"
                      weight="light"
                    >
                      Team Settings
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    padding="2rem 0"
                  >
                    <ForwardRef
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/user"
                      weight="light"
                    >
                      User Settings
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    padding="2rem 0"
                  >
                    <ForwardRef
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/users"
                      weight="light"
                    >
                      View Users
                    </ForwardRef>
                  </ForwardRef>
                </ForwardRef>,
                "padding": "2rem",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "align-items": "center",
                  "children": Array [
                    <ForwardRef
                      padding="2rem 0"
                    >
                      <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/team"
                        weight="light"
                      >
                        Team Settings
                      </ForwardRef>
                    </ForwardRef>,
                    <ForwardRef
                      padding="2rem 0"
                    >
                      <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/user"
                        weight="light"
                      >
                        User Settings
                      </ForwardRef>
                    </ForwardRef>,
                    <ForwardRef
                      padding="2rem 0"
                    >
                      <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/users"
                        weight="light"
                      >
                        View Users
                      </ForwardRef>
                    </ForwardRef>,
                  ],
                  "direction": "column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "/settings/team",
                    "nodeType": "function",
                    "props": Object {
                      "children": <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/team"
                        weight="light"
                      >
                        Team Settings
                      </ForwardRef>,
                      "padding": "2rem 0",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "activeStyle": Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        },
                        "children": "Team Settings",
                        "to": "/settings/team",
                        "weight": "light",
                      },
                      "ref": null,
                      "rendered": "Team Settings",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [
                          [Function],
                        ],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-epnACN",
                          "isStatic": false,
                          "rules": Array [
                            "
  text-decoration: none;
  font-size: ",
                            [Function],
                            ";
  color: ",
                            "#323232",
                            ";
  font-weight: ",
                            [Function],
                            ";

  &:focus,
  &:hover {
    outline: 0;
    text-decoration: none;
    cursor: pointer;
    color: ",
                            "#38A9DB",
                            ";
    transition: all .1s ease-in-out;
    text-shadow: 0 0 .1px ",
                            "#38A9DB",
                            ";
  }

  &:active,
  &:visited {
    outline: 0
    text-decoration: none;
  }
",
                          ],
                        },
                        "displayName": "Styled(NavLink)",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-epnACN",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                        Symbol(Symbol.hasInstance): [Function],
                      },
                    },
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ksYbfQ",
                        "isStatic": false,
                        "rules": Array [
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ksYbfQ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": "/settings/user",
                    "nodeType": "function",
                    "props": Object {
                      "children": <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/user"
                        weight="light"
                      >
                        User Settings
                      </ForwardRef>,
                      "padding": "2rem 0",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "activeStyle": Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        },
                        "children": "User Settings",
                        "to": "/settings/user",
                        "weight": "light",
                      },
                      "ref": null,
                      "rendered": "User Settings",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [
                          [Function],
                        ],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-epnACN",
                          "isStatic": false,
                          "rules": Array [
                            "
  text-decoration: none;
  font-size: ",
                            [Function],
                            ";
  color: ",
                            "#323232",
                            ";
  font-weight: ",
                            [Function],
                            ";

  &:focus,
  &:hover {
    outline: 0;
    text-decoration: none;
    cursor: pointer;
    color: ",
                            "#38A9DB",
                            ";
    transition: all .1s ease-in-out;
    text-shadow: 0 0 .1px ",
                            "#38A9DB",
                            ";
  }

  &:active,
  &:visited {
    outline: 0
    text-decoration: none;
  }
",
                          ],
                        },
                        "displayName": "Styled(NavLink)",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-epnACN",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                        Symbol(Symbol.hasInstance): [Function],
                      },
                    },
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ksYbfQ",
                        "isStatic": false,
                        "rules": Array [
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ksYbfQ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": "/settings/users",
                    "nodeType": "function",
                    "props": Object {
                      "children": <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/users"
                        weight="light"
                      >
                        View Users
                      </ForwardRef>,
                      "padding": "2rem 0",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "activeStyle": Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        },
                        "children": "View Users",
                        "to": "/settings/users",
                        "weight": "light",
                      },
                      "ref": null,
                      "rendered": "View Users",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [
                          [Function],
                        ],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-epnACN",
                          "isStatic": false,
                          "rules": Array [
                            "
  text-decoration: none;
  font-size: ",
                            [Function],
                            ";
  color: ",
                            "#323232",
                            ";
  font-weight: ",
                            [Function],
                            ";

  &:focus,
  &:hover {
    outline: 0;
    text-decoration: none;
    cursor: pointer;
    color: ",
                            "#38A9DB",
                            ";
    transition: all .1s ease-in-out;
    text-shadow: 0 0 .1px ",
                            "#38A9DB",
                            ";
  }

  &:active,
  &:visited {
    outline: 0
    text-decoration: none;
  }
",
                          ],
                        },
                        "displayName": "Styled(NavLink)",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-epnACN",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                        Symbol(Symbol.hasInstance): [Function],
                      },
                    },
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ksYbfQ",
                        "isStatic": false,
                        "rules": Array [
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
  ",
                          [Function],
                          "
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ksYbfQ",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hMqMXs",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: ",
                      [Function],
                      ";
  flex: ",
                      [Function],
                      ";
  flex-direction: ",
                      [Function],
                      "
  flex-grow: ",
                      [Function],
                      ";
  flex-shrink: ",
                      [Function],
                      ";
  flex-basis: ",
                      [Function],
                      ";
  flex-wrap: ",
                      [Function],
                      ";
  order: ",
                      [Function],
                      ";
  justify-content: ",
                      [Function],
                      ";
  align-items: ",
                      [Function],
                      ";
  align-content: ",
                      [Function],
                      ";
  align-self: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
",
                      "
    margin: ",
                      [Function],
                      ";
    margin-top: ",
                      [Function],
                      ";
    margin-bottom: ",
                      [Function],
                      ";
    margin-left: ",
                      [Function],
                      ";
    margin-right: ",
                      [Function],
                      ";

    padding: ",
                      [Function],
                      ";
    padding-top: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
    padding-left: ",
                      [Function],
                      ";
    padding-right: ",
                      [Function],
                      ";

    border: ",
                      [Function],
                      ";
    border-top: ",
                      [Function],
                      ";
    border-bottom: ",
                      [Function],
                      ";
    border-left: ",
                      [Function],
                      ";
    border-right: ",
                      [Function],
                      ";
  ",
                    ],
                  },
                  "displayName": "Flex",
                  "foldedComponentIds": Array [
                    "sc-eNQAEJ",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-hMqMXs",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ksYbfQ",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
  ",
                    [Function],
                    "
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ksYbfQ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-brqgnP",
                "isStatic": true,
                "rules": Array [
                  "
  display: flex;
  flex-direction: column;
  position: relative;
  width: calc(30% - 10rem);
  height: auto;
  margin: 0;
  background: ",
                  "#FFFFFF",
                  ";
  border-right: 1px solid ",
                  "#D1D1D1",
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-brqgnP",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Route
                  component={[Function]}
                  path="/settings/team"
                />,
                <Route
                  component={[Function]}
                  path="/settings/user"
                />,
                <Route
                  component={[Function]}
                  path="/settings/users"
                />,
                <Route
                  component={[Function]}
                  path="/settings/create-user"
                />,
                <Route
                  component={[Function]}
                  path="/settings/demo"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/settings/team",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/settings/user",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/settings/users",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "3",
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/settings/create-user",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "4",
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/settings/demo",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-hrWEMg",
                "isStatic": false,
                "rules": Array [
                  "
  display: flex;
  background-color: ",
                  "#F8F8F8",
                  ";
  overflow-y: ",
                  [Function],
                  ";
  flex: 1;
  padding: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-hrWEMg",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-eTuwsz",
            "isStatic": true,
            "rules": Array [
              "
  display: flex;
  position: absolute;
  top: 5rem;
  bottom: 0;
  left: 0;
  right: 0;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-eTuwsz",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwCtUz",
        "isStatic": true,
        "rules": Array [
          "
  height: 100%;
  width: 100%;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwCtUz",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Connect(SiteHeaderPresenter)
            auth={
              Object {
                "firstName": "groot",
                "id": 1,
                "lastName": "groot",
              }
            }
            authActions={Object {}}
          />,
          <ForwardRef>
            <ForwardRef>
              <ForwardRef
                padding="2rem"
              >
                <ForwardRef
                  align-items="center"
                  direction="column"
                >
                  <ForwardRef
                    padding="2rem 0"
                  >
                    <ForwardRef
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/team"
                      weight="light"
                    >
                      Team Settings
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    padding="2rem 0"
                  >
                    <ForwardRef
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/user"
                      weight="light"
                    >
                      User Settings
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    padding="2rem 0"
                  >
                    <ForwardRef
                      activeStyle={
                        Object {
                          "color": "#38A9DB",
                          "textShadow": "0 0 .1px #38A9DB",
                        }
                      }
                      to="/settings/users"
                      weight="light"
                    >
                      View Users
                    </ForwardRef>
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
            <ForwardRef>
              <Route
                component={[Function]}
                path="/settings/team"
              />
              <Route
                component={[Function]}
                path="/settings/user"
              />
              <Route
                component={[Function]}
                path="/settings/users"
              />
              <Route
                component={[Function]}
                path="/settings/create-user"
              />
              <Route
                component={[Function]}
                path="/settings/demo"
              />
            </ForwardRef>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "auth": Object {
              "firstName": "groot",
              "id": 1,
              "lastName": "groot",
            },
            "authActions": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                <ForwardRef
                  padding="2rem"
                >
                  <ForwardRef
                    align-items="center"
                    direction="column"
                  >
                    <ForwardRef
                      padding="2rem 0"
                    >
                      <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/team"
                        weight="light"
                      >
                        Team Settings
                      </ForwardRef>
                    </ForwardRef>
                    <ForwardRef
                      padding="2rem 0"
                    >
                      <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/user"
                        weight="light"
                      >
                        User Settings
                      </ForwardRef>
                    </ForwardRef>
                    <ForwardRef
                      padding="2rem 0"
                    >
                      <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/users"
                        weight="light"
                      >
                        View Users
                      </ForwardRef>
                    </ForwardRef>
                  </ForwardRef>
                </ForwardRef>
              </ForwardRef>,
              <ForwardRef>
                <Route
                  component={[Function]}
                  path="/settings/team"
                />
                <Route
                  component={[Function]}
                  path="/settings/user"
                />
                <Route
                  component={[Function]}
                  path="/settings/users"
                />
                <Route
                  component={[Function]}
                  path="/settings/create-user"
                />
                <Route
                  component={[Function]}
                  path="/settings/demo"
                />
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  padding="2rem"
                >
                  <ForwardRef
                    align-items="center"
                    direction="column"
                  >
                    <ForwardRef
                      padding="2rem 0"
                    >
                      <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/team"
                        weight="light"
                      >
                        Team Settings
                      </ForwardRef>
                    </ForwardRef>
                    <ForwardRef
                      padding="2rem 0"
                    >
                      <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/user"
                        weight="light"
                      >
                        User Settings
                      </ForwardRef>
                    </ForwardRef>
                    <ForwardRef
                      padding="2rem 0"
                    >
                      <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/users"
                        weight="light"
                      >
                        View Users
                      </ForwardRef>
                    </ForwardRef>
                  </ForwardRef>
                </ForwardRef>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef
                    align-items="center"
                    direction="column"
                  >
                    <ForwardRef
                      padding="2rem 0"
                    >
                      <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/team"
                        weight="light"
                      >
                        Team Settings
                      </ForwardRef>
                    </ForwardRef>
                    <ForwardRef
                      padding="2rem 0"
                    >
                      <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/user"
                        weight="light"
                      >
                        User Settings
                      </ForwardRef>
                    </ForwardRef>
                    <ForwardRef
                      padding="2rem 0"
                    >
                      <ForwardRef
                        activeStyle={
                          Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          }
                        }
                        to="/settings/users"
                        weight="light"
                      >
                        View Users
                      </ForwardRef>
                    </ForwardRef>
                  </ForwardRef>,
                  "padding": "2rem",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "align-items": "center",
                    "children": Array [
                      <ForwardRef
                        padding="2rem 0"
                      >
                        <ForwardRef
                          activeStyle={
                            Object {
                              "color": "#38A9DB",
                              "textShadow": "0 0 .1px #38A9DB",
                            }
                          }
                          to="/settings/team"
                          weight="light"
                        >
                          Team Settings
                        </ForwardRef>
                      </ForwardRef>,
                      <ForwardRef
                        padding="2rem 0"
                      >
                        <ForwardRef
                          activeStyle={
                            Object {
                              "color": "#38A9DB",
                              "textShadow": "0 0 .1px #38A9DB",
                            }
                          }
                          to="/settings/user"
                          weight="light"
                        >
                          User Settings
                        </ForwardRef>
                      </ForwardRef>,
                      <ForwardRef
                        padding="2rem 0"
                      >
                        <ForwardRef
                          activeStyle={
                            Object {
                              "color": "#38A9DB",
                              "textShadow": "0 0 .1px #38A9DB",
                            }
                          }
                          to="/settings/users"
                          weight="light"
                        >
                          View Users
                        </ForwardRef>
                      </ForwardRef>,
                    ],
                    "direction": "column",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "/settings/team",
                      "nodeType": "function",
                      "props": Object {
                        "children": <ForwardRef
                          activeStyle={
                            Object {
                              "color": "#38A9DB",
                              "textShadow": "0 0 .1px #38A9DB",
                            }
                          }
                          to="/settings/team"
                          weight="light"
                        >
                          Team Settings
                        </ForwardRef>,
                        "padding": "2rem 0",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "activeStyle": Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          },
                          "children": "Team Settings",
                          "to": "/settings/team",
                          "weight": "light",
                        },
                        "ref": null,
                        "rendered": "Team Settings",
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [
                            [Function],
                          ],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-epnACN",
                            "isStatic": false,
                            "rules": Array [
                              "
  text-decoration: none;
  font-size: ",
                              [Function],
                              ";
  color: ",
                              "#323232",
                              ";
  font-weight: ",
                              [Function],
                              ";

  &:focus,
  &:hover {
    outline: 0;
    text-decoration: none;
    cursor: pointer;
    color: ",
                              "#38A9DB",
                              ";
    transition: all .1s ease-in-out;
    text-shadow: 0 0 .1px ",
                              "#38A9DB",
                              ";
  }

  &:active,
  &:visited {
    outline: 0
    text-decoration: none;
  }
",
                            ],
                          },
                          "displayName": "Styled(NavLink)",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-epnACN",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        },
                      },
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ksYbfQ",
                          "isStatic": false,
                          "rules": Array [
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ksYbfQ",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      },
                    },
                    Object {
                      "instance": null,
                      "key": "/settings/user",
                      "nodeType": "function",
                      "props": Object {
                        "children": <ForwardRef
                          activeStyle={
                            Object {
                              "color": "#38A9DB",
                              "textShadow": "0 0 .1px #38A9DB",
                            }
                          }
                          to="/settings/user"
                          weight="light"
                        >
                          User Settings
                        </ForwardRef>,
                        "padding": "2rem 0",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "activeStyle": Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          },
                          "children": "User Settings",
                          "to": "/settings/user",
                          "weight": "light",
                        },
                        "ref": null,
                        "rendered": "User Settings",
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [
                            [Function],
                          ],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-epnACN",
                            "isStatic": false,
                            "rules": Array [
                              "
  text-decoration: none;
  font-size: ",
                              [Function],
                              ";
  color: ",
                              "#323232",
                              ";
  font-weight: ",
                              [Function],
                              ";

  &:focus,
  &:hover {
    outline: 0;
    text-decoration: none;
    cursor: pointer;
    color: ",
                              "#38A9DB",
                              ";
    transition: all .1s ease-in-out;
    text-shadow: 0 0 .1px ",
                              "#38A9DB",
                              ";
  }

  &:active,
  &:visited {
    outline: 0
    text-decoration: none;
  }
",
                            ],
                          },
                          "displayName": "Styled(NavLink)",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-epnACN",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        },
                      },
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ksYbfQ",
                          "isStatic": false,
                          "rules": Array [
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ksYbfQ",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      },
                    },
                    Object {
                      "instance": null,
                      "key": "/settings/users",
                      "nodeType": "function",
                      "props": Object {
                        "children": <ForwardRef
                          activeStyle={
                            Object {
                              "color": "#38A9DB",
                              "textShadow": "0 0 .1px #38A9DB",
                            }
                          }
                          to="/settings/users"
                          weight="light"
                        >
                          View Users
                        </ForwardRef>,
                        "padding": "2rem 0",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "activeStyle": Object {
                            "color": "#38A9DB",
                            "textShadow": "0 0 .1px #38A9DB",
                          },
                          "children": "View Users",
                          "to": "/settings/users",
                          "weight": "light",
                        },
                        "ref": null,
                        "rendered": "View Users",
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [
                            [Function],
                          ],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-epnACN",
                            "isStatic": false,
                            "rules": Array [
                              "
  text-decoration: none;
  font-size: ",
                              [Function],
                              ";
  color: ",
                              "#323232",
                              ";
  font-weight: ",
                              [Function],
                              ";

  &:focus,
  &:hover {
    outline: 0;
    text-decoration: none;
    cursor: pointer;
    color: ",
                              "#38A9DB",
                              ";
    transition: all .1s ease-in-out;
    text-shadow: 0 0 .1px ",
                              "#38A9DB",
                              ";
  }

  &:active,
  &:visited {
    outline: 0
    text-decoration: none;
  }
",
                            ],
                          },
                          "displayName": "Styled(NavLink)",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-epnACN",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        },
                      },
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ksYbfQ",
                          "isStatic": false,
                          "rules": Array [
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
  ",
                            [Function],
                            "
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ksYbfQ",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      },
                    },
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-hMqMXs",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: ",
                        [Function],
                        ";
  flex: ",
                        [Function],
                        ";
  flex-direction: ",
                        [Function],
                        "
  flex-grow: ",
                        [Function],
                        ";
  flex-shrink: ",
                        [Function],
                        ";
  flex-basis: ",
                        [Function],
                        ";
  flex-wrap: ",
                        [Function],
                        ";
  order: ",
                        [Function],
                        ";
  justify-content: ",
                        [Function],
                        ";
  align-items: ",
                        [Function],
                        ";
  align-content: ",
                        [Function],
                        ";
  align-self: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  width: ",
                        [Function],
                        ";
",
                        "
    margin: ",
                        [Function],
                        ";
    margin-top: ",
                        [Function],
                        ";
    margin-bottom: ",
                        [Function],
                        ";
    margin-left: ",
                        [Function],
                        ";
    margin-right: ",
                        [Function],
                        ";

    padding: ",
                        [Function],
                        ";
    padding-top: ",
                        [Function],
                        ";
    padding-bottom: ",
                        [Function],
                        ";
    padding-left: ",
                        [Function],
                        ";
    padding-right: ",
                        [Function],
                        ";

    border: ",
                        [Function],
                        ";
    border-top: ",
                        [Function],
                        ";
    border-bottom: ",
                        [Function],
                        ";
    border-left: ",
                        [Function],
                        ";
    border-right: ",
                        [Function],
                        ";
  ",
                      ],
                    },
                    "displayName": "Flex",
                    "foldedComponentIds": Array [
                      "sc-eNQAEJ",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-hMqMXs",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-ksYbfQ",
                    "isStatic": false,
                    "rules": Array [
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-ksYbfQ",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-brqgnP",
                  "isStatic": true,
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  position: relative;
  width: calc(30% - 10rem);
  height: auto;
  margin: 0;
  background: ",
                    "#FFFFFF",
                    ";
  border-right: 1px solid ",
                    "#D1D1D1",
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-brqgnP",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    path="/settings/team"
                  />,
                  <Route
                    component={[Function]}
                    path="/settings/user"
                  />,
                  <Route
                    component={[Function]}
                    path="/settings/users"
                  />,
                  <Route
                    component={[Function]}
                    path="/settings/create-user"
                  />,
                  <Route
                    component={[Function]}
                    path="/settings/demo"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings/team",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings/user",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings/users",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "3",
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings/create-user",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "4",
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/settings/demo",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-hrWEMg",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: flex;
  background-color: ",
                    "#F8F8F8",
                    ";
  overflow-y: ",
                    [Function],
                    ";
  flex: 1;
  padding: ",
                    [Function],
                    ";
  margin: ",
                    [Function],
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-hrWEMg",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-eTuwsz",
              "isStatic": true,
              "rules": Array [
                "
  display: flex;
  position: absolute;
  top: 5rem;
  bottom: 0;
  left: 0;
  right: 0;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-eTuwsz",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwCtUz",
          "isStatic": true,
          "rules": Array [
            "
  height: 100%;
  width: 100%;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwCtUz",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
