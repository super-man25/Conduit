// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CumulativeInventoryChart /> should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CumulativeInventoryChart
    data={
        Array [
            Object {
              "eventId": 1,
              "id": 1,
              "inventory": 100,
              "isProjected": false,
              "periodicInventory": 100,
              "periodicRevenue": 100,
              "revenue": 100,
              "timestamp": 1529336865706,
            },
          ]
    }
    dateFormat="MMM DD, YYYY"
    height={400}
    renderNoData={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <ResponsiveContainer
        debounce={0}
        height={400}
        width="100%"
>
        <LineChart
                barCategoryGap="10%"
                barGap={4}
                data={
                        Array [
                                Object {
                                  "inventory": 100,
                                  "isProjected": false,
                                  "timestamp": 1529336865706,
                                },
                              ]
                }
                layout="horizontal"
                margin={
                        Object {
                                "bottom": 5,
                                "left": 5,
                                "right": 5,
                                "top": 5,
                              }
                }
                reverseStackOrder={false}
                stackOffset="none"
        >
                <XAxis
                        allowDataOverflow={false}
                        allowDecimals={true}
                        allowDuplicatedCategory={true}
                        dataKey="timestamp"
                        domain={
                                Array [
                                        0,
                                        "auto",
                                      ]
                        }
                        height={30}
                        hide={false}
                        mirror={false}
                        orientation="bottom"
                        padding={
                                Object {
                                        "left": 0,
                                        "right": 0,
                                      }
                        }
                        reversed={false}
                        scale="auto"
                        tick={
                                Object {
                                        "fontSize": 10,
                                      }
                        }
                        tickCount={5}
                        tickFormatter={[Function]}
                        type="category"
                        width={0}
                        xAxisId={0}
                >
                        <Label
                                offset={-5}
                                position="insideBottom"
                                style={
                                        Object {
                                                "color": "#999999",
                                                "fontSize": 12,
                                              }
                                }
                                value="Date"
                        />
                </XAxis>
                <YAxis
                        allowDataOverflow={false}
                        allowDecimals={true}
                        allowDuplicatedCategory={true}
                        axisLine={false}
                        domain={
                                Array [
                                        "auto",
                                        "auto",
                                      ]
                        }
                        height={0}
                        hide={false}
                        mirror={false}
                        orientation="left"
                        padding={
                                Object {
                                        "bottom": 0,
                                        "top": 0,
                                      }
                        }
                        reversed={false}
                        scale="auto"
                        tick={
                                Object {
                                        "fontSize": 10,
                                      }
                        }
                        tickCount={10}
                        tickFormatter={[Function]}
                        tickLine={false}
                        type="number"
                        width={60}
                        yAxisId={0}
                >
                        <Label
                                angle={-90}
                                offset={5}
                                position="insideLeft"
                                style={
                                        Object {
                                                "color": "#999999",
                                                "fontSize": 12,
                                              }
                                }
                                value="Inventory"
                        />
                </YAxis>
                <CartesianGrid
                        fill="none"
                        horizontal={true}
                        horizontalFill={Array []}
                        horizontalPoints={Array []}
                        stroke="#ccc"
                        vertical={false}
                        verticalFill={Array []}
                        verticalPoints={Array []}
                />
                <Line
                        activeDot={true}
                        animationBegin={0}
                        animationDuration={1000}
                        animationEasing="ease"
                        connectNulls={false}
                        dataKey="inventory"
                        dot={false}
                        fill="#fff"
                        hide={false}
                        isAnimationActive={true}
                        legendType="line"
                        name="actual"
                        onAnimationEnd={[Function]}
                        onAnimationStart={[Function]}
                        points={Array []}
                        stroke="#817CB8"
                        strokeWidth={2}
                        type="monotone"
                        xAxisId={0}
                        yAxisId={0}
                />
                <Line
                        activeDot={true}
                        animationBegin={0}
                        animationDuration={1000}
                        animationEasing="ease"
                        connectNulls={false}
                        dataKey="projectedInventory"
                        dot={false}
                        fill="#fff"
                        hide={false}
                        isAnimationActive={true}
                        legendType="line"
                        name="projected"
                        onAnimationEnd={[Function]}
                        onAnimationStart={[Function]}
                        points={Array []}
                        stroke="#817CB8"
                        strokeDasharray="5 5"
                        strokeWidth={2}
                        type="monotone"
                        xAxisId={0}
                        yAxisId={0}
                />
                <Tooltip
                        active={false}
                        animationDuration={400}
                        animationEasing="ease"
                        content={
                                <CumulativeInventoryTooltip
                                        dateFormat="MMM DD, YYYY"
                                />
                        }
                        coordinate={
                                Object {
                                        "x": 0,
                                        "y": 0,
                                      }
                        }
                        cursor={
                                Object {
                                        "opacity": 0.5,
                                        "stroke": "#817CB8",
                                        "strokeWidth": 2,
                                      }
                        }
                        cursorStyle={Object {}}
                        filterNull={true}
                        isAnimationActive={true}
                        itemSorter={[Function]}
                        itemStyle={Object {}}
                        labelStyle={Object {}}
                        offset={10}
                        separator=" : "
                        useTranslate3d={false}
                        viewBox={
                                Object {
                                        "x1": 0,
                                        "x2": 0,
                                        "y1": 0,
                                        "y2": 0,
                                      }
                        }
                        wrapperStyle={Object {}}
                />
        </LineChart>
</ResponsiveContainer>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <LineChart
          barCategoryGap="10%"
          barGap={4}
          data={
                    Array [
                              Object {
                                "inventory": 100,
                                "isProjected": false,
                                "timestamp": 1529336865706,
                              },
                            ]
          }
          layout="horizontal"
          margin={
                    Object {
                              "bottom": 5,
                              "left": 5,
                              "right": 5,
                              "top": 5,
                            }
          }
          reverseStackOrder={false}
          stackOffset="none"
>
          <XAxis
                    allowDataOverflow={false}
                    allowDecimals={true}
                    allowDuplicatedCategory={true}
                    dataKey="timestamp"
                    domain={
                              Array [
                                        0,
                                        "auto",
                                      ]
                    }
                    height={30}
                    hide={false}
                    mirror={false}
                    orientation="bottom"
                    padding={
                              Object {
                                        "left": 0,
                                        "right": 0,
                                      }
                    }
                    reversed={false}
                    scale="auto"
                    tick={
                              Object {
                                        "fontSize": 10,
                                      }
                    }
                    tickCount={5}
                    tickFormatter={[Function]}
                    type="category"
                    width={0}
                    xAxisId={0}
          >
                    <Label
                              offset={-5}
                              position="insideBottom"
                              style={
                                        Object {
                                                  "color": "#999999",
                                                  "fontSize": 12,
                                                }
                              }
                              value="Date"
                    />
          </XAxis>
          <YAxis
                    allowDataOverflow={false}
                    allowDecimals={true}
                    allowDuplicatedCategory={true}
                    axisLine={false}
                    domain={
                              Array [
                                        "auto",
                                        "auto",
                                      ]
                    }
                    height={0}
                    hide={false}
                    mirror={false}
                    orientation="left"
                    padding={
                              Object {
                                        "bottom": 0,
                                        "top": 0,
                                      }
                    }
                    reversed={false}
                    scale="auto"
                    tick={
                              Object {
                                        "fontSize": 10,
                                      }
                    }
                    tickCount={10}
                    tickFormatter={[Function]}
                    tickLine={false}
                    type="number"
                    width={60}
                    yAxisId={0}
          >
                    <Label
                              angle={-90}
                              offset={5}
                              position="insideLeft"
                              style={
                                        Object {
                                                  "color": "#999999",
                                                  "fontSize": 12,
                                                }
                              }
                              value="Inventory"
                    />
          </YAxis>
          <CartesianGrid
                    fill="none"
                    horizontal={true}
                    horizontalFill={Array []}
                    horizontalPoints={Array []}
                    stroke="#ccc"
                    vertical={false}
                    verticalFill={Array []}
                    verticalPoints={Array []}
          />
          <Line
                    activeDot={true}
                    animationBegin={0}
                    animationDuration={1000}
                    animationEasing="ease"
                    connectNulls={false}
                    dataKey="inventory"
                    dot={false}
                    fill="#fff"
                    hide={false}
                    isAnimationActive={true}
                    legendType="line"
                    name="actual"
                    onAnimationEnd={[Function]}
                    onAnimationStart={[Function]}
                    points={Array []}
                    stroke="#817CB8"
                    strokeWidth={2}
                    type="monotone"
                    xAxisId={0}
                    yAxisId={0}
          />
          <Line
                    activeDot={true}
                    animationBegin={0}
                    animationDuration={1000}
                    animationEasing="ease"
                    connectNulls={false}
                    dataKey="projectedInventory"
                    dot={false}
                    fill="#fff"
                    hide={false}
                    isAnimationActive={true}
                    legendType="line"
                    name="projected"
                    onAnimationEnd={[Function]}
                    onAnimationStart={[Function]}
                    points={Array []}
                    stroke="#817CB8"
                    strokeDasharray="5 5"
                    strokeWidth={2}
                    type="monotone"
                    xAxisId={0}
                    yAxisId={0}
          />
          <Tooltip
                    active={false}
                    animationDuration={400}
                    animationEasing="ease"
                    content={
                              <CumulativeInventoryTooltip
                                        dateFormat="MMM DD, YYYY"
                              />
                    }
                    coordinate={
                              Object {
                                        "x": 0,
                                        "y": 0,
                                      }
                    }
                    cursor={
                              Object {
                                        "opacity": 0.5,
                                        "stroke": "#817CB8",
                                        "strokeWidth": 2,
                                      }
                    }
                    cursorStyle={Object {}}
                    filterNull={true}
                    isAnimationActive={true}
                    itemSorter={[Function]}
                    itemStyle={Object {}}
                    labelStyle={Object {}}
                    offset={10}
                    separator=" : "
                    useTranslate3d={false}
                    viewBox={
                              Object {
                                        "x1": 0,
                                        "x2": 0,
                                        "y1": 0,
                                        "y2": 0,
                                      }
                    }
                    wrapperStyle={Object {}}
          />
</LineChart>,
        "debounce": 0,
        "height": 400,
        "width": "100%",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "barCategoryGap": "10%",
          "barGap": 4,
          "children": Array [
            <XAxis
              allowDataOverflow={false}
              allowDecimals={true}
              allowDuplicatedCategory={true}
              dataKey="timestamp"
              domain={
                            Array [
                                          0,
                                          "auto",
                                        ]
              }
              height={30}
              hide={false}
              mirror={false}
              orientation="bottom"
              padding={
                            Object {
                                          "left": 0,
                                          "right": 0,
                                        }
              }
              reversed={false}
              scale="auto"
              tick={
                            Object {
                                          "fontSize": 10,
                                        }
              }
              tickCount={5}
              tickFormatter={[Function]}
              type="category"
              width={0}
              xAxisId={0}
>
              <Label
                            offset={-5}
                            position="insideBottom"
                            style={
                                          Object {
                                                        "color": "#999999",
                                                        "fontSize": 12,
                                                      }
                            }
                            value="Date"
              />
</XAxis>,
            <YAxis
              allowDataOverflow={false}
              allowDecimals={true}
              allowDuplicatedCategory={true}
              axisLine={false}
              domain={
                            Array [
                                          "auto",
                                          "auto",
                                        ]
              }
              height={0}
              hide={false}
              mirror={false}
              orientation="left"
              padding={
                            Object {
                                          "bottom": 0,
                                          "top": 0,
                                        }
              }
              reversed={false}
              scale="auto"
              tick={
                            Object {
                                          "fontSize": 10,
                                        }
              }
              tickCount={10}
              tickFormatter={[Function]}
              tickLine={false}
              type="number"
              width={60}
              yAxisId={0}
>
              <Label
                            angle={-90}
                            offset={5}
                            position="insideLeft"
                            style={
                                          Object {
                                                        "color": "#999999",
                                                        "fontSize": 12,
                                                      }
                            }
                            value="Inventory"
              />
</YAxis>,
            <CartesianGrid
              fill="none"
              horizontal={true}
              horizontalFill={Array []}
              horizontalPoints={Array []}
              stroke="#ccc"
              vertical={false}
              verticalFill={Array []}
              verticalPoints={Array []}
/>,
            <Line
              activeDot={true}
              animationBegin={0}
              animationDuration={1000}
              animationEasing="ease"
              connectNulls={false}
              dataKey="inventory"
              dot={false}
              fill="#fff"
              hide={false}
              isAnimationActive={true}
              legendType="line"
              name="actual"
              onAnimationEnd={[Function]}
              onAnimationStart={[Function]}
              points={Array []}
              stroke="#817CB8"
              strokeWidth={2}
              type="monotone"
              xAxisId={0}
              yAxisId={0}
/>,
            <Line
              activeDot={true}
              animationBegin={0}
              animationDuration={1000}
              animationEasing="ease"
              connectNulls={false}
              dataKey="projectedInventory"
              dot={false}
              fill="#fff"
              hide={false}
              isAnimationActive={true}
              legendType="line"
              name="projected"
              onAnimationEnd={[Function]}
              onAnimationStart={[Function]}
              points={Array []}
              stroke="#817CB8"
              strokeDasharray="5 5"
              strokeWidth={2}
              type="monotone"
              xAxisId={0}
              yAxisId={0}
/>,
            <Tooltip
              active={false}
              animationDuration={400}
              animationEasing="ease"
              content={
                            <CumulativeInventoryTooltip
                                          dateFormat="MMM DD, YYYY"
                            />
              }
              coordinate={
                            Object {
                                          "x": 0,
                                          "y": 0,
                                        }
              }
              cursor={
                            Object {
                                          "opacity": 0.5,
                                          "stroke": "#817CB8",
                                          "strokeWidth": 2,
                                        }
              }
              cursorStyle={Object {}}
              filterNull={true}
              isAnimationActive={true}
              itemSorter={[Function]}
              itemStyle={Object {}}
              labelStyle={Object {}}
              offset={10}
              separator=" : "
              useTranslate3d={false}
              viewBox={
                            Object {
                                          "x1": 0,
                                          "x2": 0,
                                          "y1": 0,
                                          "y2": 0,
                                        }
              }
              wrapperStyle={Object {}}
/>,
          ],
          "data": Array [
            Object {
              "inventory": 100,
              "isProjected": false,
              "timestamp": 1529336865706,
            },
          ],
          "layout": "horizontal",
          "margin": Object {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          },
          "reverseStackOrder": false,
          "stackOffset": "none",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowDataOverflow": false,
              "allowDecimals": true,
              "allowDuplicatedCategory": true,
              "children": <Label
                offset={-5}
                position="insideBottom"
                style={
                                Object {
                                                "color": "#999999",
                                                "fontSize": 12,
                                              }
                }
                value="Date"
/>,
              "dataKey": "timestamp",
              "domain": Array [
                0,
                "auto",
              ],
              "height": 30,
              "hide": false,
              "mirror": false,
              "orientation": "bottom",
              "padding": Object {
                "left": 0,
                "right": 0,
              },
              "reversed": false,
              "scale": "auto",
              "tick": Object {
                "fontSize": 10,
              },
              "tickCount": 5,
              "tickFormatter": [Function],
              "type": "category",
              "width": 0,
              "xAxisId": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "offset": -5,
                "position": "insideBottom",
                "style": Object {
                  "color": "#999999",
                  "fontSize": 12,
                },
                "value": "Date",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowDataOverflow": false,
              "allowDecimals": true,
              "allowDuplicatedCategory": true,
              "axisLine": false,
              "children": <Label
                angle={-90}
                offset={5}
                position="insideLeft"
                style={
                                Object {
                                                "color": "#999999",
                                                "fontSize": 12,
                                              }
                }
                value="Inventory"
/>,
              "domain": Array [
                "auto",
                "auto",
              ],
              "height": 0,
              "hide": false,
              "mirror": false,
              "orientation": "left",
              "padding": Object {
                "bottom": 0,
                "top": 0,
              },
              "reversed": false,
              "scale": "auto",
              "tick": Object {
                "fontSize": 10,
              },
              "tickCount": 10,
              "tickFormatter": [Function],
              "tickLine": false,
              "type": "number",
              "width": 60,
              "yAxisId": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "angle": -90,
                "offset": 5,
                "position": "insideLeft",
                "style": Object {
                  "color": "#999999",
                  "fontSize": 12,
                },
                "value": "Inventory",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "fill": "none",
              "horizontal": true,
              "horizontalFill": Array [],
              "horizontalPoints": Array [],
              "stroke": "#ccc",
              "vertical": false,
              "verticalFill": Array [],
              "verticalPoints": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeDot": true,
              "animationBegin": 0,
              "animationDuration": 1000,
              "animationEasing": "ease",
              "connectNulls": false,
              "dataKey": "inventory",
              "dot": false,
              "fill": "#fff",
              "hide": false,
              "isAnimationActive": true,
              "legendType": "line",
              "name": "actual",
              "onAnimationEnd": [Function],
              "onAnimationStart": [Function],
              "points": Array [],
              "stroke": "#817CB8",
              "strokeWidth": 2,
              "type": "monotone",
              "xAxisId": 0,
              "yAxisId": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeDot": true,
              "animationBegin": 0,
              "animationDuration": 1000,
              "animationEasing": "ease",
              "connectNulls": false,
              "dataKey": "projectedInventory",
              "dot": false,
              "fill": "#fff",
              "hide": false,
              "isAnimationActive": true,
              "legendType": "line",
              "name": "projected",
              "onAnimationEnd": [Function],
              "onAnimationStart": [Function],
              "points": Array [],
              "stroke": "#817CB8",
              "strokeDasharray": "5 5",
              "strokeWidth": 2,
              "type": "monotone",
              "xAxisId": 0,
              "yAxisId": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "animationDuration": 400,
              "animationEasing": "ease",
              "content": <CumulativeInventoryTooltip
                dateFormat="MMM DD, YYYY"
/>,
              "coordinate": Object {
                "x": 0,
                "y": 0,
              },
              "cursor": Object {
                "opacity": 0.5,
                "stroke": "#817CB8",
                "strokeWidth": 2,
              },
              "cursorStyle": Object {},
              "filterNull": true,
              "isAnimationActive": true,
              "itemSorter": [Function],
              "itemStyle": Object {},
              "labelStyle": Object {},
              "offset": 10,
              "separator": " : ",
              "useTranslate3d": false,
              "viewBox": Object {
                "x1": 0,
                "x2": 0,
                "y1": 0,
                "y2": 0,
              },
              "wrapperStyle": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ResponsiveContainer
          debounce={0}
          height={400}
          width="100%"
>
          <LineChart
                    barCategoryGap="10%"
                    barGap={4}
                    data={
                              Array [
                                        Object {
                                          "inventory": 100,
                                          "isProjected": false,
                                          "timestamp": 1529336865706,
                                        },
                                      ]
                    }
                    layout="horizontal"
                    margin={
                              Object {
                                        "bottom": 5,
                                        "left": 5,
                                        "right": 5,
                                        "top": 5,
                                      }
                    }
                    reverseStackOrder={false}
                    stackOffset="none"
          >
                    <XAxis
                              allowDataOverflow={false}
                              allowDecimals={true}
                              allowDuplicatedCategory={true}
                              dataKey="timestamp"
                              domain={
                                        Array [
                                                  0,
                                                  "auto",
                                                ]
                              }
                              height={30}
                              hide={false}
                              mirror={false}
                              orientation="bottom"
                              padding={
                                        Object {
                                                  "left": 0,
                                                  "right": 0,
                                                }
                              }
                              reversed={false}
                              scale="auto"
                              tick={
                                        Object {
                                                  "fontSize": 10,
                                                }
                              }
                              tickCount={5}
                              tickFormatter={[Function]}
                              type="category"
                              width={0}
                              xAxisId={0}
                    >
                              <Label
                                        offset={-5}
                                        position="insideBottom"
                                        style={
                                                  Object {
                                                            "color": "#999999",
                                                            "fontSize": 12,
                                                          }
                                        }
                                        value="Date"
                              />
                    </XAxis>
                    <YAxis
                              allowDataOverflow={false}
                              allowDecimals={true}
                              allowDuplicatedCategory={true}
                              axisLine={false}
                              domain={
                                        Array [
                                                  "auto",
                                                  "auto",
                                                ]
                              }
                              height={0}
                              hide={false}
                              mirror={false}
                              orientation="left"
                              padding={
                                        Object {
                                                  "bottom": 0,
                                                  "top": 0,
                                                }
                              }
                              reversed={false}
                              scale="auto"
                              tick={
                                        Object {
                                                  "fontSize": 10,
                                                }
                              }
                              tickCount={10}
                              tickFormatter={[Function]}
                              tickLine={false}
                              type="number"
                              width={60}
                              yAxisId={0}
                    >
                              <Label
                                        angle={-90}
                                        offset={5}
                                        position="insideLeft"
                                        style={
                                                  Object {
                                                            "color": "#999999",
                                                            "fontSize": 12,
                                                          }
                                        }
                                        value="Inventory"
                              />
                    </YAxis>
                    <CartesianGrid
                              fill="none"
                              horizontal={true}
                              horizontalFill={Array []}
                              horizontalPoints={Array []}
                              stroke="#ccc"
                              vertical={false}
                              verticalFill={Array []}
                              verticalPoints={Array []}
                    />
                    <Line
                              activeDot={true}
                              animationBegin={0}
                              animationDuration={1000}
                              animationEasing="ease"
                              connectNulls={false}
                              dataKey="inventory"
                              dot={false}
                              fill="#fff"
                              hide={false}
                              isAnimationActive={true}
                              legendType="line"
                              name="actual"
                              onAnimationEnd={[Function]}
                              onAnimationStart={[Function]}
                              points={Array []}
                              stroke="#817CB8"
                              strokeWidth={2}
                              type="monotone"
                              xAxisId={0}
                              yAxisId={0}
                    />
                    <Line
                              activeDot={true}
                              animationBegin={0}
                              animationDuration={1000}
                              animationEasing="ease"
                              connectNulls={false}
                              dataKey="projectedInventory"
                              dot={false}
                              fill="#fff"
                              hide={false}
                              isAnimationActive={true}
                              legendType="line"
                              name="projected"
                              onAnimationEnd={[Function]}
                              onAnimationStart={[Function]}
                              points={Array []}
                              stroke="#817CB8"
                              strokeDasharray="5 5"
                              strokeWidth={2}
                              type="monotone"
                              xAxisId={0}
                              yAxisId={0}
                    />
                    <Tooltip
                              active={false}
                              animationDuration={400}
                              animationEasing="ease"
                              content={
                                        <CumulativeInventoryTooltip
                                                  dateFormat="MMM DD, YYYY"
                                        />
                              }
                              coordinate={
                                        Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                              }
                              cursor={
                                        Object {
                                                  "opacity": 0.5,
                                                  "stroke": "#817CB8",
                                                  "strokeWidth": 2,
                                                }
                              }
                              cursorStyle={Object {}}
                              filterNull={true}
                              isAnimationActive={true}
                              itemSorter={[Function]}
                              itemStyle={Object {}}
                              labelStyle={Object {}}
                              offset={10}
                              separator=" : "
                              useTranslate3d={false}
                              viewBox={
                                        Object {
                                                  "x1": 0,
                                                  "x2": 0,
                                                  "y1": 0,
                                                  "y2": 0,
                                                }
                              }
                              wrapperStyle={Object {}}
                    />
          </LineChart>
</ResponsiveContainer>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <LineChart
            barCategoryGap="10%"
            barGap={4}
            data={
                        Array [
                                    Object {
                                      "inventory": 100,
                                      "isProjected": false,
                                      "timestamp": 1529336865706,
                                    },
                                  ]
            }
            layout="horizontal"
            margin={
                        Object {
                                    "bottom": 5,
                                    "left": 5,
                                    "right": 5,
                                    "top": 5,
                                  }
            }
            reverseStackOrder={false}
            stackOffset="none"
>
            <XAxis
                        allowDataOverflow={false}
                        allowDecimals={true}
                        allowDuplicatedCategory={true}
                        dataKey="timestamp"
                        domain={
                                    Array [
                                                0,
                                                "auto",
                                              ]
                        }
                        height={30}
                        hide={false}
                        mirror={false}
                        orientation="bottom"
                        padding={
                                    Object {
                                                "left": 0,
                                                "right": 0,
                                              }
                        }
                        reversed={false}
                        scale="auto"
                        tick={
                                    Object {
                                                "fontSize": 10,
                                              }
                        }
                        tickCount={5}
                        tickFormatter={[Function]}
                        type="category"
                        width={0}
                        xAxisId={0}
            >
                        <Label
                                    offset={-5}
                                    position="insideBottom"
                                    style={
                                                Object {
                                                            "color": "#999999",
                                                            "fontSize": 12,
                                                          }
                                    }
                                    value="Date"
                        />
            </XAxis>
            <YAxis
                        allowDataOverflow={false}
                        allowDecimals={true}
                        allowDuplicatedCategory={true}
                        axisLine={false}
                        domain={
                                    Array [
                                                "auto",
                                                "auto",
                                              ]
                        }
                        height={0}
                        hide={false}
                        mirror={false}
                        orientation="left"
                        padding={
                                    Object {
                                                "bottom": 0,
                                                "top": 0,
                                              }
                        }
                        reversed={false}
                        scale="auto"
                        tick={
                                    Object {
                                                "fontSize": 10,
                                              }
                        }
                        tickCount={10}
                        tickFormatter={[Function]}
                        tickLine={false}
                        type="number"
                        width={60}
                        yAxisId={0}
            >
                        <Label
                                    angle={-90}
                                    offset={5}
                                    position="insideLeft"
                                    style={
                                                Object {
                                                            "color": "#999999",
                                                            "fontSize": 12,
                                                          }
                                    }
                                    value="Inventory"
                        />
            </YAxis>
            <CartesianGrid
                        fill="none"
                        horizontal={true}
                        horizontalFill={Array []}
                        horizontalPoints={Array []}
                        stroke="#ccc"
                        vertical={false}
                        verticalFill={Array []}
                        verticalPoints={Array []}
            />
            <Line
                        activeDot={true}
                        animationBegin={0}
                        animationDuration={1000}
                        animationEasing="ease"
                        connectNulls={false}
                        dataKey="inventory"
                        dot={false}
                        fill="#fff"
                        hide={false}
                        isAnimationActive={true}
                        legendType="line"
                        name="actual"
                        onAnimationEnd={[Function]}
                        onAnimationStart={[Function]}
                        points={Array []}
                        stroke="#817CB8"
                        strokeWidth={2}
                        type="monotone"
                        xAxisId={0}
                        yAxisId={0}
            />
            <Line
                        activeDot={true}
                        animationBegin={0}
                        animationDuration={1000}
                        animationEasing="ease"
                        connectNulls={false}
                        dataKey="projectedInventory"
                        dot={false}
                        fill="#fff"
                        hide={false}
                        isAnimationActive={true}
                        legendType="line"
                        name="projected"
                        onAnimationEnd={[Function]}
                        onAnimationStart={[Function]}
                        points={Array []}
                        stroke="#817CB8"
                        strokeDasharray="5 5"
                        strokeWidth={2}
                        type="monotone"
                        xAxisId={0}
                        yAxisId={0}
            />
            <Tooltip
                        active={false}
                        animationDuration={400}
                        animationEasing="ease"
                        content={
                                    <CumulativeInventoryTooltip
                                                dateFormat="MMM DD, YYYY"
                                    />
                        }
                        coordinate={
                                    Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                        }
                        cursor={
                                    Object {
                                                "opacity": 0.5,
                                                "stroke": "#817CB8",
                                                "strokeWidth": 2,
                                              }
                        }
                        cursorStyle={Object {}}
                        filterNull={true}
                        isAnimationActive={true}
                        itemSorter={[Function]}
                        itemStyle={Object {}}
                        labelStyle={Object {}}
                        offset={10}
                        separator=" : "
                        useTranslate3d={false}
                        viewBox={
                                    Object {
                                                "x1": 0,
                                                "x2": 0,
                                                "y1": 0,
                                                "y2": 0,
                                              }
                        }
                        wrapperStyle={Object {}}
            />
</LineChart>,
          "debounce": 0,
          "height": 400,
          "width": "100%",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "barCategoryGap": "10%",
            "barGap": 4,
            "children": Array [
              <XAxis
                allowDataOverflow={false}
                allowDecimals={true}
                allowDuplicatedCategory={true}
                dataKey="timestamp"
                domain={
                                Array [
                                                0,
                                                "auto",
                                              ]
                }
                height={30}
                hide={false}
                mirror={false}
                orientation="bottom"
                padding={
                                Object {
                                                "left": 0,
                                                "right": 0,
                                              }
                }
                reversed={false}
                scale="auto"
                tick={
                                Object {
                                                "fontSize": 10,
                                              }
                }
                tickCount={5}
                tickFormatter={[Function]}
                type="category"
                width={0}
                xAxisId={0}
>
                <Label
                                offset={-5}
                                position="insideBottom"
                                style={
                                                Object {
                                                                "color": "#999999",
                                                                "fontSize": 12,
                                                              }
                                }
                                value="Date"
                />
</XAxis>,
              <YAxis
                allowDataOverflow={false}
                allowDecimals={true}
                allowDuplicatedCategory={true}
                axisLine={false}
                domain={
                                Array [
                                                "auto",
                                                "auto",
                                              ]
                }
                height={0}
                hide={false}
                mirror={false}
                orientation="left"
                padding={
                                Object {
                                                "bottom": 0,
                                                "top": 0,
                                              }
                }
                reversed={false}
                scale="auto"
                tick={
                                Object {
                                                "fontSize": 10,
                                              }
                }
                tickCount={10}
                tickFormatter={[Function]}
                tickLine={false}
                type="number"
                width={60}
                yAxisId={0}
>
                <Label
                                angle={-90}
                                offset={5}
                                position="insideLeft"
                                style={
                                                Object {
                                                                "color": "#999999",
                                                                "fontSize": 12,
                                                              }
                                }
                                value="Inventory"
                />
</YAxis>,
              <CartesianGrid
                fill="none"
                horizontal={true}
                horizontalFill={Array []}
                horizontalPoints={Array []}
                stroke="#ccc"
                vertical={false}
                verticalFill={Array []}
                verticalPoints={Array []}
/>,
              <Line
                activeDot={true}
                animationBegin={0}
                animationDuration={1000}
                animationEasing="ease"
                connectNulls={false}
                dataKey="inventory"
                dot={false}
                fill="#fff"
                hide={false}
                isAnimationActive={true}
                legendType="line"
                name="actual"
                onAnimationEnd={[Function]}
                onAnimationStart={[Function]}
                points={Array []}
                stroke="#817CB8"
                strokeWidth={2}
                type="monotone"
                xAxisId={0}
                yAxisId={0}
/>,
              <Line
                activeDot={true}
                animationBegin={0}
                animationDuration={1000}
                animationEasing="ease"
                connectNulls={false}
                dataKey="projectedInventory"
                dot={false}
                fill="#fff"
                hide={false}
                isAnimationActive={true}
                legendType="line"
                name="projected"
                onAnimationEnd={[Function]}
                onAnimationStart={[Function]}
                points={Array []}
                stroke="#817CB8"
                strokeDasharray="5 5"
                strokeWidth={2}
                type="monotone"
                xAxisId={0}
                yAxisId={0}
/>,
              <Tooltip
                active={false}
                animationDuration={400}
                animationEasing="ease"
                content={
                                <CumulativeInventoryTooltip
                                                dateFormat="MMM DD, YYYY"
                                />
                }
                coordinate={
                                Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                }
                cursor={
                                Object {
                                                "opacity": 0.5,
                                                "stroke": "#817CB8",
                                                "strokeWidth": 2,
                                              }
                }
                cursorStyle={Object {}}
                filterNull={true}
                isAnimationActive={true}
                itemSorter={[Function]}
                itemStyle={Object {}}
                labelStyle={Object {}}
                offset={10}
                separator=" : "
                useTranslate3d={false}
                viewBox={
                                Object {
                                                "x1": 0,
                                                "x2": 0,
                                                "y1": 0,
                                                "y2": 0,
                                              }
                }
                wrapperStyle={Object {}}
/>,
            ],
            "data": Array [
              Object {
                "inventory": 100,
                "isProjected": false,
                "timestamp": 1529336865706,
              },
            ],
            "layout": "horizontal",
            "margin": Object {
              "bottom": 5,
              "left": 5,
              "right": 5,
              "top": 5,
            },
            "reverseStackOrder": false,
            "stackOffset": "none",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowDataOverflow": false,
                "allowDecimals": true,
                "allowDuplicatedCategory": true,
                "children": <Label
                  offset={-5}
                  position="insideBottom"
                  style={
                                    Object {
                                                      "color": "#999999",
                                                      "fontSize": 12,
                                                    }
                  }
                  value="Date"
/>,
                "dataKey": "timestamp",
                "domain": Array [
                  0,
                  "auto",
                ],
                "height": 30,
                "hide": false,
                "mirror": false,
                "orientation": "bottom",
                "padding": Object {
                  "left": 0,
                  "right": 0,
                },
                "reversed": false,
                "scale": "auto",
                "tick": Object {
                  "fontSize": 10,
                },
                "tickCount": 5,
                "tickFormatter": [Function],
                "type": "category",
                "width": 0,
                "xAxisId": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "offset": -5,
                  "position": "insideBottom",
                  "style": Object {
                    "color": "#999999",
                    "fontSize": 12,
                  },
                  "value": "Date",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowDataOverflow": false,
                "allowDecimals": true,
                "allowDuplicatedCategory": true,
                "axisLine": false,
                "children": <Label
                  angle={-90}
                  offset={5}
                  position="insideLeft"
                  style={
                                    Object {
                                                      "color": "#999999",
                                                      "fontSize": 12,
                                                    }
                  }
                  value="Inventory"
/>,
                "domain": Array [
                  "auto",
                  "auto",
                ],
                "height": 0,
                "hide": false,
                "mirror": false,
                "orientation": "left",
                "padding": Object {
                  "bottom": 0,
                  "top": 0,
                },
                "reversed": false,
                "scale": "auto",
                "tick": Object {
                  "fontSize": 10,
                },
                "tickCount": 10,
                "tickFormatter": [Function],
                "tickLine": false,
                "type": "number",
                "width": 60,
                "yAxisId": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "angle": -90,
                  "offset": 5,
                  "position": "insideLeft",
                  "style": Object {
                    "color": "#999999",
                    "fontSize": 12,
                  },
                  "value": "Inventory",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fill": "none",
                "horizontal": true,
                "horizontalFill": Array [],
                "horizontalPoints": Array [],
                "stroke": "#ccc",
                "vertical": false,
                "verticalFill": Array [],
                "verticalPoints": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeDot": true,
                "animationBegin": 0,
                "animationDuration": 1000,
                "animationEasing": "ease",
                "connectNulls": false,
                "dataKey": "inventory",
                "dot": false,
                "fill": "#fff",
                "hide": false,
                "isAnimationActive": true,
                "legendType": "line",
                "name": "actual",
                "onAnimationEnd": [Function],
                "onAnimationStart": [Function],
                "points": Array [],
                "stroke": "#817CB8",
                "strokeWidth": 2,
                "type": "monotone",
                "xAxisId": 0,
                "yAxisId": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeDot": true,
                "animationBegin": 0,
                "animationDuration": 1000,
                "animationEasing": "ease",
                "connectNulls": false,
                "dataKey": "projectedInventory",
                "dot": false,
                "fill": "#fff",
                "hide": false,
                "isAnimationActive": true,
                "legendType": "line",
                "name": "projected",
                "onAnimationEnd": [Function],
                "onAnimationStart": [Function],
                "points": Array [],
                "stroke": "#817CB8",
                "strokeDasharray": "5 5",
                "strokeWidth": 2,
                "type": "monotone",
                "xAxisId": 0,
                "yAxisId": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "animationDuration": 400,
                "animationEasing": "ease",
                "content": <CumulativeInventoryTooltip
                  dateFormat="MMM DD, YYYY"
/>,
                "coordinate": Object {
                  "x": 0,
                  "y": 0,
                },
                "cursor": Object {
                  "opacity": 0.5,
                  "stroke": "#817CB8",
                  "strokeWidth": 2,
                },
                "cursorStyle": Object {},
                "filterNull": true,
                "isAnimationActive": true,
                "itemSorter": [Function],
                "itemStyle": Object {},
                "labelStyle": Object {},
                "offset": 10,
                "separator": " : ",
                "useTranslate3d": false,
                "viewBox": Object {
                  "x1": 0,
                  "x2": 0,
                  "y1": 0,
                  "y2": 0,
                },
                "wrapperStyle": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<CumulativeInventoryChart /> should render correctly with a different height 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CumulativeInventoryChart
    data={
        Array [
            Object {
              "eventId": 1,
              "id": 1,
              "inventory": 100,
              "isProjected": false,
              "periodicInventory": 100,
              "periodicRevenue": 100,
              "revenue": 100,
              "timestamp": 1529336865706,
            },
          ]
    }
    dateFormat="MMM DD, YYYY"
    height={300}
    renderNoData={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <ResponsiveContainer
        debounce={0}
        height={300}
        width="100%"
>
        <LineChart
                barCategoryGap="10%"
                barGap={4}
                data={
                        Array [
                                Object {
                                  "inventory": 100,
                                  "isProjected": false,
                                  "timestamp": 1529336865706,
                                },
                              ]
                }
                layout="horizontal"
                margin={
                        Object {
                                "bottom": 5,
                                "left": 5,
                                "right": 5,
                                "top": 5,
                              }
                }
                reverseStackOrder={false}
                stackOffset="none"
        >
                <XAxis
                        allowDataOverflow={false}
                        allowDecimals={true}
                        allowDuplicatedCategory={true}
                        dataKey="timestamp"
                        domain={
                                Array [
                                        0,
                                        "auto",
                                      ]
                        }
                        height={30}
                        hide={false}
                        mirror={false}
                        orientation="bottom"
                        padding={
                                Object {
                                        "left": 0,
                                        "right": 0,
                                      }
                        }
                        reversed={false}
                        scale="auto"
                        tick={
                                Object {
                                        "fontSize": 10,
                                      }
                        }
                        tickCount={5}
                        tickFormatter={[Function]}
                        type="category"
                        width={0}
                        xAxisId={0}
                >
                        <Label
                                offset={-5}
                                position="insideBottom"
                                style={
                                        Object {
                                                "color": "#999999",
                                                "fontSize": 12,
                                              }
                                }
                                value="Date"
                        />
                </XAxis>
                <YAxis
                        allowDataOverflow={false}
                        allowDecimals={true}
                        allowDuplicatedCategory={true}
                        axisLine={false}
                        domain={
                                Array [
                                        "auto",
                                        "auto",
                                      ]
                        }
                        height={0}
                        hide={false}
                        mirror={false}
                        orientation="left"
                        padding={
                                Object {
                                        "bottom": 0,
                                        "top": 0,
                                      }
                        }
                        reversed={false}
                        scale="auto"
                        tick={
                                Object {
                                        "fontSize": 10,
                                      }
                        }
                        tickCount={10}
                        tickFormatter={[Function]}
                        tickLine={false}
                        type="number"
                        width={60}
                        yAxisId={0}
                >
                        <Label
                                angle={-90}
                                offset={5}
                                position="insideLeft"
                                style={
                                        Object {
                                                "color": "#999999",
                                                "fontSize": 12,
                                              }
                                }
                                value="Inventory"
                        />
                </YAxis>
                <CartesianGrid
                        fill="none"
                        horizontal={true}
                        horizontalFill={Array []}
                        horizontalPoints={Array []}
                        stroke="#ccc"
                        vertical={false}
                        verticalFill={Array []}
                        verticalPoints={Array []}
                />
                <Line
                        activeDot={true}
                        animationBegin={0}
                        animationDuration={1000}
                        animationEasing="ease"
                        connectNulls={false}
                        dataKey="inventory"
                        dot={false}
                        fill="#fff"
                        hide={false}
                        isAnimationActive={true}
                        legendType="line"
                        name="actual"
                        onAnimationEnd={[Function]}
                        onAnimationStart={[Function]}
                        points={Array []}
                        stroke="#817CB8"
                        strokeWidth={2}
                        type="monotone"
                        xAxisId={0}
                        yAxisId={0}
                />
                <Line
                        activeDot={true}
                        animationBegin={0}
                        animationDuration={1000}
                        animationEasing="ease"
                        connectNulls={false}
                        dataKey="projectedInventory"
                        dot={false}
                        fill="#fff"
                        hide={false}
                        isAnimationActive={true}
                        legendType="line"
                        name="projected"
                        onAnimationEnd={[Function]}
                        onAnimationStart={[Function]}
                        points={Array []}
                        stroke="#817CB8"
                        strokeDasharray="5 5"
                        strokeWidth={2}
                        type="monotone"
                        xAxisId={0}
                        yAxisId={0}
                />
                <Tooltip
                        active={false}
                        animationDuration={400}
                        animationEasing="ease"
                        content={
                                <CumulativeInventoryTooltip
                                        dateFormat="MMM DD, YYYY"
                                />
                        }
                        coordinate={
                                Object {
                                        "x": 0,
                                        "y": 0,
                                      }
                        }
                        cursor={
                                Object {
                                        "opacity": 0.5,
                                        "stroke": "#817CB8",
                                        "strokeWidth": 2,
                                      }
                        }
                        cursorStyle={Object {}}
                        filterNull={true}
                        isAnimationActive={true}
                        itemSorter={[Function]}
                        itemStyle={Object {}}
                        labelStyle={Object {}}
                        offset={10}
                        separator=" : "
                        useTranslate3d={false}
                        viewBox={
                                Object {
                                        "x1": 0,
                                        "x2": 0,
                                        "y1": 0,
                                        "y2": 0,
                                      }
                        }
                        wrapperStyle={Object {}}
                />
        </LineChart>
</ResponsiveContainer>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <LineChart
          barCategoryGap="10%"
          barGap={4}
          data={
                    Array [
                              Object {
                                "inventory": 100,
                                "isProjected": false,
                                "timestamp": 1529336865706,
                              },
                            ]
          }
          layout="horizontal"
          margin={
                    Object {
                              "bottom": 5,
                              "left": 5,
                              "right": 5,
                              "top": 5,
                            }
          }
          reverseStackOrder={false}
          stackOffset="none"
>
          <XAxis
                    allowDataOverflow={false}
                    allowDecimals={true}
                    allowDuplicatedCategory={true}
                    dataKey="timestamp"
                    domain={
                              Array [
                                        0,
                                        "auto",
                                      ]
                    }
                    height={30}
                    hide={false}
                    mirror={false}
                    orientation="bottom"
                    padding={
                              Object {
                                        "left": 0,
                                        "right": 0,
                                      }
                    }
                    reversed={false}
                    scale="auto"
                    tick={
                              Object {
                                        "fontSize": 10,
                                      }
                    }
                    tickCount={5}
                    tickFormatter={[Function]}
                    type="category"
                    width={0}
                    xAxisId={0}
          >
                    <Label
                              offset={-5}
                              position="insideBottom"
                              style={
                                        Object {
                                                  "color": "#999999",
                                                  "fontSize": 12,
                                                }
                              }
                              value="Date"
                    />
          </XAxis>
          <YAxis
                    allowDataOverflow={false}
                    allowDecimals={true}
                    allowDuplicatedCategory={true}
                    axisLine={false}
                    domain={
                              Array [
                                        "auto",
                                        "auto",
                                      ]
                    }
                    height={0}
                    hide={false}
                    mirror={false}
                    orientation="left"
                    padding={
                              Object {
                                        "bottom": 0,
                                        "top": 0,
                                      }
                    }
                    reversed={false}
                    scale="auto"
                    tick={
                              Object {
                                        "fontSize": 10,
                                      }
                    }
                    tickCount={10}
                    tickFormatter={[Function]}
                    tickLine={false}
                    type="number"
                    width={60}
                    yAxisId={0}
          >
                    <Label
                              angle={-90}
                              offset={5}
                              position="insideLeft"
                              style={
                                        Object {
                                                  "color": "#999999",
                                                  "fontSize": 12,
                                                }
                              }
                              value="Inventory"
                    />
          </YAxis>
          <CartesianGrid
                    fill="none"
                    horizontal={true}
                    horizontalFill={Array []}
                    horizontalPoints={Array []}
                    stroke="#ccc"
                    vertical={false}
                    verticalFill={Array []}
                    verticalPoints={Array []}
          />
          <Line
                    activeDot={true}
                    animationBegin={0}
                    animationDuration={1000}
                    animationEasing="ease"
                    connectNulls={false}
                    dataKey="inventory"
                    dot={false}
                    fill="#fff"
                    hide={false}
                    isAnimationActive={true}
                    legendType="line"
                    name="actual"
                    onAnimationEnd={[Function]}
                    onAnimationStart={[Function]}
                    points={Array []}
                    stroke="#817CB8"
                    strokeWidth={2}
                    type="monotone"
                    xAxisId={0}
                    yAxisId={0}
          />
          <Line
                    activeDot={true}
                    animationBegin={0}
                    animationDuration={1000}
                    animationEasing="ease"
                    connectNulls={false}
                    dataKey="projectedInventory"
                    dot={false}
                    fill="#fff"
                    hide={false}
                    isAnimationActive={true}
                    legendType="line"
                    name="projected"
                    onAnimationEnd={[Function]}
                    onAnimationStart={[Function]}
                    points={Array []}
                    stroke="#817CB8"
                    strokeDasharray="5 5"
                    strokeWidth={2}
                    type="monotone"
                    xAxisId={0}
                    yAxisId={0}
          />
          <Tooltip
                    active={false}
                    animationDuration={400}
                    animationEasing="ease"
                    content={
                              <CumulativeInventoryTooltip
                                        dateFormat="MMM DD, YYYY"
                              />
                    }
                    coordinate={
                              Object {
                                        "x": 0,
                                        "y": 0,
                                      }
                    }
                    cursor={
                              Object {
                                        "opacity": 0.5,
                                        "stroke": "#817CB8",
                                        "strokeWidth": 2,
                                      }
                    }
                    cursorStyle={Object {}}
                    filterNull={true}
                    isAnimationActive={true}
                    itemSorter={[Function]}
                    itemStyle={Object {}}
                    labelStyle={Object {}}
                    offset={10}
                    separator=" : "
                    useTranslate3d={false}
                    viewBox={
                              Object {
                                        "x1": 0,
                                        "x2": 0,
                                        "y1": 0,
                                        "y2": 0,
                                      }
                    }
                    wrapperStyle={Object {}}
          />
</LineChart>,
        "debounce": 0,
        "height": 300,
        "width": "100%",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "barCategoryGap": "10%",
          "barGap": 4,
          "children": Array [
            <XAxis
              allowDataOverflow={false}
              allowDecimals={true}
              allowDuplicatedCategory={true}
              dataKey="timestamp"
              domain={
                            Array [
                                          0,
                                          "auto",
                                        ]
              }
              height={30}
              hide={false}
              mirror={false}
              orientation="bottom"
              padding={
                            Object {
                                          "left": 0,
                                          "right": 0,
                                        }
              }
              reversed={false}
              scale="auto"
              tick={
                            Object {
                                          "fontSize": 10,
                                        }
              }
              tickCount={5}
              tickFormatter={[Function]}
              type="category"
              width={0}
              xAxisId={0}
>
              <Label
                            offset={-5}
                            position="insideBottom"
                            style={
                                          Object {
                                                        "color": "#999999",
                                                        "fontSize": 12,
                                                      }
                            }
                            value="Date"
              />
</XAxis>,
            <YAxis
              allowDataOverflow={false}
              allowDecimals={true}
              allowDuplicatedCategory={true}
              axisLine={false}
              domain={
                            Array [
                                          "auto",
                                          "auto",
                                        ]
              }
              height={0}
              hide={false}
              mirror={false}
              orientation="left"
              padding={
                            Object {
                                          "bottom": 0,
                                          "top": 0,
                                        }
              }
              reversed={false}
              scale="auto"
              tick={
                            Object {
                                          "fontSize": 10,
                                        }
              }
              tickCount={10}
              tickFormatter={[Function]}
              tickLine={false}
              type="number"
              width={60}
              yAxisId={0}
>
              <Label
                            angle={-90}
                            offset={5}
                            position="insideLeft"
                            style={
                                          Object {
                                                        "color": "#999999",
                                                        "fontSize": 12,
                                                      }
                            }
                            value="Inventory"
              />
</YAxis>,
            <CartesianGrid
              fill="none"
              horizontal={true}
              horizontalFill={Array []}
              horizontalPoints={Array []}
              stroke="#ccc"
              vertical={false}
              verticalFill={Array []}
              verticalPoints={Array []}
/>,
            <Line
              activeDot={true}
              animationBegin={0}
              animationDuration={1000}
              animationEasing="ease"
              connectNulls={false}
              dataKey="inventory"
              dot={false}
              fill="#fff"
              hide={false}
              isAnimationActive={true}
              legendType="line"
              name="actual"
              onAnimationEnd={[Function]}
              onAnimationStart={[Function]}
              points={Array []}
              stroke="#817CB8"
              strokeWidth={2}
              type="monotone"
              xAxisId={0}
              yAxisId={0}
/>,
            <Line
              activeDot={true}
              animationBegin={0}
              animationDuration={1000}
              animationEasing="ease"
              connectNulls={false}
              dataKey="projectedInventory"
              dot={false}
              fill="#fff"
              hide={false}
              isAnimationActive={true}
              legendType="line"
              name="projected"
              onAnimationEnd={[Function]}
              onAnimationStart={[Function]}
              points={Array []}
              stroke="#817CB8"
              strokeDasharray="5 5"
              strokeWidth={2}
              type="monotone"
              xAxisId={0}
              yAxisId={0}
/>,
            <Tooltip
              active={false}
              animationDuration={400}
              animationEasing="ease"
              content={
                            <CumulativeInventoryTooltip
                                          dateFormat="MMM DD, YYYY"
                            />
              }
              coordinate={
                            Object {
                                          "x": 0,
                                          "y": 0,
                                        }
              }
              cursor={
                            Object {
                                          "opacity": 0.5,
                                          "stroke": "#817CB8",
                                          "strokeWidth": 2,
                                        }
              }
              cursorStyle={Object {}}
              filterNull={true}
              isAnimationActive={true}
              itemSorter={[Function]}
              itemStyle={Object {}}
              labelStyle={Object {}}
              offset={10}
              separator=" : "
              useTranslate3d={false}
              viewBox={
                            Object {
                                          "x1": 0,
                                          "x2": 0,
                                          "y1": 0,
                                          "y2": 0,
                                        }
              }
              wrapperStyle={Object {}}
/>,
          ],
          "data": Array [
            Object {
              "inventory": 100,
              "isProjected": false,
              "timestamp": 1529336865706,
            },
          ],
          "layout": "horizontal",
          "margin": Object {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          },
          "reverseStackOrder": false,
          "stackOffset": "none",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowDataOverflow": false,
              "allowDecimals": true,
              "allowDuplicatedCategory": true,
              "children": <Label
                offset={-5}
                position="insideBottom"
                style={
                                Object {
                                                "color": "#999999",
                                                "fontSize": 12,
                                              }
                }
                value="Date"
/>,
              "dataKey": "timestamp",
              "domain": Array [
                0,
                "auto",
              ],
              "height": 30,
              "hide": false,
              "mirror": false,
              "orientation": "bottom",
              "padding": Object {
                "left": 0,
                "right": 0,
              },
              "reversed": false,
              "scale": "auto",
              "tick": Object {
                "fontSize": 10,
              },
              "tickCount": 5,
              "tickFormatter": [Function],
              "type": "category",
              "width": 0,
              "xAxisId": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "offset": -5,
                "position": "insideBottom",
                "style": Object {
                  "color": "#999999",
                  "fontSize": 12,
                },
                "value": "Date",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowDataOverflow": false,
              "allowDecimals": true,
              "allowDuplicatedCategory": true,
              "axisLine": false,
              "children": <Label
                angle={-90}
                offset={5}
                position="insideLeft"
                style={
                                Object {
                                                "color": "#999999",
                                                "fontSize": 12,
                                              }
                }
                value="Inventory"
/>,
              "domain": Array [
                "auto",
                "auto",
              ],
              "height": 0,
              "hide": false,
              "mirror": false,
              "orientation": "left",
              "padding": Object {
                "bottom": 0,
                "top": 0,
              },
              "reversed": false,
              "scale": "auto",
              "tick": Object {
                "fontSize": 10,
              },
              "tickCount": 10,
              "tickFormatter": [Function],
              "tickLine": false,
              "type": "number",
              "width": 60,
              "yAxisId": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "angle": -90,
                "offset": 5,
                "position": "insideLeft",
                "style": Object {
                  "color": "#999999",
                  "fontSize": 12,
                },
                "value": "Inventory",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "fill": "none",
              "horizontal": true,
              "horizontalFill": Array [],
              "horizontalPoints": Array [],
              "stroke": "#ccc",
              "vertical": false,
              "verticalFill": Array [],
              "verticalPoints": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeDot": true,
              "animationBegin": 0,
              "animationDuration": 1000,
              "animationEasing": "ease",
              "connectNulls": false,
              "dataKey": "inventory",
              "dot": false,
              "fill": "#fff",
              "hide": false,
              "isAnimationActive": true,
              "legendType": "line",
              "name": "actual",
              "onAnimationEnd": [Function],
              "onAnimationStart": [Function],
              "points": Array [],
              "stroke": "#817CB8",
              "strokeWidth": 2,
              "type": "monotone",
              "xAxisId": 0,
              "yAxisId": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeDot": true,
              "animationBegin": 0,
              "animationDuration": 1000,
              "animationEasing": "ease",
              "connectNulls": false,
              "dataKey": "projectedInventory",
              "dot": false,
              "fill": "#fff",
              "hide": false,
              "isAnimationActive": true,
              "legendType": "line",
              "name": "projected",
              "onAnimationEnd": [Function],
              "onAnimationStart": [Function],
              "points": Array [],
              "stroke": "#817CB8",
              "strokeDasharray": "5 5",
              "strokeWidth": 2,
              "type": "monotone",
              "xAxisId": 0,
              "yAxisId": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "animationDuration": 400,
              "animationEasing": "ease",
              "content": <CumulativeInventoryTooltip
                dateFormat="MMM DD, YYYY"
/>,
              "coordinate": Object {
                "x": 0,
                "y": 0,
              },
              "cursor": Object {
                "opacity": 0.5,
                "stroke": "#817CB8",
                "strokeWidth": 2,
              },
              "cursorStyle": Object {},
              "filterNull": true,
              "isAnimationActive": true,
              "itemSorter": [Function],
              "itemStyle": Object {},
              "labelStyle": Object {},
              "offset": 10,
              "separator": " : ",
              "useTranslate3d": false,
              "viewBox": Object {
                "x1": 0,
                "x2": 0,
                "y1": 0,
                "y2": 0,
              },
              "wrapperStyle": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ResponsiveContainer
          debounce={0}
          height={300}
          width="100%"
>
          <LineChart
                    barCategoryGap="10%"
                    barGap={4}
                    data={
                              Array [
                                        Object {
                                          "inventory": 100,
                                          "isProjected": false,
                                          "timestamp": 1529336865706,
                                        },
                                      ]
                    }
                    layout="horizontal"
                    margin={
                              Object {
                                        "bottom": 5,
                                        "left": 5,
                                        "right": 5,
                                        "top": 5,
                                      }
                    }
                    reverseStackOrder={false}
                    stackOffset="none"
          >
                    <XAxis
                              allowDataOverflow={false}
                              allowDecimals={true}
                              allowDuplicatedCategory={true}
                              dataKey="timestamp"
                              domain={
                                        Array [
                                                  0,
                                                  "auto",
                                                ]
                              }
                              height={30}
                              hide={false}
                              mirror={false}
                              orientation="bottom"
                              padding={
                                        Object {
                                                  "left": 0,
                                                  "right": 0,
                                                }
                              }
                              reversed={false}
                              scale="auto"
                              tick={
                                        Object {
                                                  "fontSize": 10,
                                                }
                              }
                              tickCount={5}
                              tickFormatter={[Function]}
                              type="category"
                              width={0}
                              xAxisId={0}
                    >
                              <Label
                                        offset={-5}
                                        position="insideBottom"
                                        style={
                                                  Object {
                                                            "color": "#999999",
                                                            "fontSize": 12,
                                                          }
                                        }
                                        value="Date"
                              />
                    </XAxis>
                    <YAxis
                              allowDataOverflow={false}
                              allowDecimals={true}
                              allowDuplicatedCategory={true}
                              axisLine={false}
                              domain={
                                        Array [
                                                  "auto",
                                                  "auto",
                                                ]
                              }
                              height={0}
                              hide={false}
                              mirror={false}
                              orientation="left"
                              padding={
                                        Object {
                                                  "bottom": 0,
                                                  "top": 0,
                                                }
                              }
                              reversed={false}
                              scale="auto"
                              tick={
                                        Object {
                                                  "fontSize": 10,
                                                }
                              }
                              tickCount={10}
                              tickFormatter={[Function]}
                              tickLine={false}
                              type="number"
                              width={60}
                              yAxisId={0}
                    >
                              <Label
                                        angle={-90}
                                        offset={5}
                                        position="insideLeft"
                                        style={
                                                  Object {
                                                            "color": "#999999",
                                                            "fontSize": 12,
                                                          }
                                        }
                                        value="Inventory"
                              />
                    </YAxis>
                    <CartesianGrid
                              fill="none"
                              horizontal={true}
                              horizontalFill={Array []}
                              horizontalPoints={Array []}
                              stroke="#ccc"
                              vertical={false}
                              verticalFill={Array []}
                              verticalPoints={Array []}
                    />
                    <Line
                              activeDot={true}
                              animationBegin={0}
                              animationDuration={1000}
                              animationEasing="ease"
                              connectNulls={false}
                              dataKey="inventory"
                              dot={false}
                              fill="#fff"
                              hide={false}
                              isAnimationActive={true}
                              legendType="line"
                              name="actual"
                              onAnimationEnd={[Function]}
                              onAnimationStart={[Function]}
                              points={Array []}
                              stroke="#817CB8"
                              strokeWidth={2}
                              type="monotone"
                              xAxisId={0}
                              yAxisId={0}
                    />
                    <Line
                              activeDot={true}
                              animationBegin={0}
                              animationDuration={1000}
                              animationEasing="ease"
                              connectNulls={false}
                              dataKey="projectedInventory"
                              dot={false}
                              fill="#fff"
                              hide={false}
                              isAnimationActive={true}
                              legendType="line"
                              name="projected"
                              onAnimationEnd={[Function]}
                              onAnimationStart={[Function]}
                              points={Array []}
                              stroke="#817CB8"
                              strokeDasharray="5 5"
                              strokeWidth={2}
                              type="monotone"
                              xAxisId={0}
                              yAxisId={0}
                    />
                    <Tooltip
                              active={false}
                              animationDuration={400}
                              animationEasing="ease"
                              content={
                                        <CumulativeInventoryTooltip
                                                  dateFormat="MMM DD, YYYY"
                                        />
                              }
                              coordinate={
                                        Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                              }
                              cursor={
                                        Object {
                                                  "opacity": 0.5,
                                                  "stroke": "#817CB8",
                                                  "strokeWidth": 2,
                                                }
                              }
                              cursorStyle={Object {}}
                              filterNull={true}
                              isAnimationActive={true}
                              itemSorter={[Function]}
                              itemStyle={Object {}}
                              labelStyle={Object {}}
                              offset={10}
                              separator=" : "
                              useTranslate3d={false}
                              viewBox={
                                        Object {
                                                  "x1": 0,
                                                  "x2": 0,
                                                  "y1": 0,
                                                  "y2": 0,
                                                }
                              }
                              wrapperStyle={Object {}}
                    />
          </LineChart>
</ResponsiveContainer>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <LineChart
            barCategoryGap="10%"
            barGap={4}
            data={
                        Array [
                                    Object {
                                      "inventory": 100,
                                      "isProjected": false,
                                      "timestamp": 1529336865706,
                                    },
                                  ]
            }
            layout="horizontal"
            margin={
                        Object {
                                    "bottom": 5,
                                    "left": 5,
                                    "right": 5,
                                    "top": 5,
                                  }
            }
            reverseStackOrder={false}
            stackOffset="none"
>
            <XAxis
                        allowDataOverflow={false}
                        allowDecimals={true}
                        allowDuplicatedCategory={true}
                        dataKey="timestamp"
                        domain={
                                    Array [
                                                0,
                                                "auto",
                                              ]
                        }
                        height={30}
                        hide={false}
                        mirror={false}
                        orientation="bottom"
                        padding={
                                    Object {
                                                "left": 0,
                                                "right": 0,
                                              }
                        }
                        reversed={false}
                        scale="auto"
                        tick={
                                    Object {
                                                "fontSize": 10,
                                              }
                        }
                        tickCount={5}
                        tickFormatter={[Function]}
                        type="category"
                        width={0}
                        xAxisId={0}
            >
                        <Label
                                    offset={-5}
                                    position="insideBottom"
                                    style={
                                                Object {
                                                            "color": "#999999",
                                                            "fontSize": 12,
                                                          }
                                    }
                                    value="Date"
                        />
            </XAxis>
            <YAxis
                        allowDataOverflow={false}
                        allowDecimals={true}
                        allowDuplicatedCategory={true}
                        axisLine={false}
                        domain={
                                    Array [
                                                "auto",
                                                "auto",
                                              ]
                        }
                        height={0}
                        hide={false}
                        mirror={false}
                        orientation="left"
                        padding={
                                    Object {
                                                "bottom": 0,
                                                "top": 0,
                                              }
                        }
                        reversed={false}
                        scale="auto"
                        tick={
                                    Object {
                                                "fontSize": 10,
                                              }
                        }
                        tickCount={10}
                        tickFormatter={[Function]}
                        tickLine={false}
                        type="number"
                        width={60}
                        yAxisId={0}
            >
                        <Label
                                    angle={-90}
                                    offset={5}
                                    position="insideLeft"
                                    style={
                                                Object {
                                                            "color": "#999999",
                                                            "fontSize": 12,
                                                          }
                                    }
                                    value="Inventory"
                        />
            </YAxis>
            <CartesianGrid
                        fill="none"
                        horizontal={true}
                        horizontalFill={Array []}
                        horizontalPoints={Array []}
                        stroke="#ccc"
                        vertical={false}
                        verticalFill={Array []}
                        verticalPoints={Array []}
            />
            <Line
                        activeDot={true}
                        animationBegin={0}
                        animationDuration={1000}
                        animationEasing="ease"
                        connectNulls={false}
                        dataKey="inventory"
                        dot={false}
                        fill="#fff"
                        hide={false}
                        isAnimationActive={true}
                        legendType="line"
                        name="actual"
                        onAnimationEnd={[Function]}
                        onAnimationStart={[Function]}
                        points={Array []}
                        stroke="#817CB8"
                        strokeWidth={2}
                        type="monotone"
                        xAxisId={0}
                        yAxisId={0}
            />
            <Line
                        activeDot={true}
                        animationBegin={0}
                        animationDuration={1000}
                        animationEasing="ease"
                        connectNulls={false}
                        dataKey="projectedInventory"
                        dot={false}
                        fill="#fff"
                        hide={false}
                        isAnimationActive={true}
                        legendType="line"
                        name="projected"
                        onAnimationEnd={[Function]}
                        onAnimationStart={[Function]}
                        points={Array []}
                        stroke="#817CB8"
                        strokeDasharray="5 5"
                        strokeWidth={2}
                        type="monotone"
                        xAxisId={0}
                        yAxisId={0}
            />
            <Tooltip
                        active={false}
                        animationDuration={400}
                        animationEasing="ease"
                        content={
                                    <CumulativeInventoryTooltip
                                                dateFormat="MMM DD, YYYY"
                                    />
                        }
                        coordinate={
                                    Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                        }
                        cursor={
                                    Object {
                                                "opacity": 0.5,
                                                "stroke": "#817CB8",
                                                "strokeWidth": 2,
                                              }
                        }
                        cursorStyle={Object {}}
                        filterNull={true}
                        isAnimationActive={true}
                        itemSorter={[Function]}
                        itemStyle={Object {}}
                        labelStyle={Object {}}
                        offset={10}
                        separator=" : "
                        useTranslate3d={false}
                        viewBox={
                                    Object {
                                                "x1": 0,
                                                "x2": 0,
                                                "y1": 0,
                                                "y2": 0,
                                              }
                        }
                        wrapperStyle={Object {}}
            />
</LineChart>,
          "debounce": 0,
          "height": 300,
          "width": "100%",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "barCategoryGap": "10%",
            "barGap": 4,
            "children": Array [
              <XAxis
                allowDataOverflow={false}
                allowDecimals={true}
                allowDuplicatedCategory={true}
                dataKey="timestamp"
                domain={
                                Array [
                                                0,
                                                "auto",
                                              ]
                }
                height={30}
                hide={false}
                mirror={false}
                orientation="bottom"
                padding={
                                Object {
                                                "left": 0,
                                                "right": 0,
                                              }
                }
                reversed={false}
                scale="auto"
                tick={
                                Object {
                                                "fontSize": 10,
                                              }
                }
                tickCount={5}
                tickFormatter={[Function]}
                type="category"
                width={0}
                xAxisId={0}
>
                <Label
                                offset={-5}
                                position="insideBottom"
                                style={
                                                Object {
                                                                "color": "#999999",
                                                                "fontSize": 12,
                                                              }
                                }
                                value="Date"
                />
</XAxis>,
              <YAxis
                allowDataOverflow={false}
                allowDecimals={true}
                allowDuplicatedCategory={true}
                axisLine={false}
                domain={
                                Array [
                                                "auto",
                                                "auto",
                                              ]
                }
                height={0}
                hide={false}
                mirror={false}
                orientation="left"
                padding={
                                Object {
                                                "bottom": 0,
                                                "top": 0,
                                              }
                }
                reversed={false}
                scale="auto"
                tick={
                                Object {
                                                "fontSize": 10,
                                              }
                }
                tickCount={10}
                tickFormatter={[Function]}
                tickLine={false}
                type="number"
                width={60}
                yAxisId={0}
>
                <Label
                                angle={-90}
                                offset={5}
                                position="insideLeft"
                                style={
                                                Object {
                                                                "color": "#999999",
                                                                "fontSize": 12,
                                                              }
                                }
                                value="Inventory"
                />
</YAxis>,
              <CartesianGrid
                fill="none"
                horizontal={true}
                horizontalFill={Array []}
                horizontalPoints={Array []}
                stroke="#ccc"
                vertical={false}
                verticalFill={Array []}
                verticalPoints={Array []}
/>,
              <Line
                activeDot={true}
                animationBegin={0}
                animationDuration={1000}
                animationEasing="ease"
                connectNulls={false}
                dataKey="inventory"
                dot={false}
                fill="#fff"
                hide={false}
                isAnimationActive={true}
                legendType="line"
                name="actual"
                onAnimationEnd={[Function]}
                onAnimationStart={[Function]}
                points={Array []}
                stroke="#817CB8"
                strokeWidth={2}
                type="monotone"
                xAxisId={0}
                yAxisId={0}
/>,
              <Line
                activeDot={true}
                animationBegin={0}
                animationDuration={1000}
                animationEasing="ease"
                connectNulls={false}
                dataKey="projectedInventory"
                dot={false}
                fill="#fff"
                hide={false}
                isAnimationActive={true}
                legendType="line"
                name="projected"
                onAnimationEnd={[Function]}
                onAnimationStart={[Function]}
                points={Array []}
                stroke="#817CB8"
                strokeDasharray="5 5"
                strokeWidth={2}
                type="monotone"
                xAxisId={0}
                yAxisId={0}
/>,
              <Tooltip
                active={false}
                animationDuration={400}
                animationEasing="ease"
                content={
                                <CumulativeInventoryTooltip
                                                dateFormat="MMM DD, YYYY"
                                />
                }
                coordinate={
                                Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                }
                cursor={
                                Object {
                                                "opacity": 0.5,
                                                "stroke": "#817CB8",
                                                "strokeWidth": 2,
                                              }
                }
                cursorStyle={Object {}}
                filterNull={true}
                isAnimationActive={true}
                itemSorter={[Function]}
                itemStyle={Object {}}
                labelStyle={Object {}}
                offset={10}
                separator=" : "
                useTranslate3d={false}
                viewBox={
                                Object {
                                                "x1": 0,
                                                "x2": 0,
                                                "y1": 0,
                                                "y2": 0,
                                              }
                }
                wrapperStyle={Object {}}
/>,
            ],
            "data": Array [
              Object {
                "inventory": 100,
                "isProjected": false,
                "timestamp": 1529336865706,
              },
            ],
            "layout": "horizontal",
            "margin": Object {
              "bottom": 5,
              "left": 5,
              "right": 5,
              "top": 5,
            },
            "reverseStackOrder": false,
            "stackOffset": "none",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowDataOverflow": false,
                "allowDecimals": true,
                "allowDuplicatedCategory": true,
                "children": <Label
                  offset={-5}
                  position="insideBottom"
                  style={
                                    Object {
                                                      "color": "#999999",
                                                      "fontSize": 12,
                                                    }
                  }
                  value="Date"
/>,
                "dataKey": "timestamp",
                "domain": Array [
                  0,
                  "auto",
                ],
                "height": 30,
                "hide": false,
                "mirror": false,
                "orientation": "bottom",
                "padding": Object {
                  "left": 0,
                  "right": 0,
                },
                "reversed": false,
                "scale": "auto",
                "tick": Object {
                  "fontSize": 10,
                },
                "tickCount": 5,
                "tickFormatter": [Function],
                "type": "category",
                "width": 0,
                "xAxisId": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "offset": -5,
                  "position": "insideBottom",
                  "style": Object {
                    "color": "#999999",
                    "fontSize": 12,
                  },
                  "value": "Date",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowDataOverflow": false,
                "allowDecimals": true,
                "allowDuplicatedCategory": true,
                "axisLine": false,
                "children": <Label
                  angle={-90}
                  offset={5}
                  position="insideLeft"
                  style={
                                    Object {
                                                      "color": "#999999",
                                                      "fontSize": 12,
                                                    }
                  }
                  value="Inventory"
/>,
                "domain": Array [
                  "auto",
                  "auto",
                ],
                "height": 0,
                "hide": false,
                "mirror": false,
                "orientation": "left",
                "padding": Object {
                  "bottom": 0,
                  "top": 0,
                },
                "reversed": false,
                "scale": "auto",
                "tick": Object {
                  "fontSize": 10,
                },
                "tickCount": 10,
                "tickFormatter": [Function],
                "tickLine": false,
                "type": "number",
                "width": 60,
                "yAxisId": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "angle": -90,
                  "offset": 5,
                  "position": "insideLeft",
                  "style": Object {
                    "color": "#999999",
                    "fontSize": 12,
                  },
                  "value": "Inventory",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fill": "none",
                "horizontal": true,
                "horizontalFill": Array [],
                "horizontalPoints": Array [],
                "stroke": "#ccc",
                "vertical": false,
                "verticalFill": Array [],
                "verticalPoints": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeDot": true,
                "animationBegin": 0,
                "animationDuration": 1000,
                "animationEasing": "ease",
                "connectNulls": false,
                "dataKey": "inventory",
                "dot": false,
                "fill": "#fff",
                "hide": false,
                "isAnimationActive": true,
                "legendType": "line",
                "name": "actual",
                "onAnimationEnd": [Function],
                "onAnimationStart": [Function],
                "points": Array [],
                "stroke": "#817CB8",
                "strokeWidth": 2,
                "type": "monotone",
                "xAxisId": 0,
                "yAxisId": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeDot": true,
                "animationBegin": 0,
                "animationDuration": 1000,
                "animationEasing": "ease",
                "connectNulls": false,
                "dataKey": "projectedInventory",
                "dot": false,
                "fill": "#fff",
                "hide": false,
                "isAnimationActive": true,
                "legendType": "line",
                "name": "projected",
                "onAnimationEnd": [Function],
                "onAnimationStart": [Function],
                "points": Array [],
                "stroke": "#817CB8",
                "strokeDasharray": "5 5",
                "strokeWidth": 2,
                "type": "monotone",
                "xAxisId": 0,
                "yAxisId": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "animationDuration": 400,
                "animationEasing": "ease",
                "content": <CumulativeInventoryTooltip
                  dateFormat="MMM DD, YYYY"
/>,
                "coordinate": Object {
                  "x": 0,
                  "y": 0,
                },
                "cursor": Object {
                  "opacity": 0.5,
                  "stroke": "#817CB8",
                  "strokeWidth": 2,
                },
                "cursorStyle": Object {},
                "filterNull": true,
                "isAnimationActive": true,
                "itemSorter": [Function],
                "itemStyle": Object {},
                "labelStyle": Object {},
                "offset": 10,
                "separator": " : ",
                "useTranslate3d": false,
                "viewBox": Object {
                  "x1": 0,
                  "x2": 0,
                  "y1": 0,
                  "y2": 0,
                },
                "wrapperStyle": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<CumulativeInventoryChart /> should render correctly with no date 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CumulativeInventoryChart
    data={Array []}
    dateFormat="MMM DD, YYYY"
    height={400}
    renderNoData={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
